<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\..\Output\SDRAM.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\..\Output\SDRAM.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sun Nov 04 22:36:44 2018
<BR><P>
<H3>Maximum Stack Usage =       1792 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
_cbCallback3 &rArr; scan_files &rArr;  scan_files (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[736]">CPU_IntDis</a>
 <LI><a href="#[737]">CPU_IntEn</a>
 <LI><a href="#[1f4]">CPU_SR_Save</a>
 <LI><a href="#[1f8]">CPU_SR_Restore</a>
 <LI><a href="#[738]">CPU_WaitForInt</a>
 <LI><a href="#[739]">CPU_WaitForExcept</a>
 <LI><a href="#[538]">CPU_CntLeadZeros</a>
 <LI><a href="#[73a]">CPU_CntTrailZeros</a>
 <LI><a href="#[73b]">CPU_RevBits</a>
 <LI><a href="#[529]">OS_CPU_FP_Reg_Push</a>
 <LI><a href="#[52a]">OS_CPU_FP_Reg_Pop</a>
 <LI><a href="#[1d6]">OSStartHighRdy</a>
 <LI><a href="#[50a]">OSCtxSw</a>
 <LI><a href="#[4f7]">OSIntCtxSw</a>
 <LI><a href="#[35]">OS_CPU_PendSVHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[49]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49]">ADC_IRQHandler</a><BR>
 <LI><a href="#[618]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[618]">WM__InvalidateRect</a><BR>
 <LI><a href="#[5fa]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5fa]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[5f4]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f4]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[2b6]">WM__SendMessage</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[226]">WM_DefaultProc</a><BR>
 <LI><a href="#[5e4]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e4]">WM__ForEachDesc</a><BR>
 <LI><a href="#[619]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[619]">_MoveDescendents</a><BR>
 <LI><a href="#[2d2]">WM_ResizeWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5c0]">WM__UpdateChildPositions</a><BR>
 <LI><a href="#[676]">_EnlargeBlocks</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[300]">_Alloc</a><BR>
 <LI><a href="#[679]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[679]">_Findy1</a><BR>
 <LI><a href="#[67b]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67b]">_Findx1</a><BR>
 <LI><a href="#[67a]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67a]">_Findx0</a><BR>
 <LI><a href="#[5e6]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e6]">_GetDialogItem</a><BR>
 <LI><a href="#[5df]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[285]">WM_DeleteWindow</a><BR>
 <LI><a href="#[6a5]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6a5]">_Screen2hWin</a><BR>
 <LI><a href="#[2ad]">printhex</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2ad]">printhex</a><BR>
 <LI><a href="#[2a9]">printdec</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a9]">printdec</a><BR>
 <LI><a href="#[2ac]">printbin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2ac]">printbin</a><BR>
 <LI><a href="#[1e0]">Usart_Senddec</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e0]">Usart_Senddec</a><BR>
 <LI><a href="#[6e7]">disk_write</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6e7]">disk_write</a><BR>
 <LI><a href="#[6e5]">disk_read</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6e5]">disk_read</a><BR>
 <LI><a href="#[61d]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61d]">_PaintTransChildren</a><BR>
 <LI><a href="#[5f9]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f9]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[3cf]">_CreateStatic</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3cf]">_CreateStatic</a><BR>
 <LI><a href="#[3c1]">_GetWindowDevice</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3c1]">_GetWindowDevice</a><BR>
 <LI><a href="#[3d1]">GUI_MEMDEV__RemoveStaticDevice</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d1]">GUI_MEMDEV__RemoveStaticDevice</a><BR>
 <LI><a href="#[6c2]">scan_files</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6c2]">scan_files</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[49]">ADC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[9b]">AppTaskCheckPeople</a> from app.o(i.AppTaskCheckPeople) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[96]">AppTaskLed1</a> from app.o(i.AppTaskLed1) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[98]">AppTaskLed3</a> from app.o(i.AppTaskLed3) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[9a]">AppTaskLight</a> from app.o(i.AppTaskLight) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[99]">AppTaskPower</a> from app.o(i.AppTaskPower) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[95]">AppTaskShowBQ</a> from app.o(i.AppTaskShowBQ) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[11b]">AppTaskStart</a> from app.o(i.AppTaskStart) referenced from app.o(i.main)
 <LI><a href="#[9d]">AppTaskTouch</a> from app.o(i.AppTaskTouch) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[9c]">AppTaskTouchScan</a> from app.o(i.AppTaskTouchScan) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[9f]">AppTaskWhere</a> from app.o(i.AppTaskWhere) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[9e]">AppTaskWindow</a> from app.o(i.AppTaskWindow) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[97]">AppTasktalk</a> from app.o(i.AppTasktalk) referenced from app.o(i.AppTaskStart)
 <LI><a href="#[a0]">BUTTON_Callback</a> from button.o(i.BUTTON_Callback) referenced from button.o(i.BUTTON_CreateUser)
 <LI><a href="#[11e]">BUTTON_CreateIndirect</a> from button.o(i.BUTTON_CreateIndirect) referenced 8 times from windowdlg.o(.constdata)
 <LI><a href="#[9]">BUTTON_DrawSkinFlex</a> from button_skinflex.o(i.BUTTON_DrawSkinFlex) referenced 2 times from button.o(.data)
 <LI><a href="#[31]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4b]">CAN1_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4c]">CAN1_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4d]">CAN1_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4a]">CAN1_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[77]">CAN2_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[78]">CAN2_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[79]">CAN2_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[76]">CAN2_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a1]">CHECKBOX_Callback</a> from checkbox.o(i.CHECKBOX_Callback) referenced from checkbox.o(i.CHECKBOX_CreateUser)
 <LI><a href="#[121]">CHECKBOX_CreateIndirect</a> from checkbox.o(i.CHECKBOX_CreateIndirect) referenced 3 times from windowdlg.o(.constdata)
 <LI><a href="#[b]">CHECKBOX_DrawSkinFlex</a> from checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex) referenced 2 times from checkbox.o(.data)
 <LI><a href="#[a]">CHECKBOX__GetButtonSize</a> from checkbox.o(i.CHECKBOX__GetButtonSize) referenced 2 times from checkbox.o(.data)
 <LI><a href="#[86]">CRYP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[85]">DCMI_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[42]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[43]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[44]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[45]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[46]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[47]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[48]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[66]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[91]">DMA2D_IRQHandler</a> from lcdconf_lin_template.o(i.DMA2D_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6f]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[70]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[71]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[72]">DMA2_Stream3_IRQHandler</a> from bsp_sdio_sd.o(i.DMA2_Stream3_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[73]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7b]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7c]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7d]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a4]">DROPDOWN_Callback</a> from dropdown.o(i.DROPDOWN_Callback) referenced from dropdown.o(i.DROPDOWN_CreateUser)
 <LI><a href="#[11d]">DROPDOWN_CreateIndirect</a> from dropdown.o(i.DROPDOWN_CreateIndirect) referenced 6 times from windowdlg.o(.constdata)
 <LI><a href="#[c]">DROPDOWN_DrawSkinFlex</a> from dropdown_skinflex.o(i.DROPDOWN_DrawSkinFlex) referenced 2 times from dropdown.o(.data)
 <LI><a href="#[34]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[74]">ETH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[75]">ETH_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3d]">EXTI0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5f]">EXTI15_10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3e]">EXTI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3f]">EXTI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[40]">EXTI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[41]">EXTI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4e]">EXTI9_5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3b]">FLASH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[67]">FMC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[88]">FPU_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a7]">FRAMEWIN_Callback</a> from framewin.o(i.FRAMEWIN_Callback) referenced from framewin.o(i.FRAMEWIN_CreateUser)
 <LI><a href="#[120]">FRAMEWIN_CreateIndirect</a> from framewin.o(i.FRAMEWIN_CreateIndirect) referenced 6 times from windowdlg.o(.constdata)
 <LI><a href="#[e]">FRAMEWIN_DrawSkinFlex</a> from framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex) referenced 4 times from framewin.o(.data)
 <LI><a href="#[d]">FRAMEWIN__GetBorderSize</a> from framewin.o(i.FRAMEWIN__GetBorderSize) referenced 2 times from framewin.o(.data)
 <LI><a href="#[a8]">FRAMEWIN__cbClient</a> from framewin.o(i.FRAMEWIN__cbClient) referenced from framewin.o(i.FRAMEWIN_CreateUser)
 <LI><a href="#[ee]">GT9147_Scan</a> from gt9147.o(i.GT9147_Scan) referenced from touch.o(i.TP_Init)
 <LI><a href="#[15d]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced 2 times from f8x16.o(.constdata)
 <LI><a href="#[15e]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced 2 times from f8x16.o(.constdata)
 <LI><a href="#[15f]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced 2 times from f8x16.o(.constdata)
 <LI><a href="#[160]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced 2 times from f8x16.o(.constdata)
 <LI><a href="#[161]">GUIPROP_DispChar</a> from gui_charp.o(i.GUIPROP_DispChar) referenced 5 times from f16b_ascii.o(.constdata)
 <LI><a href="#[162]">GUIPROP_GetCharDistX</a> from gui_charp.o(i.GUIPROP_GetCharDistX) referenced 5 times from f16b_ascii.o(.constdata)
 <LI><a href="#[163]">GUIPROP_GetFontInfo</a> from gui_charp.o(i.GUIPROP_GetFontInfo) referenced 5 times from f16b_ascii.o(.constdata)
 <LI><a href="#[164]">GUIPROP_IsInFont</a> from gui_charp.o(i.GUIPROP_IsInFont) referenced 5 times from f16b_ascii.o(.constdata)
 <LI><a href="#[e7]">GUI_DrawGradientH</a> from gui_drawgradient.o(i.GUI_DrawGradientH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[ea]">GUI_DrawGradientV</a> from gui_drawgradient.o(i.GUI_DrawGradientV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[ad]">GUI_GIF__GetData</a> from gui_gif.o(i.GUI_GIF__GetData) referenced from gui_gif_drawscaled.o(i.GUI_GIF_DrawSubScaled)
 <LI><a href="#[ad]">GUI_GIF__GetData</a> from gui_gif.o(i.GUI_GIF__GetData) referenced from gui_gif.o(i.GUI_GIF_GetImageInfo)
 <LI><a href="#[ad]">GUI_GIF__GetData</a> from gui_gif.o(i.GUI_GIF__GetData) referenced from gui_gif.o(i.GUI_GIF_GetInfo)
 <LI><a href="#[b0]">GUI_JPEG__GetData</a> from gui_jpeg.o(i.GUI_JPEG__GetData) referenced from gui_jpeg.o(i.GUI_JPEG_Draw)
 <LI><a href="#[b0]">GUI_JPEG__GetData</a> from gui_jpeg.o(i.GUI_JPEG__GetData) referenced from gui_jpeg.o(i.GUI_JPEG_GetInfo)
 <LI><a href="#[1a]">GUI_MEMDEV_CopyToLCD</a> from guidev.o(i.GUI_MEMDEV_CopyToLCD) referenced 2 times from guidev_moveandfade.o(.data)
 <LI><a href="#[10f]">GUI_MEMDEV_Paint1Static</a> from guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static) referenced from wm.o(i._Paint1)
 <LI><a href="#[19]">GUI_MEMDEV_Write</a> from guidev_write.o(i.GUI_MEMDEV_Write) referenced 2 times from guidev_moveandfade.o(.data)
 <LI><a href="#[b6]">GUI_MEMDEV__CalcParaFadeIn</a> from guidev_moveandfadewin.o(i.GUI_MEMDEV__CalcParaFadeIn) referenced from guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeInWindow)
 <LI><a href="#[10c]">GUI_MEMDEV__WriteToActiveAlpha</a> from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha) referenced from guidev_32.o(i._GetDevFunc)
 <LI><a href="#[10b]">GUI_MEMDEV__WriteToActiveOpaque</a> from guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque) referenced from guidev_16.o(i._GetDevFunc)
 <LI><a href="#[3ea]">GUI_SetAlpha</a> from gui_setalpha.o(i.GUI_SetAlpha) referenced from gui_setalpha.o(i.GUI_SetAlpha)
 <LI><a href="#[bb]">GUI_TIMER_Exec</a> from gui_timer.o(i.GUI_TIMER_Exec) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[1a1]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1a0]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1a2]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(i.GUI_USAGE_BM_Clear) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1a4]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[18]">GUI_X_ExecIdle</a> from gui_x_ucos.o(i.GUI_X_ExecIdle) referenced 2 times from gui_waitevent.o(.data)
 <LI><a href="#[4]">GUI__MixColors</a> from gui__alpha.o(i.GUI__MixColors) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[5]">GUI__MixColorsBulk</a> from gui__alpha.o(i.GUI__MixColorsBulk) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[87]">HASH_RNG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[c1]">HEADER_Callback</a> from header.o(i.HEADER_Callback) referenced from header.o(i.HEADER_CreateUser)
 <LI><a href="#[f]">HEADER_DrawSkinFlex</a> from header_skinflex.o(i.HEADER_DrawSkinFlex) referenced 2 times from header.o(.data)
 <LI><a href="#[2f]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[57]">I2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[56]">I2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[59]">I2C2_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[58]">I2C2_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[80]">I2C3_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7f]">I2C3_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[c5]">ICONVIEW_Callback</a> from iconview.o(i.ICONVIEW_Callback) referenced from iconview.o(i.ICONVIEW_CreateUser)
 <LI><a href="#[c6]">ICONVIEW_OwnerDraw</a> from iconview.o(i.ICONVIEW_OwnerDraw) referenced from iconview.o(i.ICONVIEW_CreateUser)
 <LI><a href="#[c3]">ICONVIEW__DrawText</a> from iconview.o(i.ICONVIEW__DrawText) referenced from iconview.o(i.ICONVIEW_AddBitmapItem)
 <LI><a href="#[2c]">LCD_AA_MixColors16</a> from lcd_aa.o(i.LCD_AA_MixColors16) referenced 2 times from lcd_aa.o(.data)
 <LI><a href="#[12a]">LCD_Color2Index_8666</a> from guicc_8666.o(i.LCD_Color2Index_8666) referenced from guicc_8666.o(.constdata)
 <LI><a href="#[ac]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[ac]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientV)
 <LI><a href="#[141]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[ab]">LCD_DrawVLine</a> from lcd.o(i.LCD_DrawVLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientH)
 <LI><a href="#[6]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[12b]">LCD_Index2Color_8666</a> from guicc_8666.o(i.LCD_Index2Color_8666) referenced from guicc_8666.o(.constdata)
 <LI><a href="#[bf]">LCD_Index2Color_888</a> from guicc_888_index2color.o(i.LCD_Index2Color_888) referenced from guicc_888.o(.constdata)
 <LI><a href="#[bf]">LCD_Index2Color_888</a> from guicc_888_index2color.o(i.LCD_Index2Color_888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[be]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced 2 times from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[be]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[be]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui_drawbitmap_8888.o(i._DrawBitmap_8888)
 <LI><a href="#[be]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guidev_writetoactivealpha.o(i._WriteToActiveAlpha)
 <LI><a href="#[145]">LCD_Index2Color_M565</a> from guicc_m565.o(i.LCD_Index2Color_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[14a]">LCD_Index2Color_M888</a> from guicc_m888_index2color.o(i.LCD_Index2Color_M888) referenced from guicc_m888.o(.constdata)
 <LI><a href="#[13d]">LCD_Index2Color_M8888I</a> from guicc_m8888i_index2color.o(i.LCD_Index2Color_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[db]">LISTBOX_Callback</a> from listbox.o(i.LISTBOX_Callback) referenced from listbox.o(i.LISTBOX_CreateUser)
 <LI><a href="#[dc]">LISTBOX_OwnerDraw</a> from listbox.o(i.LISTBOX_OwnerDraw) referenced from listbox.o(i.LISTBOX_CreateUser)
 <LI><a href="#[dd]">LISTVIEW_Callback</a> from listview.o(i.LISTVIEW_Callback) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[123]">LISTVIEW_CreateIndirect</a> from listview.o(i.LISTVIEW_CreateIndirect) referenced from windowdlg.o(.constdata)
 <LI><a href="#[de]">LISTVIEW_OwnerDraw</a> from listview.o(i.LISTVIEW_OwnerDraw) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[90]">LTDC_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8f]">LTDC_IRQHandler</a> from lcdconf_lin_template.o(i.LTDC_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[30]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2e]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[35]">OS_CPU_PendSVHandler</a> from os_cpu_a.o(CODE) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[36]">OS_CPU_SysTickHandler</a> from os_cpu_c.o(i.OS_CPU_SysTickHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e0]">OS_IdleTask</a> from os_core.o(i.OS_IdleTask) referenced from os_core.o(i.OS_IdleTaskInit)
 <LI><a href="#[e1]">OS_StatTask</a> from os_stat.o(i.OS_StatTask) referenced from os_stat.o(i.OS_StatTaskInit)
 <LI><a href="#[df]">OS_TaskReturn</a> from os_task.o(i.OS_TaskReturn) referenced from os_cpu_c.o(i.OSTaskStkInit)
 <LI><a href="#[e2]">OS_TickTask</a> from os_tick.o(i.OS_TickTask) referenced from os_tick.o(i.OS_TickTaskInit)
 <LI><a href="#[e3]">OS_TmrTask</a> from os_tmr.o(i.OS_TmrTask) referenced from os_tmr.o(i.OS_TmrInit)
 <LI><a href="#[7a]">OTG_FS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[61]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[82]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[81]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[84]">OTG_HS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[83]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e4]">PROGBAR_Callback</a> from progbar.o(i.PROGBAR_Callback) referenced from progbar.o(i.PROGBAR_CreateUser)
 <LI><a href="#[124]">PROGBAR_CreateIndirect</a> from progbar.o(i.PROGBAR_CreateIndirect) referenced from windowdlg.o(.constdata)
 <LI><a href="#[10]">PROGBAR_DrawSkinFlex</a> from progbar_skinflex.o(i.PROGBAR_DrawSkinFlex) referenced 2 times from progbar.o(.data)
 <LI><a href="#[38]">PVD_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3c]">RCC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[60]">RTC_Alarm_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3a]">RTC_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2d]">Reset_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8e]">SAI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e5]">SCROLLBAR_Callback</a> from scrollbar.o(i.SCROLLBAR_Callback) referenced from scrollbar.o(i.SCROLLBAR_CreateUser)
 <LI><a href="#[11]">SCROLLBAR_DrawSkinFlex</a> from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex) referenced 2 times from scrollbar.o(.data)
 <LI><a href="#[68]">SDIO_IRQHandler</a> from bsp_sdio_sd.o(i.SDIO_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ec]">SLIDER_Callback</a> from slider.o(i.SLIDER_Callback) referenced from slider.o(i.SLIDER_CreateUser)
 <LI><a href="#[122]">SLIDER_CreateIndirect</a> from slider.o(i.SLIDER_CreateIndirect) referenced 2 times from windowdlg.o(.constdata)
 <LI><a href="#[12]">SLIDER_DrawSkinFlex</a> from slider_skinflex.o(i.SLIDER_DrawSkinFlex) referenced 2 times from slider.o(.data)
 <LI><a href="#[5a]">SPI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5b]">SPI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6a]">SPI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8b]">SPI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8c]">SPI5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8d]">SPI6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[33]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[93]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[39]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ed]">TEXT_Callback</a> from text.o(i.TEXT_Callback) referenced from text.o(i.TEXT_CreateUser)
 <LI><a href="#[11f]">TEXT_CreateIndirect</a> from text.o(i.TEXT_CreateIndirect) referenced 18 times from windowdlg.o(.constdata)
 <LI><a href="#[4f]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[52]">TIM1_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[51]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[50]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[53]">TIM2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[54]">TIM3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[55]">TIM4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[69]">TIM5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6d]">TIM6_DAC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6e]">TIM7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[62]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[65]">TIM8_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[64]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[63]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3]">TP_Adjust</a> from touch.o(i.TP_Adjust) referenced 2 times from touch.o(.data)
 <LI><a href="#[1]">TP_Init</a> from touch.o(i.TP_Init) referenced 2 times from touch.o(.data)
 <LI><a href="#[2]">TP_Scan</a> from touch.o(i.TP_Scan) referenced 2 times from touch.o(.data)
 <LI><a href="#[6b]">UART4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6c]">UART5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[89]">UART7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8a]">UART8_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5c]">USART1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5d]">USART2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5e]">USART3_IRQHandler</a> from stm32f4xx_it.o(i.USART3_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7e]">USART6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[32]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ef]">WINDOW_Callback</a> from window.o(i.WINDOW_Callback) referenced from window.o(i.WINDOW_CreateUser)
 <LI><a href="#[11c]">WINDOW_CreateIndirect</a> from window.o(i.WINDOW_CreateIndirect) referenced 2 times from windowdlg.o(.constdata)
 <LI><a href="#[ba]">WM_HandlePID</a> from wm_touch.o(i.WM_HandlePID) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[110]">WM__Paint1</a> from wm.o(i.WM__Paint1) referenced from wm.o(i._Paint1)
 <LI><a href="#[37]">WWDG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[b7]">_CalcParaFadeOut</a> from guidev_moveandfadewin.o(i._CalcParaFadeOut) referenced from guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeOutWindow)
 <LI><a href="#[f5]">_CalcPositions</a> from scrollbar_skin.o(i._CalcPositions) referenced from scrollbar_skin.o(i._Create)
 <LI><a href="#[187]">_CalcSizeOfChar</a> from gui_uc_encodenone.o(i._CalcSizeOfChar) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[ae]">_ClearUnusedPixelsScaled</a> from gui_gif_drawscaled.o(i._ClearUnusedPixelsScaled) referenced from gui_gif_drawscaled.o(i.GUI_GIF_DrawSubScaledEx)
 <LI><a href="#[174]">_Color2Index</a> from gui_setalpha.o(i._Color2Index) referenced from gui_setalpha.o(.constdata)
 <LI><a href="#[147]">_Color2IndexBulk</a> from guicc_m565.o(i._Color2IndexBulk) referenced 5 times from guicc_m565.o(.constdata)
 <LI><a href="#[128]">_Color2IndexBulk_1616I</a> from guicc_1616i.o(i._Color2IndexBulk_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[130]">_Color2IndexBulk_88666I</a> from guicc_88666i.o(i._Color2IndexBulk_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[135]">_Color2IndexBulk_M1555I</a> from guicc_m1555i.o(i._Color2IndexBulk_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[cf]">_Color2IndexBulk_M1555I_DMA2D</a> from lcdconf_lin_template.o(i._Color2IndexBulk_M1555I_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[13a]">_Color2IndexBulk_M4444I</a> from guicc_m4444i.o(i._Color2IndexBulk_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[d3]">_Color2IndexBulk_M4444I_DMA2D</a> from lcdconf_lin_template.o(i._Color2IndexBulk_M4444I_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[d1]">_Color2IndexBulk_M565_DMA2D</a> from lcdconf_lin_template.o(i._Color2IndexBulk_M565_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[13f]">_Color2IndexBulk_M8888I</a> from guicc_m8888i.o(i._Color2IndexBulk_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[d7]">_Color2IndexBulk_M8888I_DMA2D</a> from lcdconf_lin_template.o(i._Color2IndexBulk_M8888I_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[d5]">_Color2IndexBulk_M888_DMA2D</a> from lcdconf_lin_template.o(i._Color2IndexBulk_M888_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[189]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[171]">_Color2Index_16</a> from guicc_16.o(i._Color2Index_16) referenced from guicc_16.o(.constdata)
 <LI><a href="#[125]">_Color2Index_1616I</a> from guicc_1616i.o(i._Color2Index_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[12d]">_Color2Index_88666I</a> from guicc_88666i.o(i._Color2Index_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[18c]">_Color2Index_888</a> from guicc_888.o(i._Color2Index_888) referenced from guicc_888.o(.constdata)
 <LI><a href="#[190]">_Color2Index_8888</a> from guicc_8888.o(i._Color2Index_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[132]">_Color2Index_M1555I</a> from guicc_m1555i.o(i._Color2Index_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[137]">_Color2Index_M4444I</a> from guicc_m4444i.o(i._Color2Index_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[144]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[149]">_Color2Index_M888</a> from guicc_m888.o(i._Color2Index_M888) referenced from guicc_m888.o(.constdata)
 <LI><a href="#[13c]">_Color2Index_M8888I</a> from guicc_m8888i.o(i._Color2Index_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[107]">_CopyBuffer</a> from guidrv_lin_16.o(i._CopyBuffer) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[1c]">_Create</a> from button_skin.o(i._Create) referenced 16 times from button_skin.o(.data)
 <LI><a href="#[d8]">_DMA_AlphaBlending</a> from lcdconf_lin_template.o(i._DMA_AlphaBlending) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[f9]">_DecodeBlockAC_First</a> from gui_jpeg.o(i._DecodeBlockAC_First) referenced from gui_jpeg.o(i._DecodeProgressive)
 <LI><a href="#[b4]">_DecodeBlockAC_FirstBanding</a> from gui_jpeg.o(i._DecodeBlockAC_FirstBanding) referenced from gui_jpeg.o(i.GUI_JPEG__DecodeProgressiveBanding)
 <LI><a href="#[f8]">_DecodeBlockAC_Refine</a> from gui_jpeg.o(i._DecodeBlockAC_Refine) referenced from gui_jpeg.o(i._DecodeProgressive)
 <LI><a href="#[b3]">_DecodeBlockAC_RefineBanding</a> from gui_jpeg.o(i._DecodeBlockAC_RefineBanding) referenced from gui_jpeg.o(i.GUI_JPEG__DecodeProgressiveBanding)
 <LI><a href="#[f7]">_DecodeBlockDC_First</a> from gui_jpeg.o(i._DecodeBlockDC_First) referenced from gui_jpeg.o(i._DecodeProgressive)
 <LI><a href="#[b2]">_DecodeBlockDC_FirstBanding</a> from gui_jpeg.o(i._DecodeBlockDC_FirstBanding) referenced from gui_jpeg.o(i.GUI_JPEG__DecodeProgressiveBanding)
 <LI><a href="#[f6]">_DecodeBlockDC_Refine</a> from gui_jpeg.o(i._DecodeBlockDC_Refine) referenced from gui_jpeg.o(i._DecodeProgressive)
 <LI><a href="#[b1]">_DecodeBlockDC_RefineBanding</a> from gui_jpeg.o(i._DecodeBlockDC_RefineBanding) referenced from gui_jpeg.o(i.GUI_JPEG__DecodeProgressiveBanding)
 <LI><a href="#[1b6]">_Draw</a> from gui_draw_self.o(i._Draw) referenced from gui_draw_self.o(.constdata)
 <LI><a href="#[a5]">_Draw</a> from framewin_buttonclose.o(i._Draw) referenced from framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
 <LI><a href="#[e9]">_DrawBackgroundH</a> from scrollbar_skinflex.o(i._DrawBackgroundH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[e6]">_DrawBackgroundV</a> from scrollbar_skinflex.o(i._DrawBackgroundV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[151]">_DrawBitmap</a> from guidrv_lin_16.o(i._DrawBitmap) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[c2]">_DrawBitmap</a> from iconview.o(i._DrawBitmap) referenced from iconview.o(i.ICONVIEW_AddBitmapItem)
 <LI><a href="#[143]">_DrawBitmapHW_8888</a> from gui_drawbitmap_8888.o(i._DrawBitmapHW_8888) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[142]">_DrawBitmap_8888</a> from gui_drawbitmap_8888.o(i._DrawBitmap_8888) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[1a7]">_DrawDown</a> from widget_effect_none.o(i._DrawDown) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[1a8]">_DrawDownRect</a> from widget_effect_none.o(i._DrawDownRect) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[1a9]">_DrawFlat</a> from widget_effect_none.o(i._DrawFlat) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[af]">_DrawFromDataBlockScaled</a> from gui_gif_drawscaled.o(i._DrawFromDataBlockScaled) referenced from gui_gif_drawscaled.o(i.GUI_GIF_DrawSubScaledEx)
 <LI><a href="#[eb]">_DrawGraspH</a> from scrollbar_skinflex.o(i._DrawGraspH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[e8]">_DrawGraspV</a> from scrollbar_skinflex.o(i._DrawGraspV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[152]">_DrawHLine</a> from guidrv_lin_16.o(i._DrawHLine) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[1a5]">_DrawUp</a> from widget_effect_none.o(i._DrawUp) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[1a6]">_DrawUpRect</a> from widget_effect_none.o(i._DrawUpRect) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[153]">_DrawVLine</a> from guidrv_lin_16.o(i._DrawVLine) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[188]">_Encode</a> from gui_uc_encodenone.o(i._Encode) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[154]">_FillRect</a> from guidrv_lin_16.o(i._FillRect) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[1a3]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(i._GUI_USAGE_BM_Delete) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[21]">_GetBorderSize</a> from framewin_skin.o(i._GetBorderSize) referenced 2 times from framewin_skin.o(.data)
 <LI><a href="#[185]">_GetCharCode</a> from gui_uc_encodenone.o(i._GetCharCode) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[186]">_GetCharSize</a> from gui_uc_encodenone.o(i._GetCharSize) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[16]">_GetCharWrap</a> from gui__wrap.o(i._GetCharWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[15b]">_GetDevData</a> from guidrv_lin_16.o(i._GetDevData) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[159]">_GetDevFunc</a> from guidrv_lin_16.o(i._GetDevFunc) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[15a]">_GetDevProp</a> from guidrv_lin_16.o(i._GetDevProp) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[c4]">_GetImageSizes</a> from iconview.o(i._GetImageSizes) referenced from iconview.o(i.ICONVIEW_AddBitmapItem)
 <LI><a href="#[176]">_GetIndexMask</a> from gui_setalpha.o(i._GetIndexMask) referenced from gui_setalpha.o(.constdata)
 <LI><a href="#[18b]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[173]">_GetIndexMask_16</a> from guicc_16.o(i._GetIndexMask_16) referenced from guicc_16.o(.constdata)
 <LI><a href="#[127]">_GetIndexMask_1616I</a> from guicc_1616i.o(i._GetIndexMask_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[12c]">_GetIndexMask_8666</a> from guicc_8666.o(i._GetIndexMask_8666) referenced from guicc_8666.o(.constdata)
 <LI><a href="#[12f]">_GetIndexMask_88666I</a> from guicc_88666i.o(i._GetIndexMask_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[18d]">_GetIndexMask_888</a> from guicc_888.o(i._GetIndexMask_888) referenced from guicc_888.o(.constdata)
 <LI><a href="#[191]">_GetIndexMask_8888</a> from guicc_8888.o(i._GetIndexMask_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[134]">_GetIndexMask_M1555I</a> from guicc_m1555i.o(i._GetIndexMask_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[139]">_GetIndexMask_M4444I</a> from guicc_m4444i.o(i._GetIndexMask_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[146]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[14b]">_GetIndexMask_M888</a> from guicc_m888.o(i._GetIndexMask_M888) referenced from guicc_m888.o(.constdata)
 <LI><a href="#[13e]">_GetIndexMask_M8888I</a> from guicc_m8888i.o(i._GetIndexMask_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[155]">_GetPixelIndex</a> from guidrv_lin_16.o(i._GetPixelIndex) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[fe]">_GetPos</a> from guidrv_lin_16.o(i._GetPos) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[15c]">_GetRect</a> from guidrv_lin_16.o(i._GetRect) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[111]">_GetStuff</a> from gui_jpeg.o(i._GetStuff) referenced from gui_jpeg.o(i._StoreU8)
 <LI><a href="#[b5]">_GetU8</a> from gui_jpeg.o(i._GetU8) referenced from gui_jpeg.o(i.GUI_JPEG__ReadUntilSOF)
 <LI><a href="#[b5]">_GetU8</a> from gui_jpeg.o(i._GetU8) referenced from gui_jpeg.o(i._GetStuff)
 <LI><a href="#[15]">_GetWordWrap</a> from gui__wrap.o(i._GetWordWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[1b7]">_GetXSize</a> from gui_draw_self.o(i._GetXSize) referenced from gui_draw_self.o(.constdata)
 <LI><a href="#[1b8]">_GetYSize</a> from gui_draw_self.o(i._GetYSize) referenced from gui_draw_self.o(.constdata)
 <LI><a href="#[175]">_Index2Color</a> from gui_setalpha.o(i._Index2Color) referenced from gui_setalpha.o(.constdata)
 <LI><a href="#[148]">_Index2ColorBulk</a> from guicc_m565.o(i._Index2ColorBulk) referenced 5 times from guicc_m565.o(.constdata)
 <LI><a href="#[129]">_Index2ColorBulk_1616I</a> from guicc_1616i.o(i._Index2ColorBulk_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[131]">_Index2ColorBulk_88666I</a> from guicc_88666i.o(i._Index2ColorBulk_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[136]">_Index2ColorBulk_M1555I</a> from guicc_m1555i.o(i._Index2ColorBulk_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[ce]">_Index2ColorBulk_M1555I_DMA2D</a> from lcdconf_lin_template.o(i._Index2ColorBulk_M1555I_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[13b]">_Index2ColorBulk_M4444I</a> from guicc_m4444i.o(i._Index2ColorBulk_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[d2]">_Index2ColorBulk_M4444I_DMA2D</a> from lcdconf_lin_template.o(i._Index2ColorBulk_M4444I_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[d0]">_Index2ColorBulk_M565_DMA2D</a> from lcdconf_lin_template.o(i._Index2ColorBulk_M565_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[140]">_Index2ColorBulk_M8888I</a> from guicc_m8888i.o(i._Index2ColorBulk_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[d6]">_Index2ColorBulk_M8888I_DMA2D</a> from lcdconf_lin_template.o(i._Index2ColorBulk_M8888I_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[d4]">_Index2ColorBulk_M888_DMA2D</a> from lcdconf_lin_template.o(i._Index2ColorBulk_M888_DMA2D) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[18a]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[172]">_Index2Color_16</a> from guicc_16.o(i._Index2Color_16) referenced from guicc_16.o(.constdata)
 <LI><a href="#[126]">_Index2Color_1616I</a> from guicc_1616i.o(i._Index2Color_1616I) referenced from guicc_1616i.o(.constdata)
 <LI><a href="#[12e]">_Index2Color_88666I</a> from guicc_88666i.o(i._Index2Color_88666I) referenced from guicc_88666i.o(.constdata)
 <LI><a href="#[133]">_Index2Color_M1555I</a> from guicc_m1555i.o(i._Index2Color_M1555I) referenced from guicc_m1555i.o(.constdata)
 <LI><a href="#[138]">_Index2Color_M4444I</a> from guicc_m4444i.o(i._Index2Color_M4444I) referenced from guicc_m4444i.o(.constdata)
 <LI><a href="#[101]">_Init</a> from guidrv_lin_16.o(i._Init) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[c8]">_LCD_CopyBuffer</a> from lcdconf_lin_template.o(i._LCD_CopyBuffer) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[c9]">_LCD_CopyRect</a> from lcdconf_lin_template.o(i._LCD_CopyRect) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[cc]">_LCD_DrawBitmap16bpp</a> from lcdconf_lin_template.o(i._LCD_DrawBitmap16bpp) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[cd]">_LCD_DrawBitmap32bpp</a> from lcdconf_lin_template.o(i._LCD_DrawBitmap32bpp) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[cb]">_LCD_DrawBitmap8bpp</a> from lcdconf_lin_template.o(i._LCD_DrawBitmap8bpp) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[ca]">_LCD_FillRect</a> from lcdconf_lin_template.o(i._LCD_FillRect) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[ca]">_LCD_FillRect</a> from lcdconf_lin_template.o(i._LCD_FillRect) referenced from lcdconf_lin_template.o(i._LCD_FillRect)
 <LI><a href="#[d9]">_LCD_GetpPalConvTable</a> from lcdconf_lin_template.o(i._LCD_GetpPalConvTable) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[da]">_LCD_MixColorsBulk</a> from lcdconf_lin_template.o(i._LCD_MixColorsBulk) referenced from lcdconf_lin_template.o(i.LCD_X_Config)
 <LI><a href="#[17]">_Log2VisBuffered</a> from gui_charline.o(i._Log2VisBuffered) referenced 2 times from gui_charline.o(.data)
 <LI><a href="#[103]">_Off</a> from guidrv_lin_16.o(i._Off) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[102]">_On</a> from guidrv_lin_16.o(i._On) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[a9]">_OnExit</a> from gui_task.o(i._OnExit) referenced from gui_task.o(i.GUITASK_Init)
 <LI><a href="#[aa]">_OnExit</a> from gui_cursor.o(i._OnExit) referenced from gui_cursor.o(i.GUI_CURSOR_SelectEx)
 <LI><a href="#[b8]">_OnExit</a> from gui_multibuf.o(i._OnExit) referenced from gui_multibuf.o(i.GUI_MULTIBUF_ConfigEx)
 <LI><a href="#[b9]">_OnExit</a> from gui_pid.o(i._OnExit) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[bc]">_OnExit</a> from gui_timer.o(i._OnExit) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[bd]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI__Config)
 <LI><a href="#[c0]">_OnExit</a> from gui__alpha.o(i._OnExit) referenced from gui__alpha.o(i.GUI__GetAlphaBuffer)
 <LI><a href="#[c7]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[f2]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[10e]">_OnExit</a> from gui_setalpha.o(i._OnExit) referenced from gui_setalpha.o(i._InitAlpha)
 <LI><a href="#[8]">_OnTouchDefault</a> from button.o(i._OnTouchDefault) referenced 2 times from button.o(.data)
 <LI><a href="#[1b]">_Paint</a> from button_skin.o(i._Paint) referenced 16 times from button_skin.o(.data)
 <LI><a href="#[10a]">_ReadRect</a> from guidrv_lin_16.o(i._ReadRect) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[10d]">_ReadRectFromMemdev</a> from gui_setalpha.o(i._ReadRectFromMemdev) referenced from gui_setalpha.o(i._GetLine)
 <LI><a href="#[ff]">_SetAlpha</a> from guidrv_lin_16.o(i._SetAlpha) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[104]">_SetAlphaMode</a> from guidrv_lin_16.o(i._SetAlphaMode) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[14f]">_SetBkColor</a> from lcd.o(i._SetBkColor) referenced from lcd.o(.constdata)
 <LI><a href="#[106]">_SetChroma</a> from guidrv_lin_16.o(i._SetChroma) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[105]">_SetChromaMode</a> from guidrv_lin_16.o(i._SetChromaMode) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[14e]">_SetColor</a> from lcd.o(i._SetColor) referenced from lcd.o(.constdata)
 <LI><a href="#[109]">_SetDevFunc</a> from guidrv_lin_16.o(i._SetDevFunc) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[150]">_SetDrawMode</a> from lcd.o(i._SetDrawMode) referenced from lcd.o(.constdata)
 <LI><a href="#[158]">_SetOrg</a> from guidrv_lin_16.o(i._SetOrg) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[7]">_SetPixelAlpha</a> from gui_drawbitmap_8888.o(i._SetPixelAlpha) referenced 2 times from gui_drawbitmap_8888.o(.data)
 <LI><a href="#[156]">_SetPixelIndex</a> from guidrv_lin_16.o(i._SetPixelIndex) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[fd]">_SetPos</a> from guidrv_lin_16.o(i._SetPos) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[fc]">_SetSize</a> from guidrv_lin_16.o(i._SetSize) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[fa]">_SetVRAMAddr</a> from guidrv_lin_16.o(i._SetVRAMAddr) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[fb]">_SetVSize</a> from guidrv_lin_16.o(i._SetVSize) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[100]">_SetVis</a> from guidrv_lin_16.o(i._SetVis) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[108]">_ShowBuffer</a> from guidrv_lin_16.o(i._ShowBuffer) referenced from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[157]">_XorPixel</a> from guidrv_lin_16.o(i._XorPixel) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[94]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[f1]">_cbBackWin</a> from wm.o(i._cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[11a]">_cbCallback1</a> from windowdlg.o(i._cbCallback1) referenced from windowdlg.o(i._cbDialog2)
 <LI><a href="#[119]">_cbCallback2</a> from windowdlg.o(i._cbCallback2) referenced from windowdlg.o(i._cbDialog2)
 <LI><a href="#[118]">_cbCallback3</a> from windowdlg.o(i._cbCallback3) referenced from windowdlg.o(i._cbDialog2)
 <LI><a href="#[116]">_cbCallback4</a> from windowdlg.o(i._cbCallback4) referenced from windowdlg.o(i._cbDialog2)
 <LI><a href="#[117]">_cbCallback5</a> from windowdlg.o(i._cbCallback5) referenced from windowdlg.o(i._cbDialog2)
 <LI><a href="#[a6]">_cbClose</a> from framewin_buttonclose.o(i._cbClose) referenced from framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
 <LI><a href="#[a2]">_cbDialog</a> from windowdlg.o(i._cbDialog) referenced from windowdlg.o(i.CreateWindow)
 <LI><a href="#[a3]">_cbDialog2</a> from windowdlg.o(i._cbDialog2) referenced from windowdlg.o(i.CreateWindow2)
 <LI><a href="#[114]">_cbDialogProgress</a> from windowdlg.o(i._cbDialogProgress) referenced from windowdlg.o(i._cbCallback2)
 <LI><a href="#[114]">_cbDialogProgress</a> from windowdlg.o(i._cbDialogProgress) referenced from windowdlg.o(i._cbCallback5)
 <LI><a href="#[115]">_cbDialogProgress1</a> from windowdlg.o(i._cbDialogProgress1) referenced from windowdlg.o(i._cbDialog)
 <LI><a href="#[f4]">_cbInvalidateOne</a> from wm_bringtotop.o(i._cbInvalidateOne) referenced from wm_bringtotop.o(i._BringToTop)
 <LI><a href="#[f3]">_cbPaintMemDev</a> from wm.o(i._cbPaintMemDev) referenced from wm.o(i.WM__Paint)
 <LI><a href="#[f0]">_cbTimer</a> from wm_timer.o(i._cbTimer) referenced from wm_timer.o(i.WM_CreateTimer)
 <LI><a href="#[113]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[112]">fputc</a> from bsp_usart3.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[92]">main</a> from app.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[14]">memcpy</a> from memmove.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[13]">memset</a> from memseta.o(.text) referenced 2 times from gui__private.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[94]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[730]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1bd]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1d4]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[731]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[732]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[733]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[734]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[735]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[2d]"></a>Reset_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[736]"></a>CPU_IntDis</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[737]"></a>CPU_IntEn</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[1f4]"></a>CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_NameClr
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPend
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTask
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_SegCreate
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTask
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateTimeout
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateDly
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskQPost
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1f8]"></a>CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_NameClr
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPend
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTask
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_SegCreate
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTask
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateTimeout
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateDly
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskQPost
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[738]"></a>CPU_WaitForInt</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[739]"></a>CPU_WaitForExcept</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[538]"></a>CPU_CntLeadZeros</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioGetHighest
</UL>

<P><STRONG><a name="[73a]"></a>CPU_CntTrailZeros</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[73b]"></a>CPU_RevBits</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[1bf]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1c2]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
</UL>

<P><STRONG><a name="[73c]"></a>____aeabi_memcpy8$ret$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[73d]"></a>___aeabi_memmove4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[73e]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[6e6]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[22d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[6a4]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
</UL>

<P><STRONG><a name="[14]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[73f]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[1c4]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_lp_quat
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_6x_lp_quat
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[740]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[741]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1c3]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[24e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateHuffmanTable
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX__GetButtonSize
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[742]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[13]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[72f]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[280]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
</UL>

<P><STRONG><a name="[2f1]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>

<P><STRONG><a name="[40e]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[42e]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
</UL>

<P><STRONG><a name="[1c5]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conversion
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1c9]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[1ca]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[1cb]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1cc]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1cd]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[1ce]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conversion
</UL>

<P><STRONG><a name="[1cf]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
</UL>

<P><STRONG><a name="[1d0]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conversion
</UL>

<P><STRONG><a name="[1e1]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskPower
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLight
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[743]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[1e4]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLight
</UL>

<P><STRONG><a name="[1e2]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLight
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1d1]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
</UL>

<P><STRONG><a name="[744]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[6c7]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1c1]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[745]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[1c0]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[746]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[747]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[748]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[749]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[1c8]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1c7]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[6c1]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[74a]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1be]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[74b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[74c]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[74d]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[529]"></a>OS_CPU_FP_Reg_Push</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(CODE))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>

<P><STRONG><a name="[52a]"></a>OS_CPU_FP_Reg_Pop</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(CODE))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>

<P><STRONG><a name="[1d6]"></a>OSStartHighRdy</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSStartHighRdy &rArr; OSTaskSwHook
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[50a]"></a>OSCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(CODE))
<BR><BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>

<P><STRONG><a name="[4f7]"></a>OSIntCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(CODE))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[35]"></a>OS_CPU_PendSVHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OS_CPU_PendSVHandler &rArr; OSTaskSwHook
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[56a]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[564]"></a>ADC_CommonInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_CommonInit))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[569]"></a>ADC_DMACmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[568]"></a>ADC_DMARequestAfterLastTransferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_DMARequestAfterLastTransferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[566]"></a>ADC_Init</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f4xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[567]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f4xx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[56b]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_SoftwareStartConv))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[565]"></a>ADC_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[202]"></a>BSP_CPU_ClkFreq</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, bsp.o(i.BSP_CPU_ClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = BSP_CPU_ClkFreq &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrInit
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Tick_Init
</UL>

<P><STRONG><a name="[1ea]"></a>BSP_Init</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, bsp.o(i.BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = BSP_Init &rArr; GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CfgGpio
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Init
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_Config
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RED_GPIO_Config
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050ReadID
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT_GPIO_Config
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART6_Config
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART3_Config
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[1eb]"></a>BSP_Tick_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bsp.o(i.BSP_Tick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = BSP_Tick_Init &rArr; BSP_CPU_ClkFreq &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickInit
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CPU_ClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[207]"></a>BSP_USART3_Config</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, bsp_usart3.o(i.BSP_USART3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = BSP_USART3_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[208]"></a>BSP_USART6_Config</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, bsp_usart6.o(i.BSP_USART6_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = BSP_USART6_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[a0]"></a>BUTTON_Callback</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, button.o(i.BUTTON_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClose
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_CreateUser)
</UL>
<P><STRONG><a name="[227]"></a>BUTTON_CreateAsChild</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateAsChild &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[11e]"></a>BUTTON_CreateIndirect</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateIndirect &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(.constdata)
</UL>
<P><STRONG><a name="[228]"></a>BUTTON_CreateUser</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, button.o(i.BUTTON_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
</UL>

<P><STRONG><a name="[9]"></a>BUTTON_DrawSkinFlex</STRONG> (Thumb, 562 bytes, Stack size 56 bytes, button_skinflex.o(i.BUTTON_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = BUTTON_DrawSkinFlex &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.data)
</UL>
<P><STRONG><a name="[225]"></a>BUTTON_SetPressed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[23d]"></a>BUTTON_SetSelfDraw</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, button_selfdraw.o(i.BUTTON_SetSelfDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetSelfDraw &rArr; BUTTON_SetSelfDrawEx &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[23e]"></a>BUTTON_SetSelfDrawEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, button_selfdraw.o(i.BUTTON_SetSelfDrawEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetSelfDrawEx &rArr; BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
</UL>

<P><STRONG><a name="[229]"></a>BUTTON_SetText</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, button.o(i.BUTTON_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetText &rArr; GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[240]"></a>BUTTON__SetDrawObj</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, button__setdrawobj.o(i.BUTTON__SetDrawObj))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = BUTTON__SetDrawObj &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>

<P><STRONG><a name="[31]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>CHECKBOX_Callback</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, checkbox.o(i.CHECKBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(i.CHECKBOX_CreateUser)
</UL>
<P><STRONG><a name="[121]"></a>CHECKBOX_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, checkbox.o(i.CHECKBOX_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_CreateIndirect &rArr; CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(.constdata)
</UL>
<P><STRONG><a name="[245]"></a>CHECKBOX_CreateUser</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, checkbox.o(i.CHECKBOX_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateIndirect
</UL>

<P><STRONG><a name="[b]"></a>CHECKBOX_DrawSkinFlex</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_DrawSkinFlex &rArr; _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[248]"></a>CHECKBOX_GetSkinFlexButtonSize</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, checkbox_skinflex.o(i.CHECKBOX_GetSkinFlexButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_GetSkinFlexButtonSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[24b]"></a>CHECKBOX_SetFont</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, checkbox.o(i.CHECKBOX_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[243]"></a>CHECKBOX_SetState</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, checkbox.o(i.CHECKBOX_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[24d]"></a>CHECKBOX_SetText</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, checkbox.o(i.CHECKBOX_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_SetText &rArr; GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[a]"></a>CHECKBOX__GetButtonSize</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, checkbox.o(i.CHECKBOX__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CHECKBOX__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[1e9]"></a>CPU_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cpu_core.o(i.CPU_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = CPU_Init &rArr; CPU_TS_Init &rArr; CPU_TS_TmrInit &rArr; BSP_CPU_ClkFreq &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_Init
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_NameInit
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[251]"></a>CPU_NameClr</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, cpu_core.o(i.CPU_NameClr))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = CPU_NameClr &rArr; Mem_Clr &rArr; Mem_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_Clr
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_NameInit
</UL>

<P><STRONG><a name="[4e2]"></a>CPU_SW_Exception</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu_core.o(i.CPU_SW_Exception))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_Init
</UL>

<P><STRONG><a name="[254]"></a>CPU_TS_TmrFreqSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu_core.o(i.CPU_TS_TmrFreqSet))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrInit
</UL>

<P><STRONG><a name="[253]"></a>CPU_TS_TmrInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp.o(i.CPU_TS_TmrInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CPU_TS_TmrInit &rArr; BSP_CPU_ClkFreq &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrFreqSet
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CPU_ClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_Init
</UL>

<P><STRONG><a name="[503]"></a>CPU_TS_TmrRd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp.o(i.CPU_TS_TmrRd))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPost
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPend
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedLockTimeMeasStop
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedLockTimeMeasStart
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateTimeout
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateDly
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInitTCB
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPost
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpPostAll
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[255]"></a>CT_Delay</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ctiic.o(i.CT_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_NAck
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Ack
</UL>

<P><STRONG><a name="[257]"></a>CT_IIC_Ack</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ctiic.o(i.CT_IIC_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CT_IIC_Ack &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>

<P><STRONG><a name="[258]"></a>CT_IIC_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ctiic.o(i.CT_IIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CT_IIC_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>

<P><STRONG><a name="[259]"></a>CT_IIC_NAck</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ctiic.o(i.CT_IIC_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CT_IIC_NAck &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>

<P><STRONG><a name="[25a]"></a>CT_IIC_Read_Byte</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, ctiic.o(i.CT_IIC_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_NAck
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Ack
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
</UL>

<P><STRONG><a name="[25b]"></a>CT_IIC_Send_Byte</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ctiic.o(i.CT_IIC_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CT_IIC_Send_Byte &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
</UL>

<P><STRONG><a name="[25c]"></a>CT_IIC_Start</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ctiic.o(i.CT_IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CT_IIC_Start &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
</UL>

<P><STRONG><a name="[25d]"></a>CT_IIC_Stop</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ctiic.o(i.CT_IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CT_IIC_Stop &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
</UL>

<P><STRONG><a name="[25e]"></a>CT_IIC_Wait_Ack</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ctiic.o(i.CT_IIC_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CT_IIC_Wait_Ack &rArr; CT_IIC_Stop &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
</UL>

<P><STRONG><a name="[26d]"></a>CreateWindow</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, windowdlg.o(i.CreateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = CreateWindow &rArr; GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[270]"></a>CreateWindow2</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, windowdlg.o(i.CreateWindow2))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = CreateWindow2 &rArr; GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainWindow
</UL>

<P><STRONG><a name="[271]"></a>DHT22_Check</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, bsp_dht22.o(i.DHT22_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DHT22_Check &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT_GPIO_Config
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Data
</UL>

<P><STRONG><a name="[272]"></a>DHT22_Read_Bit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bsp_dht22.o(i.DHT22_Read_Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DHT22_Read_Bit &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Byte
</UL>

<P><STRONG><a name="[273]"></a>DHT22_Read_Byte</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_dht22.o(i.DHT22_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DHT22_Read_Byte &rArr; DHT22_Read_Bit &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Data
</UL>

<P><STRONG><a name="[1de]"></a>DHT22_Read_Data</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, bsp_dht22.o(i.DHT22_Read_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = DHT22_Read_Data &rArr; conversion &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conversion
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_16
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Rst
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Byte
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLed3
</UL>

<P><STRONG><a name="[274]"></a>DHT22_Rst</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsp_dht22.o(i.DHT22_Rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DHT22_Rst &rArr; bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT_GPIO_Config
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Data
</UL>

<P><STRONG><a name="[20f]"></a>DHT_GPIO_Config</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_dht22.o(i.DHT_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DHT_GPIO_Config &rArr; DHT22_Rst &rArr; bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Rst
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[91]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcdconf_lin_template.o(i.DMA2D_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.DMA2_Stream3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA2_Stream3_IRQHandler &rArr; SD_ProcessDMAIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[595]"></a>DMA_ClearFlag</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[563]"></a>DMA_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[596]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[598]"></a>DMA_FlowControllerConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_FlowControllerConfig))
<BR><BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[597]"></a>DMA_ITConfig</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32f4xx_dma.o(i.DMA_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[562]"></a>DMA_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[278]"></a>DROPDOWN_AddKey</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, dropdown.o(i.DROPDOWN_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_AddKey &rArr; DROPDOWN_IncSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[27f]"></a>DROPDOWN_AddString</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN_AddString))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_AddString &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[a4]"></a>DROPDOWN_Callback</STRONG> (Thumb, 380 bytes, Stack size 40 bytes, dropdown.o(i.DROPDOWN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 948 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_Callback &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown.o(i.DROPDOWN_CreateUser)
</UL>
<P><STRONG><a name="[283]"></a>DROPDOWN_Collapse</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_Collapse))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_Collapse &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[11d]"></a>DROPDOWN_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, dropdown.o(i.DROPDOWN_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_CreateIndirect &rArr; DROPDOWN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(.constdata)
</UL>
<P><STRONG><a name="[28a]"></a>DROPDOWN_CreateUser</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, dropdown.o(i.DROPDOWN_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateIndirect
</UL>

<P><STRONG><a name="[27c]"></a>DROPDOWN_DecSel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dropdown.o(i.DROPDOWN_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_DecSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[c]"></a>DROPDOWN_DrawSkinFlex</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, dropdown_skinflex.o(i.DROPDOWN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown.o(.data)
</UL>
<P><STRONG><a name="[287]"></a>DROPDOWN_Expand</STRONG> (Thumb, 522 bytes, Stack size 160 bytes, dropdown.o(i.DROPDOWN_Expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 908 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[28d]"></a>DROPDOWN_GetSel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
</UL>

<P><STRONG><a name="[27b]"></a>DROPDOWN_IncSel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dropdown.o(i.DROPDOWN_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_IncSel &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[2a0]"></a>DROPDOWN_SetAutoScroll</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN_SetAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetAutoScroll &rArr; LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[2a1]"></a>DROPDOWN_SetFont</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 932 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetFont &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[2a3]"></a>DROPDOWN_SetListHeight</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN_SetListHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetListHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[2a5]"></a>DROPDOWN_SetScrollbarWidth</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_SetScrollbarWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetScrollbarWidth &rArr; LISTBOX_SetScrollbarWidth &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[27e]"></a>DROPDOWN_SetSel</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[28b]"></a>DROPDOWN__AdjustHeight</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, dropdown.o(i.DROPDOWN__AdjustHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = DROPDOWN__AdjustHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
</UL>

<P><STRONG><a name="[279]"></a>DROPDOWN__GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dropdown.o(i.DROPDOWN__GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DROPDOWN__GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[27d]"></a>DROPDOWN__GetpItemLocked</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DROPDOWN__GetpItemLocked &rArr; GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[34]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[206]"></a>Debug_USART_Config</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, bsp_debug_usart.o(i.Debug_USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Debug_USART_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[1db]"></a>Debug_printf</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, print.o(i.Debug_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Debug_printf &rArr; printflt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printstr
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050ReadID
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWindow
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWhere
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShowBQ
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskPower
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLight
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLed3
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCheckPeople
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
</UL>

<P><STRONG><a name="[583]"></a>FMC_GetFlagStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_fmc.o(i.FMC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[584]"></a>FMC_SDRAMCmdConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMCmdConfig))
<BR><BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[581]"></a>FMC_SDRAMInit</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_SDRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[586]"></a>FMC_SetRefreshCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SetRefreshCount))
<BR><BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[2ae]"></a>FRAMEWIN_AddButton</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, framewin_addbutton.o(i.FRAMEWIN_AddButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateAsChild
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[2b3]"></a>FRAMEWIN_AddCloseButton</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_AddCloseButton &rArr; FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback1
</UL>

<P><STRONG><a name="[a7]"></a>FRAMEWIN_Callback</STRONG> (Thumb, 440 bytes, Stack size 88 bytes, framewin.o(i.FRAMEWIN_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(i.FRAMEWIN_CreateUser)
</UL>
<P><STRONG><a name="[120]"></a>FRAMEWIN_CreateIndirect</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, framewin.o(i.FRAMEWIN_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_CreateIndirect &rArr; FRAMEWIN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(.constdata)
</UL>
<P><STRONG><a name="[2bc]"></a>FRAMEWIN_CreateUser</STRONG> (Thumb, 230 bytes, Stack size 80 bytes, framewin.o(i.FRAMEWIN_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateIndirect
</UL>

<P><STRONG><a name="[e]"></a>FRAMEWIN_DrawSkinFlex</STRONG> (Thumb, 888 bytes, Stack size 104 bytes, framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_DrawSkinFlex &rArr; GUI__DrawTwinArc2 &rArr; _DrawTwinArc2 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Address Reference Count : 2]<UL><LI> framewin.o(.data)
<LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[2bf]"></a>FRAMEWIN_GetActive</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_GetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_GetActive &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[2b0]"></a>FRAMEWIN_GetBorderSize</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_GetBorderSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[2af]"></a>FRAMEWIN_GetTitleHeight</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN_GetTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_GetTitleHeight &rArr; FRAMEWIN__CalcPositions &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[2b7]"></a>FRAMEWIN_SetActive</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetActive &rArr; _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[2c4]"></a>FRAMEWIN_SetFont</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, framewin.o(i.FRAMEWIN_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 404 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetFont &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback1
</UL>

<P><STRONG><a name="[2c8]"></a>FRAMEWIN_SetMoveable</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetMoveable))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetMoveable &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
</UL>

<P><STRONG><a name="[2be]"></a>FRAMEWIN_SetText</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, framewin.o(i.FRAMEWIN_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetText &rArr; GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback1
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[2c9]"></a>FRAMEWIN_SetTextAlign</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback1
</UL>

<P><STRONG><a name="[2ca]"></a>FRAMEWIN_SetTextColor</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, framewin.o(i.FRAMEWIN_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[2cb]"></a>FRAMEWIN_SetTitleHeight</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN_SetTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetTitleHeight &rArr; FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback1
</UL>

<P><STRONG><a name="[2b1]"></a>FRAMEWIN__CalcPositions</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, framewin.o(i.FRAMEWIN__CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__CalcPositions &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[2c5]"></a>FRAMEWIN__CalcTitleHeight</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, framewin.o(i.FRAMEWIN__CalcTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[d]"></a>FRAMEWIN__GetBorderSize</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, framewin.o(i.FRAMEWIN__GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FRAMEWIN__GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(.data)
</UL>
<P><STRONG><a name="[2ce]"></a>FRAMEWIN__GetTitleLimits</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, framewin.o(i.FRAMEWIN__GetTitleLimits))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2c7]"></a>FRAMEWIN__UpdateButtons</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, framewin__updatebuttons.o(i.FRAMEWIN__UpdateButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
</UL>

<P><STRONG><a name="[2c6]"></a>FRAMEWIN__UpdatePositions</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN__UpdatePositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
</UL>

<P><STRONG><a name="[2db]"></a>GL_DrawBitmap</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[2de]"></a>GL_DrawLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_drawline.o(i.GL_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[2e0]"></a>GL_DrawLine1Ex</STRONG> (Thumb, 456 bytes, Stack size 64 bytes, gui_drawline.o(i.GL_DrawLine1Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[2df]"></a>GL_DrawLineEx</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, gui_drawline.o(i.GL_DrawLineEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[2e2]"></a>GL_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_drawlib.o(i.GL_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>

<P><STRONG><a name="[2e9]"></a>GL_FillCircle</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gui_circ.o(i.GL_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[2e7]"></a>GL_FillPolygon</STRONG> (Thumb, 464 bytes, Stack size 64 bytes, gui_fillpolygon.o(i.GL_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GL_FillPolygon &rArr; _Add
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[2eb]"></a>GL_SetDefault</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_common.o(i.GL_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GL_SetDefault &rArr; GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[218]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CfgGpio
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RED_GPIO_Config
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT_GPIO_Config
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART6_Config
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART3_Config
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_GPIO_Config
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>

<P><STRONG><a name="[217]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART6_Config
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART3_Config
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
</UL>

<P><STRONG><a name="[698]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DisplayOff
</UL>

<P><STRONG><a name="[45f]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DisplayOn
</UL>

<P><STRONG><a name="[2ef]"></a>GT9147_Init</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, gt9147.o(i.GT9147_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = GT9147_Init &rArr; GT9147_RD_Reg &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Init
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Init
</UL>

<P><STRONG><a name="[2f0]"></a>GT9147_RD_Reg</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gt9147.o(i.GT9147_RD_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GT9147_RD_Reg &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Scan
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>

<P><STRONG><a name="[ee]"></a>GT9147_Scan</STRONG> (Thumb, 490 bytes, Stack size 32 bytes, gt9147.o(i.GT9147_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = GT9147_Scan &rArr; GT9147_RD_Reg &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.TP_Init)
</UL>
<P><STRONG><a name="[2f2]"></a>GT9147_WR_Reg</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gt9147.o(i.GT9147_WR_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GT9147_WR_Reg &rArr; CT_IIC_Wait_Ack &rArr; CT_IIC_Stop &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Scan
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>

<P><STRONG><a name="[47f]"></a>GUICC_M1555I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m1555i.o(i.GUICC_M1555I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[481]"></a>GUICC_M4444I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m4444i.o(i.GUICC_M4444I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[480]"></a>GUICC_M565_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m565.o(i.GUICC_M565_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[483]"></a>GUICC_M8888I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m8888i.o(i.GUICC_M8888I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[482]"></a>GUICC_M888_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m888.o(i.GUICC_M888_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[15d]"></a>GUIMONO_DispChar</STRONG> (Thumb, 302 bytes, Stack size 104 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 2]<UL><LI> f8x16.o(.constdata)
<LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 2]<UL><LI> f8x16.o(.constdata)
<LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[15f]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 2]<UL><LI> f8x16.o(.constdata)
<LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[160]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 2]<UL><LI> f8x16.o(.constdata)
<LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[161]"></a>GUIPROP_DispChar</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = GUIPROP_DispChar &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 5]<UL><LI> f16b_ascii.o(.constdata)
<LI> f20b_ascii.o(.constdata)
<LI> f24_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[162]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 5]<UL><LI> f16b_ascii.o(.constdata)
<LI> f20b_ascii.o(.constdata)
<LI> f24_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[163]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 5]<UL><LI> f16b_ascii.o(.constdata)
<LI> f20b_ascii.o(.constdata)
<LI> f24_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 5]<UL><LI> f16b_ascii.o(.constdata)
<LI> f20b_ascii.o(.constdata)
<LI> f24_ascii.o(.constdata)
<LI> f24b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[2f5]"></a>GUIPROP__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[2f8]"></a>GUITASK_CopyContext</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gui_task.o(i.GUITASK_CopyContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUITASK_CopyContext &rArr; _GetTaskNo
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2fa]"></a>GUITASK_Init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_task.o(i.GUITASK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = GUITASK_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[2fe]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_AllocInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[2ff]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[301]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_DrawEx
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfoEx
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitFrame
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAllocBanding
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>

<P><STRONG><a name="[412]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[286]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_DrawEx
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG(long double, ..., ...)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfoEx
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>

<P><STRONG><a name="[32d]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[221]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
</UL>

<P><STRONG><a name="[222]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtrArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_FreePtrArray &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[2fc]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[307]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_GetMaxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcBanding
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[30a]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetSize))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[334]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[21f]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetColumnWidth
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetListHeight
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetFont
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__SetNextBand
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__GetInfoEx
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__AllocBandingCoeffBuffer
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfoEx
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitFrame
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBanding
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V2
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V1
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V2
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V1
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAllocBanding
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetFlag
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AlignImage
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[309]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_Realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[30b]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_RequestSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[413]"></a>GUI_ALLOC_SetAvBlockSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_SetAvBlockSize))
<BR><BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[336]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[220]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetColumnWidth
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetListHeight
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetFont
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__SetNextBand
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__GetInfoEx
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG(long double, ..., ...)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__AllocBandingCoeffBuffer
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfoEx
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitFrame
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBanding
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_RefineBanding
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_Refine
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_FirstBanding
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_FirstBanding
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V2
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V1
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V2
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V1
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAllocBanding
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetFlag
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AlignImage
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>

<P><STRONG><a name="[308]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[281]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gui_array.o(i.GUI_ARRAY_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
</UL>

<P><STRONG><a name="[28c]"></a>GUI_ARRAY_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_array.o(i.GUI_ARRAY_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[284]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[30c]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gui_array_deleteitem.o(i.GUI_ARRAY_DeleteItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_DeleteItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
</UL>

<P><STRONG><a name="[2a7]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetNumItems
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[295]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[30e]"></a>GUI_ARRAY_GetpItemLocked</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[310]"></a>GUI_ARRAY_ResizeItemLocked</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, gui_array_resizeitem.o(i.GUI_ARRAY_ResizeItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_ResizeItemLocked &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
</UL>

<P><STRONG><a name="[30d]"></a>GUI_ARRAY__GethItem</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>

<P><STRONG><a name="[30f]"></a>GUI_ARRAY__GetpItemLocked</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_array.o(i.GUI_ARRAY__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>

<P><STRONG><a name="[311]"></a>GUI_ARRAY__SethItem</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__SethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY__SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
</UL>

<P><STRONG><a name="[312]"></a>GUI_AddDecMin</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_val.o(i.GUI_AddDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>

<P><STRONG><a name="[314]"></a>GUI_AddDecShift</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, gui_common.o(i.GUI_AddDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[315]"></a>GUI_CURSOR_GetStateEx</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_cursor.o(i.GUI_CURSOR_GetStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_GetStateEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[316]"></a>GUI_CURSOR_SelectEx</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, gui_cursor.o(i.GUI_CURSOR_SelectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[31e]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gui_cursor.o(i.GUI_CURSOR_SetPositionEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[635]"></a>GUI_CalcColorDist</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_common.o(i.GUI_CalcColorDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[1e7]"></a>GUI_Clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_Clear &rArr; GUI_GotoXY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouchScan
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShowBQ
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[322]"></a>GUI_ClearRect</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[325]"></a>GUI_ClearRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_core.o(i.GUI_ClearRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[26f]"></a>GUI_CreateDialogBox</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, dialog.o(i.GUI_CreateDialogBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateWindow2
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateWindow
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[329]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[32a]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[32c]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[32b]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>

<P><STRONG><a name="[32e]"></a>GUI_DEVICE_LinkDevices</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_device.o(i.GUI_DEVICE_LinkDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_DEVICE_LinkDevices &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[3ee]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_DEVICE_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
</UL>

<P><STRONG><a name="[39f]"></a>GUI_DEVICE_UnlinkTaskDevices</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_UnlinkTaskDevices))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[3ec]"></a>GUI_DEVICE__GetpDevice</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDevice))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[3a5]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[23f]"></a>GUI_DRAW_SELF_Create</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gui_draw_self.o(i.GUI_DRAW_SELF_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = GUI_DRAW_SELF_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetSelfDrawEx
</UL>

<P><STRONG><a name="[235]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, gui_draw.o(i.GUI_DRAW__Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[32f]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[330]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[331]"></a>GUI_Delay</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gui_time.o(i.GUI_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 836 + Unknown Stack Size
<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
</UL>

<P><STRONG><a name="[1f2]"></a>GUI_DispDecAt</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispDecAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[337]"></a>GUI_DispString</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>

<P><STRONG><a name="[1f1]"></a>GUI_DispStringAt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_dispstring.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[1fb]"></a>GUI_DispStringHCenterAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_dispstring.o(i.GUI_DispStringHCenterAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouchScan
</UL>

<P><STRONG><a name="[239]"></a>GUI_DispStringInRect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_dispstring.o(i.GUI_DispStringInRect))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[33e]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, gui_dispstring.o(i.GUI_DispStringInRectMax), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[342]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 290 bytes, Stack size 80 bytes, gui_dispstring.o(i.GUI_DispStringInRectWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__DrawText
</UL>

<P><STRONG><a name="[319]"></a>GUI_DrawBitmap</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[346]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, gui_drawlib.o(i.GUI_DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_DrawFocusRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[e7]"></a>GUI_DrawGradientH</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientH))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[ea]"></a>GUI_DrawGradientV</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientV))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[230]"></a>GUI_DrawHLine</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, gui_drawlib.o(i.GUI_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>

<P><STRONG><a name="[1fa]"></a>GUI_DrawLine</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_drawline.o(i.GUI_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_DrawLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouchScan
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
</UL>

<P><STRONG><a name="[2c1]"></a>GUI_DrawPixel</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_drawlib.o(i.GUI_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_DrawPixel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[233]"></a>GUI_DrawRect</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_DrawRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[231]"></a>GUI_DrawVLine</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_drawlib.o(i.GUI_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_DrawVLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[349]"></a>GUI_EndDialog</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dialog.o(i.GUI_EndDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = GUI_EndDialog &rArr; GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback1
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbClose
</UL>

<P><STRONG><a name="[333]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 812 + Unknown Stack Size
<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[34c]"></a>GUI_Exec1</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Exec1))
<BR><BR>[Stack]<UL><LI>Max Depth = 804 + Unknown Stack Size
<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[34e]"></a>GUI_ExecCreatedDialog</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dialog.o(i.GUI_ExecCreatedDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 828 + Unknown Stack Size
<LI>Call Chain = GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[232]"></a>GUI_FillRect</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui_drawlib.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_FillRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
</UL>

<P><STRONG><a name="[2c2]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_drawlib.o(i.GUI_FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[351]"></a>GUI_GIF_DrawSubScaled</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, gui_gif_drawscaled.o(i.GUI_GIF_DrawSubScaled))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = GUI_GIF_DrawSubScaled &rArr; GUI_GIF_DrawSubScaledEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
</UL>

<P><STRONG><a name="[352]"></a>GUI_GIF_DrawSubScaledEx</STRONG> (Thumb, 220 bytes, Stack size 88 bytes, gui_gif_drawscaled.o(i.GUI_GIF_DrawSubScaledEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = GUI_GIF_DrawSubScaledEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaled
</UL>

<P><STRONG><a name="[358]"></a>GUI_GIF_GetImageInfo</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_gif.o(i.GUI_GIF_GetImageInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = GUI_GIF_GetImageInfo &rArr; GUI_GIF_GetImageInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
</UL>

<P><STRONG><a name="[359]"></a>GUI_GIF_GetImageInfoEx</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, gui_gif.o(i.GUI_GIF_GetImageInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = GUI_GIF_GetImageInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfo
</UL>

<P><STRONG><a name="[35b]"></a>GUI_GIF_GetInfo</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_gif.o(i.GUI_GIF_GetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = GUI_GIF_GetInfo &rArr; GUI_GIF_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
</UL>

<P><STRONG><a name="[35c]"></a>GUI_GIF_GetInfoEx</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gui_gif.o(i.GUI_GIF_GetInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = GUI_GIF_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfo
</UL>

<P><STRONG><a name="[356]"></a>GUI_GIF__DrawFromFilePointer</STRONG> (Thumb, 350 bytes, Stack size 136 bytes, gui_gif.o(i.GUI_GIF__DrawFromFilePointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_GIF__DrawFromFilePointer &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadColorMap
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
</UL>

<P><STRONG><a name="[ad]"></a>GUI_GIF__GetData</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gui_gif.o(i.GUI_GIF__GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_GIF__GetData
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gui_gif.o(i.GUI_GIF_GetImageInfo)
<LI> gui_gif.o(i.GUI_GIF_GetInfo)
<LI> gui_gif_drawscaled.o(i.GUI_GIF_DrawSubScaled)
</UL>
<P><STRONG><a name="[362]"></a>GUI_GIF__GetNextByte</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, gui_gif.o(i.GUI_GIF__GetNextByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_GIF__GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextCode
</UL>
<BR>[Called By]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipPixels
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipLine
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineScaled
</UL>

<P><STRONG><a name="[66d]"></a>GUI_GIF__InitLZW</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_gif.o(i.GUI_GIF__InitLZW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GIF__InitLZW
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlockScaled
</UL>

<P><STRONG><a name="[353]"></a>GUI_GIF__ReadData</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_gif.o(i.GUI_GIF__ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlockScaled
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipLocalColorTable
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadColorMap
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>

<P><STRONG><a name="[364]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBitmapPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[365]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBitmapPixelIndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[422]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>

<P><STRONG><a name="[2f7]"></a>GUI_GetBkColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetBkColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[368]"></a>GUI_GetCharDistX</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[369]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[236]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[2f6]"></a>GUI_GetColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[317]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_GetCursorLayer))
<BR><BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[34a]"></a>GUI_GetDialogStatusPtr</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, dialog.o(i.GUI_GetDialogStatusPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>

<P><STRONG><a name="[36b]"></a>GUI_GetDrawMode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
</UL>

<P><STRONG><a name="[338]"></a>GUI_GetFontDistY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontDistY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[36c]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetFontSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
</UL>

<P><STRONG><a name="[36e]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_GetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[370]"></a>GUI_GetOrg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_GetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_GetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[372]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_dispstring.o(i.GUI_GetStringDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[374]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_time.o(i.GUI_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_GetTime &rArr; GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
</UL>

<P><STRONG><a name="[339]"></a>GUI_GetYAdjust</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetYAdjust &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[2a2]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetYDistOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[2cf]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetYSizeOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[65a]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[423]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[321]"></a>GUI_GotoXY</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_GotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_GotoXY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[20d]"></a>GUI_Init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplaySize
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[380]"></a>GUI_JPEG_Draw</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_jpeg.o(i.GUI_JPEG_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1608 + Unknown Stack Size
<LI>Call Chain = GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_DrawEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[381]"></a>GUI_JPEG_DrawEx</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, gui_jpeg.o(i.GUI_JPEG_DrawEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 1592 + Unknown Stack Size
<LI>Call Chain = GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
</UL>

<P><STRONG><a name="[383]"></a>GUI_JPEG_GetInfo</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_jpeg.o(i.GUI_JPEG_GetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = GUI_JPEG_GetInfo &rArr; GUI_JPEG_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
</UL>

<P><STRONG><a name="[384]"></a>GUI_JPEG_GetInfoEx</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, gui_jpeg.o(i.GUI_JPEG_GetInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = GUI_JPEG_GetInfoEx &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__GetInfoEx
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
</UL>

<P><STRONG><a name="[386]"></a>GUI_JPEG__AllocBandingCoeffBuffer</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, gui_jpeg.o(i.GUI_JPEG__AllocBandingCoeffBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = GUI_JPEG__AllocBandingCoeffBuffer &rArr; _CoeffBufferAllocBanding &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAllocBanding
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBanding
</UL>

<P><STRONG><a name="[388]"></a>GUI_JPEG__DecodeLine</STRONG> (Thumb, 366 bytes, Stack size 168 bytes, gui_jpeg.o(i.GUI_JPEG__DecodeLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_JPEG__DecodeLine &rArr; _DecodeNextRow &rArr; _ProcessRestart &rArr; _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IDCT
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V2
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH2V1
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V2
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConvertH1V1
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBanding
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[391]"></a>GUI_JPEG__DecodeProgressiveBanding</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, gui_jpeg.o(i.GUI_JPEG__DecodeProgressiveBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeScanProg
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMCUBlockOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBanding
</UL>

<P><STRONG><a name="[395]"></a>GUI_JPEG(long double, ..., ...)</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gui_jpeg.o(i.GUI_JPEG__Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_JPEG(long double, ..., ...) &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[b0]"></a>GUI_JPEG__GetData</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gui_jpeg.o(i.GUI_JPEG__GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_JPEG__GetData
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_jpeg.o(i.GUI_JPEG_Draw)
<LI> gui_jpeg.o(i.GUI_JPEG_GetInfo)
</UL>
<P><STRONG><a name="[385]"></a>GUI_JPEG__GetInfoEx</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gui_jpeg.o(i.GUI_JPEG__GetInfoEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_JPEG__GetInfoEx &rArr; GUI_JPEG__ReadUntilSOF &rArr; _ReadMarkers &rArr; _GetDQT &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfoEx
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[397]"></a>GUI_JPEG__InitDraw</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gui_jpeg.o(i.GUI_JPEG__InitDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1440 + Unknown Stack Size
<LI>Call Chain = GUI_JPEG__InitDraw &rArr; _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitFrame
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcBanding
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[396]"></a>GUI_JPEG__ReadUntilSOF</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gui_jpeg.o(i.GUI_JPEG__ReadUntilSOF))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_JPEG__ReadUntilSOF &rArr; _ReadMarkers &rArr; _GetDQT &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU8
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOF
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__GetInfoEx
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBanding
</UL>

<P><STRONG><a name="[39c]"></a>GUI_JPEG__SetNextBand</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, gui_jpeg.o(i.GUI_JPEG__SetNextBand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_JPEG__SetNextBand
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBanding
</UL>

<P><STRONG><a name="[22a]"></a>GUI_Lock</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_task.o(i.GUI_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_UnlinkTaskDevices
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_DrawEx
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetColumnWidth
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetListHeight
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetFont
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDrawMode
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfoEx
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[313]"></a>GUI_Long2Len</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Long2Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[3a0]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidev_clear.o(i.GUI_MEMDEV_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Clear &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[1a]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfade.o(.data)
</UL>
<P><STRONG><a name="[3a1]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[3a4]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3a7]"></a>GUI_MEMDEV_CreateFixed</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, guidev_createfixed.o(i.GUI_MEMDEV_CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[3a8]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[3ab]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 332 bytes, Stack size 64 bytes, guidev_banding.o(i.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
</UL>
<BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[3b5]"></a>GUI_MEMDEV_FadeInWindow</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeInWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_FadeInWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[3ba]"></a>GUI_MEMDEV_FadeOutWindow</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeOutWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_FadeOutWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
</UL>

<P><STRONG><a name="[3bc]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
</UL>

<P><STRONG><a name="[3be]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[3bf]"></a>GUI_MEMDEV_GetStaticDevice</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_GetStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetStaticDevice &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[3c0]"></a>GUI_MEMDEV_GetWindowDevice</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_GetWindowDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[3c2]"></a>GUI_MEMDEV_GetXPos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetXPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetXPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[3c3]"></a>GUI_MEMDEV_GetXSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getxsize.o(i.GUI_MEMDEV_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetXSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[3c4]"></a>GUI_MEMDEV_GetYPos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetYPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetYPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[3b1]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getysize.o(i.GUI_MEMDEV_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>

<P><STRONG><a name="[10f]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[3b3]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_reduceysize.o(i.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_ReduceYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3a3]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[3b4]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, guidev_setorg.o(i.GUI_MEMDEV_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_SetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[19]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_write.o(i.GUI_MEMDEV_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Write &rArr; GUI_MEMDEV_WriteAt &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfade.o(.data)
</UL>
<P><STRONG><a name="[3c9]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, guidev_write.o(i.GUI_MEMDEV_WriteAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
</UL>

<P><STRONG><a name="[b6]"></a>GUI_MEMDEV__CalcParaFadeIn</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV__CalcParaFadeIn))
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeInWindow)
</UL>
<P><STRONG><a name="[3b6]"></a>GUI_MEMDEV__ClipBK</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV__ClipBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__ClipBK &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[3a6]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, guidev.o(i.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[3ce]"></a>GUI_MEMDEV__CreateStatic</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidev_staticdevices.o(i.GUI_MEMDEV__CreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__CreateStatic &rArr; _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[3d0]"></a>GUI_MEMDEV__FadeDeviceEx</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, guidev_moveandfade.o(i.GUI_MEMDEV__FadeDeviceEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__FadeDeviceEx &rArr; GUI_MEMDEV_GetYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[3d1]"></a>GUI_MEMDEV__RemoveStaticDevice</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV__RemoveStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = GUI_MEMDEV__RemoveStaticDevice &rArr;  GUI_MEMDEV__RemoveStaticDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[3ed]"></a>GUI_MEMDEV__SetAlphaCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidev_banding.o(i.GUI_MEMDEV__SetAlphaCallback))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[3b8]"></a>GUI_MEMDEV__UndoClipBK</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev_moveandfadewin.o(i.GUI_MEMDEV__UndoClipBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__UndoClipBK &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[10c]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[3ca]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[10b]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[3d5]"></a>GUI_MULTIBUF_ConfigEx</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_multibuf.o(i.GUI_MULTIBUF_ConfigEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MULTIBUF_ConfigEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4d5]"></a>GUI_MULTIBUF_ConfirmEx</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gui_multibuf.o(i.GUI_MULTIBUF_ConfirmEx))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[54c]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_common.o(i.GUI_MergeRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[237]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_common.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[3d6]"></a>GUI_PID_GetState</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_pid.o(i.GUI_PID_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_PID_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[5eb]"></a>GUI_PID_IsEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_pid.o(i.GUI_PID_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3d8]"></a>GUI_PID_StoreState</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_pid.o(i.GUI_PID_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[3db]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_PollKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
</UL>
<BR>[Called By]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[3de]"></a>GUI_ReadRectEx</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd_readrect.o(i.GUI_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ReadRectEx &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[607]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_common.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3e0]"></a>GUI_RestoreContext</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_common.o(i.GUI_RestoreContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[31b]"></a>GUI_SPRITE_Delete</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 404 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[320]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[3e4]"></a>GUI_SPRITE_Show</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[31c]"></a>GUI_SPRITE__CreateEx</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, gui_sprite.o(i.GUI_SPRITE__CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[3e8]"></a>GUI_SaveContext_W</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SaveContext_W))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[3a9]"></a>GUI_SelectLCD</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>

<P><STRONG><a name="[318]"></a>GUI_SelectLayer</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>

<P><STRONG><a name="[3ea]"></a>GUI_SetAlpha</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_setalpha.o(i.GUI_SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDevice
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__SetAlphaCallback
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i.GUI_SetAlpha)
</UL>
<P><STRONG><a name="[1e6]"></a>GUI_SetBkColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetBkColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouchScan
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShowBQ
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[1ef]"></a>GUI_SetColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouchScan
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>

<P><STRONG><a name="[3f0]"></a>GUI_SetColorIndex</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetColorIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetColorIndex &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>

<P><STRONG><a name="[34f]"></a>GUI_SetDialogStatusPtr</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, dialog.o(i.GUI_SetDialogStatusPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = GUI_SetDialogStatusPtr &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[2dc]"></a>GUI_SetDrawMode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>

<P><STRONG><a name="[1f0]"></a>GUI_SetFont</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouchScan
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[484]"></a>GUI_SetFuncAlphaBlending</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncAlphaBlending))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[485]"></a>GUI_SetFuncGetpPalConvTable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetFuncGetpPalConvTable))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[486]"></a>GUI_SetFuncMixColorsBulk</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncMixColorsBulk))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[31f]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[31a]"></a>GUI_SetLayerSizeEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetLayerSizeEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[3f3]"></a>GUI_SetLayerVisEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetLayerVisEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[2ee]"></a>GUI_SetLineStyle</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetLineStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetLineStyle &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[37e]"></a>GUI_SetOrg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2ec]"></a>GUI_SetPenSize</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetPenSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[2ed]"></a>GUI_SetTextAlign</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextAlign &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[238]"></a>GUI_SetTextMode</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_common.o(i.GUI_SetTextMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[3da]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[3f5]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[3f6]"></a>GUI_TIMER_Create</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gui_timer.o(i.GUI_TIMER_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[3f8]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
</UL>
<BR>[Called By]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>

<P><STRONG><a name="[bb]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, gui_timer.o(i.GUI_TIMER_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Exec &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[3fb]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_GetFlag &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[3fc]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Restart &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[3fd]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_SetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_SetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[3fe]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetFirstTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetFirstTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[3ff]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetNextTimerLin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetNextTimerLin
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[400]"></a>GUI_TIMER__GetPeriod</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER__GetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[401]"></a>GUI_TIMER__IsActive</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER__IsActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER__IsActive &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[402]"></a>GUI_TOUCH_CalcCoefficients</STRONG> (Thumb, 1178 bytes, Stack size 152 bytes, gui_touch_calibrate.o(i.GUI_TOUCH_CalcCoefficients))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_TOUCH_CalcCoefficients
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2PhysY
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2PhysX
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[405]"></a>GUI_TOUCH_Calibrate</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_Calibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_TOUCH_Calibrate &rArr; GUI_TOUCH_CalcCoefficients
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalcCoefficients
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[406]"></a>GUI_TOUCH_CalibratePoint</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gui_touch_calibrate.o(i.GUI_TOUCH_CalibratePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TOUCH_CalibratePoint
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_TransformPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[1f9]"></a>GUI_TOUCH_Exec</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_TOUCH_Exec &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateY
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateX
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_GetLayer
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalibratePoint
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
</UL>

<P><STRONG><a name="[40a]"></a>GUI_TOUCH_GetLayer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_touch_storestate.o(i.GUI_TOUCH_GetLayer))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[40b]"></a>GUI_TOUCH_StoreStateEx</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_touch.o(i.GUI_TOUCH_StoreStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[407]"></a>GUI_TOUCH_TransformPoint</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, gui_touch_calibrate.o(i.GUI_TOUCH_TransformPoint))
<BR><BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalibratePoint
</UL>

<P><STRONG><a name="[409]"></a>GUI_TOUCH_X_ActivateX</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch_analog.o(i.GUI_TOUCH_X_ActivateX))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[40d]"></a>GUI_TOUCH_X_ActivateY</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch_analog.o(i.GUI_TOUCH_X_ActivateY))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[408]"></a>GUI_TOUCH_X_MeasureX</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_x_touch_analog.o(i.GUI_TOUCH_X_MeasureX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_TOUCH_X_MeasureX
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[40c]"></a>GUI_TOUCH_X_MeasureY</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_x_touch_analog.o(i.GUI_TOUCH_X_MeasureY))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_TOUCH_X_MeasureY
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[428]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[33d]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[65e]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[3cd]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[3aa]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[22e]"></a>GUI_Unlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_task.o(i.GUI_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_SemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_DrawEx
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetColumnWidth
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetListHeight
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetFont
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDrawMode
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfoEx
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetTitleHeight
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetBorderSize
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocusedWindow
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW_SELF_Create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[350]"></a>GUI_WaitEvent</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gui_waitevent.o(i.GUI_WaitEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_WaitEvent &rArr; GUI_TIMER__GetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WaitEvent
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[343]"></a>GUI_WrapGetNumLines</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gui_dispstring.o(i.GUI_WrapGetNumLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[411]"></a>GUI_X_Config</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guiconf.o(i.GUI_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_SetAvBlockSize
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[335]"></a>GUI_X_Delay</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gui_x_ucos.o(i.GUI_X_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_X_Delay &rArr; OSTimeDly &rArr; OS_TickListInsertDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[18]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_ExecIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_X_ExecIdle &rArr; GUI_X_Delay &rArr; OSTimeDly &rArr; OS_TickListInsertDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[39d]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_ucos.o(i.GUI_X_GetTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
</UL>

<P><STRONG><a name="[332]"></a>GUI_X_GetTime</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>

<P><STRONG><a name="[376]"></a>GUI_X_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = GUI_X_Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2fd]"></a>GUI_X_InitOS</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_InitOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = GUI_X_InitOS &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>

<P><STRONG><a name="[39e]"></a>GUI_X_Lock</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_x_ucos.o(i.GUI_X_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[40f]"></a>GUI_X_Unlock</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_X_Unlock &rArr; OSSemPost &rArr; OS_SemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
</UL>

<P><STRONG><a name="[418]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__AllocAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[41a]"></a>GUI__AlphaPreserveTrans</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_setalpha.o(i.GUI__AlphaPreserveTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__AlphaPreserveTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[638]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>

<P><STRONG><a name="[41c]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__CompactPixelIndicesEx &rArr; GUI__ConvertColor2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[375]"></a>GUI__Config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_core.o(i.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[41d]"></a>GUI__ConvertColor2Index</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, gui__compactpixelindices.o(i.GUI__ConvertColor2Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>

<P><STRONG><a name="[33c]"></a>GUI__DispLine</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[341]"></a>GUI__DispStringInRect</STRONG> (Thumb, 320 bytes, Stack size 72 bytes, gui_dispstring.o(i.GUI__DispStringInRect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[62b]"></a>GUI__DivideRound32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__DivideRound32))
<BR><BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[421]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 446 bytes, Stack size 104 bytes, gui__alpha.o(i.GUI__DoAlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[2c0]"></a>GUI__DrawTwinArc2</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI__DrawTwinArc2 &rArr; _DrawTwinArc2 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[22f]"></a>GUI__DrawTwinArc4</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[641]"></a>GUI__ExpandPixelIndices</STRONG> (Thumb, 210 bytes, Stack size 20 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
</UL>

<P><STRONG><a name="[424]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[419]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui__alpha.o(i.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>

<P><STRONG><a name="[36d]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_common.o(i.GUI__GetFontSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[33b]"></a>GUI__GetLineDistX</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[33a]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[373]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_uc.o(i.GUI__GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>

<P><STRONG><a name="[371]"></a>GUI__GetOrg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_common.o(i.GUI__GetOrg))
<BR><BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
</UL>

<P><STRONG><a name="[429]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[420]"></a>GUI__HandleEOLine</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui__private.o(i.GUI__HandleEOLine), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[5f6]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__private.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>

<P><STRONG><a name="[340]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui__private.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[42a]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[42b]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[4]"></a>GUI__MixColors</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, gui__alpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gui__alpha.o(i.GUI__MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[354]"></a>GUI__Read16</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui__private.o(i.GUI__Read16))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
</UL>

<P><STRONG><a name="[347]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__ReduceRect))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[2fb]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[241]"></a>GUI__SetText</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gui__private.o(i.GUI__SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
</UL>

<P><STRONG><a name="[345]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui__wrap.o(i.GUI__WrapGetNumBytesToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[344]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[42f]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[695]"></a>GUI__memset</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, gui__private.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[678]"></a>GUI__memset16</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui__private.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[68f]"></a>GUI__sqrt32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__sqrt32))
<BR><BR>[Called By]<UL><LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>

<P><STRONG><a name="[431]"></a>GUI__strcmp</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui__private.o(i.GUI__strcmp))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[42c]"></a>GUI__strcmp_hp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui__private.o(i.GUI__strcmp_hp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__strcmp_hp
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[42d]"></a>GUI__strlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui__private.o(i.GUI__strlen))
<BR><BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[2e5]"></a>GUI_cos</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.GUI_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_cos &rArr; GUI_sin
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[2e6]"></a>GUI_sin</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gui_drawline.o(i.GUI_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[432]"></a>HEADER_AddItem</STRONG> (Thumb, 188 bytes, Stack size 72 bytes, header.o(i.HEADER_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = HEADER_AddItem &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
</UL>

<P><STRONG><a name="[c1]"></a>HEADER_Callback</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, header.o(i.HEADER_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = HEADER_Callback &rArr; _HandlePID &rArr; _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header.o(i.HEADER_CreateUser)
</UL>
<P><STRONG><a name="[436]"></a>HEADER_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, header.o(i.HEADER_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = HEADER_CreateEx &rArr; HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>

<P><STRONG><a name="[437]"></a>HEADER_CreateUser</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, header.o(i.HEADER_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
</UL>

<P><STRONG><a name="[f]"></a>HEADER_DrawSkinFlex</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, header_skinflex.o(i.HEADER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = HEADER_DrawSkinFlex &rArr; _DrawOverlap &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header.o(.data)
</UL>
<P><STRONG><a name="[43f]"></a>HEADER_GetHeight</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, header.o(i.HEADER_GetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = HEADER_GetHeight &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[441]"></a>HEADER_GetItemWidth</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, header.o(i.HEADER_GetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = HEADER_GetItemWidth &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[442]"></a>HEADER_GetNumItems</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, header.o(i.HEADER_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = HEADER_GetNumItems &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[443]"></a>HEADER_GetSel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, header.o(i.HEADER_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = HEADER_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[444]"></a>HEADER_SetFont</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, header.o(i.HEADER_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = HEADER_SetFont &rArr; HEADER_SetHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[445]"></a>HEADER_SetHeight</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, header.o(i.HEADER_SetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = HEADER_SetHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[446]"></a>HEADER_SetItemWidth</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, header.o(i.HEADER_SetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetColumnWidth
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[447]"></a>HEADER_SetScrollPos</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, header.o(i.HEADER_SetScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[2f]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[448]"></a>ICONVIEW_AddBitmapItem</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, iconview.o(i.ICONVIEW_AddBitmapItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_AddBitmapItem &rArr; ICONVIEW__ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainWindow
</UL>

<P><STRONG><a name="[c5]"></a>ICONVIEW_Callback</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, iconview.o(i.ICONVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_Callback &rArr; ICONVIEW__ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_CreateUser)
</UL>
<P><STRONG><a name="[451]"></a>ICONVIEW_CreateEx</STRONG> (Thumb, 40 bytes, Stack size 56 bytes, iconview.o(i.ICONVIEW_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_CreateEx &rArr; ICONVIEW_CreateUser &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainWindow
</UL>

<P><STRONG><a name="[452]"></a>ICONVIEW_CreateUser</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, iconview.o(i.ICONVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_CreateUser &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateEx
</UL>

<P><STRONG><a name="[453]"></a>ICONVIEW_GetSel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
</UL>

<P><STRONG><a name="[c6]"></a>ICONVIEW_OwnerDraw</STRONG> (Thumb, 408 bytes, Stack size 104 bytes, iconview.o(i.ICONVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_OwnerDraw &rArr; GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AlignImage
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_CreateUser)
</UL>
<P><STRONG><a name="[456]"></a>ICONVIEW_SetBkColor</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, iconview.o(i.ICONVIEW_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_SetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainWindow
</UL>

<P><STRONG><a name="[457]"></a>ICONVIEW_SetIconAlign</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_SetIconAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_SetIconAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainWindow
</UL>

<P><STRONG><a name="[458]"></a>ICONVIEW_SetSpace</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, iconview.o(i.ICONVIEW_SetSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_SetSpace &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainWindow
</UL>

<P><STRONG><a name="[c3]"></a>ICONVIEW__DrawText</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, iconview.o(i.ICONVIEW__DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = ICONVIEW__DrawText &rArr; GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_AddBitmapItem)
</UL>
<P><STRONG><a name="[449]"></a>ICONVIEW__ManageAutoScroll</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, iconview.o(i.ICONVIEW__ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 604 + Unknown Stack Size
<LI>Call Chain = ICONVIEW__ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[2c]"></a>LCD_AA_MixColors16</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lcd_aa.o(i.LCD_AA_MixColors16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_AA_MixColors16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_aa.o(.data)
</UL>
<P><STRONG><a name="[41b]"></a>LCD_AA_SetAndMask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_aa.o(i.LCD_AA_SetAndMask))
<BR><BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
</UL>

<P><STRONG><a name="[470]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[12a]"></a>LCD_Color2Index_8666</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, guicc_8666.o(i.LCD_Color2Index_8666))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8666.o(.constdata)
</UL>
<P><STRONG><a name="[2dd]"></a>LCD_DrawBitmap</STRONG> (Thumb, 504 bytes, Stack size 88 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[ac]"></a>LCD_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_core.o(.constdata)
<LI> gui_drawgradient.o(i.GUI_DrawGradientV)
</UL>
<P><STRONG><a name="[141]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[ab]"></a>LCD_DrawVLine</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawgradient.o(i.GUI_DrawGradientH)
</UL>
<P><STRONG><a name="[2f4]"></a>LCD_FillRect</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineScaled
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixelsScaled
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[460]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixel &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
</UL>

<P><STRONG><a name="[462]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBytesPerLine
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>

<P><STRONG><a name="[366]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineScaled
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixelsScaled
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[355]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>

<P><STRONG><a name="[69b]"></a>LCD_GetDevFunc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetDevFunc))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[463]"></a>LCD_GetMirrorXEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetMirrorXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorXEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[464]"></a>LCD_GetMirrorYEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetMirrorYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[465]"></a>LCD_GetNumColors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[466]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[467]"></a>LCD_GetNumLayers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[468]"></a>LCD_GetPalette</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[469]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPaletteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[46a]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
</UL>

<P><STRONG><a name="[46b]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[36f]"></a>LCD_GetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_GetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[46c]"></a>LCD_GetSwapXYEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetSwapXYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetSwapXYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[3ae]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[427]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>

<P><STRONG><a name="[3af]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3cb]"></a>LCD_GetXSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[379]"></a>LCD_GetXSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[3ac]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerPos
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>

<P><STRONG><a name="[37c]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[3cc]"></a>LCD_GetYSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[37a]"></a>LCD_GetYSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[3ad]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerPos
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>

<P><STRONG><a name="[37b]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetYSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[46e]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlockScaled
</UL>

<P><STRONG><a name="[6]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[46f]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[367]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>

<P><STRONG><a name="[12b]"></a>LCD_Index2Color_8666</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, guicc_8666.o(i.LCD_Index2Color_8666))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_8666
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8666.o(.constdata)
</UL>
<P><STRONG><a name="[bf]"></a>LCD_Index2Color_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_888_index2color.o(i.LCD_Index2Color_888))
<BR>[Address Reference Count : 2]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
<LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[be]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888_index2color.o(i.LCD_Index2Color_8888))
<BR>[Address Reference Count : 5]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
<LI> gui_drawbitmap_8888.o(.constdata)
<LI> gui_drawbitmap_8888.o(i._DrawBitmap_8888)
<LI> guicc_8888.o(.constdata)
<LI> guidev_writetoactivealpha.o(i._WriteToActiveAlpha)
</UL>
<P><STRONG><a name="[145]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565.o(i.LCD_Index2Color_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>LCD_Index2Color_M888</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guicc_m888_index2color.o(i.LCD_Index2Color_M888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[13d]"></a>LCD_Index2Color_M8888I</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guicc_m8888i_index2color.o(i.LCD_Index2Color_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[20c]"></a>LCD_Init</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, bsp_lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LCD_Init &rArr; LCD_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LTDCCLKDivConfig
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAIConfig
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAICmd
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[476]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[477]"></a>LCD_InitLUT</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_InitLUT &rArr; LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[3e9]"></a>LCD_SelectLCD</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SelectLCD &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[2d5]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[47d]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[479]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[3c8]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
</UL>

<P><STRONG><a name="[3ef]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[357]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineScaled
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixelsScaled
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
</UL>

<P><STRONG><a name="[47a]"></a>LCD_SetDevFunc</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetDevFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[37d]"></a>LCD_SetDisplaySize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_SetDisplaySize))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[2f3]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[478]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[673]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd.o(i.LCD_SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineScaled
</UL>

<P><STRONG><a name="[3f1]"></a>LCD_SetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[3f2]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
</UL>

<P><STRONG><a name="[47b]"></a>LCD_SetVRAMAddrEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVRAMAddrEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVRAMAddrEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[47c]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[3f4]"></a>LCD_SetVisEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
</UL>

<P><STRONG><a name="[3c7]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[41e]"></a>LCD_X_Config</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, lcdconf_lin_template.o(i.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncMixColorsBulk
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncGetpPalConvTable
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncAlphaBlending
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M888_SetCustColorConv
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M8888I_SetCustColorConv
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M565_SetCustColorConv
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M4444I_SetCustColorConv
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M1555I_SetCustColorConv
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[487]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, lcdconf_lin_template.o(i.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerCmd
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerPos
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerAlpha
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLUTEntry
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_LayerEnableColorKeying
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DisplayOn
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DisplayOff
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChromaMode
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[491]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 424 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[492]"></a>LCD__GetBPP</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[3bd]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>

<P><STRONG><a name="[20a]"></a>LED_GPIO_Config</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, bsp_led.o(i.LED_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LED_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[493]"></a>LISTBOX_AddKey</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 684 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[495]"></a>LISTBOX_AddString</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, listbox.o(i.LISTBOX_AddString))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[296]"></a>LISTBOX_AddStringH</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, listbox.o(i.LISTBOX_AddStringH))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddStringH &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[db]"></a>LISTBOX_Callback</STRONG> (Thumb, 466 bytes, Stack size 72 bytes, listbox.o(i.LISTBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 756 + Unknown Stack Size
<LI>Call Chain = LISTBOX_Callback &rArr; LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(i.LISTBOX_CreateUser)
</UL>
<P><STRONG><a name="[292]"></a>LISTBOX_CreateAsChild</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, listbox.o(i.LISTBOX_CreateAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 748 + Unknown Stack Size
<LI>Call Chain = LISTBOX_CreateAsChild &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[4a0]"></a>LISTBOX_CreateUser</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, listbox.o(i.LISTBOX_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 700 + Unknown Stack Size
<LI>Call Chain = LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
</UL>

<P><STRONG><a name="[4a2]"></a>LISTBOX_DecSel</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = LISTBOX_DecSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[282]"></a>LISTBOX_GetSel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = LISTBOX_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4a4]"></a>LISTBOX_IncSel</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4a5]"></a>LISTBOX_InvalidateItem</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX_InvalidateItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[dc]"></a>LISTBOX_OwnerDraw</STRONG> (Thumb, 518 bytes, Stack size 56 bytes, listbox.o(i.LISTBOX_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = LISTBOX_OwnerDraw &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(i.LISTBOX_CreateUser)
</UL>
<P><STRONG><a name="[294]"></a>LISTBOX_SetAutoScrollV</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 604 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[297]"></a>LISTBOX_SetBkColor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetBkColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[29c]"></a>LISTBOX_SetFont</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetFont &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[29a]"></a>LISTBOX_SetItemDisabled</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetItemDisabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetItemDisabled &rArr; LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[29b]"></a>LISTBOX_SetItemSpacing</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetItemSpacing))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetItemSpacing &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[29e]"></a>LISTBOX_SetOwner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetOwner &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[299]"></a>LISTBOX_SetScrollbarColor</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetScrollbarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetScrollbarColor &rArr; LISTBOX__SetScrollbarColor &rArr; SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[293]"></a>LISTBOX_SetScrollbarWidth</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetScrollbarWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 404 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetScrollbarWidth &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[29f]"></a>LISTBOX_SetSel</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4a1]"></a>LISTBOX_SetText</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[29d]"></a>LISTBOX_SetTextAlign</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[298]"></a>LISTBOX_SetTextColor</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[498]"></a>LISTBOX_UpdateScrollers</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_UpdateScrollers))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[497]"></a>LISTBOX__AddSize</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX__AddSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = LISTBOX__AddSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[4a6]"></a>LISTBOX__GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listbox.o(i.LISTBOX__GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTBOX__GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4a8]"></a>LISTBOX__GetpStringLocked</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX__GetpStringLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LISTBOX__GetpStringLocked &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[49a]"></a>LISTBOX__InvalidateInsideArea</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[499]"></a>LISTBOX__InvalidateItem</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX__InvalidateItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemDisabled
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[4a7]"></a>LISTBOX__InvalidateItemAndBelow</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX__InvalidateItemAndBelow))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateItemAndBelow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[496]"></a>LISTBOX__InvalidateItemSize</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX__InvalidateItemSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LISTBOX__InvalidateItemSize &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddStringH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[4aa]"></a>LISTBOX__SetScrollbarColor</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX__SetScrollbarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = LISTBOX__SetScrollbarColor &rArr; SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[4ab]"></a>LISTBOX__SetScrollbarWidth</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX__SetScrollbarWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetDefaultWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[4b5]"></a>LISTVIEW_AddColumn</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW_AddColumn))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[4ba]"></a>LISTVIEW_AddRow</STRONG> (Thumb, 262 bytes, Stack size 64 bytes, listview.o(i.LISTVIEW_AddRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[dd]"></a>LISTVIEW_Callback</STRONG> (Thumb, 522 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_Callback &rArr; _OnPaint &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[123]"></a>LISTVIEW_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_CreateIndirect &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(.constdata)
</UL>
<P><STRONG><a name="[4c2]"></a>LISTVIEW_CreateUser</STRONG> (Thumb, 220 bytes, Stack size 72 bytes, listview.o(i.LISTVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateIndirect
</UL>

<P><STRONG><a name="[4c3]"></a>LISTVIEW_GetHeader</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetHeader &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[4c4]"></a>LISTVIEW_GetLBorder</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetLBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetLBorder &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[4c5]"></a>LISTVIEW_GetRBorder</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetRBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetRBorder &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[4c6]"></a>LISTVIEW_GetSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetSel &rArr; _GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[4c8]"></a>LISTVIEW_GetWrapMode</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_GetWrapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetWrapMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[de]"></a>LISTVIEW_OwnerDraw</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_OwnerDraw &rArr; GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[4c9]"></a>LISTVIEW_RowIsDisabled</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_RowIsDisabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LISTVIEW_RowIsDisabled &rArr; LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[4ca]"></a>LISTVIEW_SetColumnWidth</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW_SetColumnWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetColumnWidth &rArr; HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[4cb]"></a>LISTVIEW_SetFont</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, listview.o(i.LISTVIEW_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetFont &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[4cc]"></a>LISTVIEW_SetGridVis</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW_SetGridVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 604 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetGridVis &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[4cd]"></a>LISTVIEW_SetItemText</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, listview.o(i.LISTVIEW_SetItemText))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[4ce]"></a>LISTVIEW_SetRowHeight</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW_SetRowHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 604 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetRowHeight &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[4bb]"></a>LISTVIEW__GetNumColumns</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW__GetNumColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumColumns &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>

<P><STRONG><a name="[4b6]"></a>LISTVIEW__GetNumRows</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview.o(i.LISTVIEW__GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumRows &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4cf]"></a>LISTVIEW__GetRowDistY</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW__GetRowDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTVIEW__GetRowDistY
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[4b7]"></a>LISTVIEW__GetpRow</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__GetpRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[4b8]"></a>LISTVIEW__InvalidateInsideArea</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4bc]"></a>LISTVIEW__InvalidateRow</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW__InvalidateRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>

<P><STRONG><a name="[4d0]"></a>LISTVIEW__SetSel</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4b9]"></a>LISTVIEW__UpdateScrollParas</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, listview.o(i.LISTVIEW__UpdateScrollParas))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[699]"></a>LTDC_Cmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DisplayOn
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DisplayOff
</UL>

<P><STRONG><a name="[8f]"></a>LTDC_IRQHandler</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, lcdconf_lin_template.o(i.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = LTDC_IRQHandler &rArr; OSIntExit &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfirmEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[69d]"></a>LTDC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
</UL>

<P><STRONG><a name="[475]"></a>LTDC_Init</STRONG> (Thumb, 378 bytes, Stack size 20 bytes, stm32f4xx_ltdc.o(i.LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[48d]"></a>LTDC_LayerCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[69e]"></a>LTDC_LayerInit</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_LayerInit
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
</UL>

<P><STRONG><a name="[489]"></a>LTDC_ReloadConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_ReloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerPos
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerAlpha
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLUTEntry
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[214]"></a>MPU6050ReadID</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, mpu6050.o(i.MPU6050ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MPU6050ReadID &rArr; Debug_printf &rArr; printflt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[4d7]"></a>MPU6050_ReadData</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, mpu6050.o(i.MPU6050_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MPU6050_ReadData &rArr; i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050ReadID
</UL>

<P><STRONG><a name="[4dd]"></a>MPU_Read_Len</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, mpu6050.o(i.MPU_Read_Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MPU_Read_Len &rArr; i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_self_test
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_accel_prod_shift
</UL>

<P><STRONG><a name="[4de]"></a>MPU_Write_Len</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, mpu6050.o(i.MPU_Write_Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_int_latched
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_gyro_fsr
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_fsr
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
</UL>

<P><STRONG><a name="[1fd]"></a>MainTask</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, windowdlg.o(i.MainTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1624 + Unknown Stack Size
<LI>Call Chain = MainTask &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainWindow
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWindow
</UL>

<P><STRONG><a name="[4df]"></a>MainWindow</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, windowdlg.o(i.MainWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 700 + Unknown Stack Size
<LI>Call Chain = MainWindow &rArr; ICONVIEW_AddBitmapItem &rArr; ICONVIEW__ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateEx
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateWindow2
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>

<P><STRONG><a name="[30]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[252]"></a>Mem_Clr</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, lib_mem.o(i.Mem_Clr))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Mem_Clr &rArr; Mem_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_NameClr
</UL>

<P><STRONG><a name="[1ec]"></a>Mem_Init</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lib_mem.o(i.Mem_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = Mem_Init &rArr; Mem_SegCreate &rArr; Mem_SegCreateCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SW_Exception
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_SegCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[4e1]"></a>Mem_SegCreate</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, lib_mem.o(i.Mem_SegCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = Mem_SegCreate &rArr; Mem_SegCreateCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_SegCreateCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_Init
</UL>

<P><STRONG><a name="[4e0]"></a>Mem_Set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, lib_mem.o(i.Mem_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Mem_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_Clr
</UL>

<P><STRONG><a name="[2e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e4]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[205]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[4f5]"></a>OSCfg_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cfg_app.o(i.OSCfg_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[52e]"></a>OSIdleTaskHook</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSIdleTaskHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSIdleTaskHook
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTask
</UL>

<P><STRONG><a name="[4e5]"></a>OSInit</STRONG> (Thumb, 270 bytes, Stack size 16 bytes, os_core.o(i.OSInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = OSInit &rArr; OS_TmrInit &rArr; OSTaskCreate &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrInit
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTaskInit
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInit
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTaskInit
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemInit
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioInit
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexInit
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgPoolInit
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Dbg_Init
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHook
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInit
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTaskInit
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCfg_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e6]"></a>OSInitHook</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSInitHook))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[4d4]"></a>OSIntEnter</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, os_core.o(i.OSIntEnter))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[4d6]"></a>OSIntExit</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, os_core.o(i.OSIntExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSIntExit &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioGetHighest
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1f5]"></a>OSMemCreate</STRONG> (Thumb, 216 bytes, Stack size 64 bytes, os_mem.o(i.OSMemCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = OSMemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemDbgListAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[4f9]"></a>OSMemGet</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, os_mem.o(i.OSMemGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSMemGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[201]"></a>OSMemPut</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, os_mem.o(i.OSMemPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSMemPut
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
</UL>

<P><STRONG><a name="[4fa]"></a>OSMutexCreate</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, os_mutex.o(i.OSMutexCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSMutexCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListInit
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexDbgListAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrInit
</UL>

<P><STRONG><a name="[4fd]"></a>OSMutexPend</STRONG> (Thumb, 450 bytes, Stack size 64 bytes, os_mutex.o(i.OSMutexPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = OSMutexPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskChangePrio
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrLock
</UL>

<P><STRONG><a name="[502]"></a>OSMutexPost</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, os_mutex.o(i.OSMutexPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSMutexPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioInsert
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsertTail
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpRemove
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpPrioFindHighest
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrUnlock
</UL>

<P><STRONG><a name="[501]"></a>OSSched</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, os_core.o(i.OSSched))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioGetHighest
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCtxSw
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPend
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskQPost
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>

<P><STRONG><a name="[50b]"></a>OSSchedLock</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, os_core.o(i.OSSchedLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSSchedLock &rArr; OS_SchedLockTimeMeasStart
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedLockTimeMeasStart
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[50d]"></a>OSSchedUnlock</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, os_core.o(i.OSSchedUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OSSchedUnlock &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedLockTimeMeasStop
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[415]"></a>OSSemCreate</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, os_sem.o(i.OSSemCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListInit
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemDbgListAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[416]"></a>OSSemPend</STRONG> (Thumb, 388 bytes, Stack size 64 bytes, os_sem.o(i.OSSemPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
</UL>

<P><STRONG><a name="[417]"></a>OSSemPost</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, os_sem.o(i.OSSemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = OSSemPost &rArr; OS_SemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>

<P><STRONG><a name="[511]"></a>OSStart</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, os_core.o(i.OSStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSStart &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioGetHighest
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[512]"></a>OSStatReset</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, os_stat.o(i.OSStatReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSStatReset
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrResetPeak
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListResetPeak
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
</UL>

<P><STRONG><a name="[1ee]"></a>OSStatTaskCPUUsageInit</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, os_stat.o(i.OSStatTaskCPUUsageInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = OSStatTaskCPUUsageInit &rArr; OSTaskSuspend &rArr; OS_TaskSuspend &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[53b]"></a>OSStatTaskHook</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSStatTaskHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSStatTaskHook
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
</UL>

<P><STRONG><a name="[1f6]"></a>OSTaskCreate</STRONG> (Thumb, 382 bytes, Stack size 80 bytes, os_task.o(i.OSTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSTaskCreate &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioInsert
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsertTail
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInitTCB
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDbgListAdd
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgQInit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrInit
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTaskInit
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTaskInit
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTaskInit
</UL>

<P><STRONG><a name="[518]"></a>OSTaskCreateHook</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTaskCreateHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskCreateHook
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[1f7]"></a>OSTaskDel</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, os_task.o(i.OSTaskDel))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = OSTaskDel &rArr; OS_MutexGrpPostAll &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListRemove
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInitTCB
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskDbgListRemove
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskChangePrio
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpPrioFindHighest
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpPostAll
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgQFreeAll
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[51e]"></a>OSTaskDelHook</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTaskDelHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskDelHook
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[1fe]"></a>OSTaskQPend</STRONG> (Thumb, 440 bytes, Stack size 40 bytes, os_task.o(i.OSTaskQPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = OSTaskQPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgQGet
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
</UL>

<P><STRONG><a name="[521]"></a>OSTaskQPost</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, os_task.o(i.OSTaskQPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = OSTaskQPost &rArr; OS_TaskQPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskQPost
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[1dc]"></a>OSTaskResume</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, os_task.o(i.OSTaskResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = OSTaskResume &rArr; OS_TaskResume &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWhere
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskPower
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLight
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCheckPeople
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[53e]"></a>OSTaskReturnHook</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTaskReturnHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskReturnHook
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[524]"></a>OSTaskSemPend</STRONG> (Thumb, 446 bytes, Stack size 32 bytes, os_task.o(i.OSTaskSemPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = OSTaskSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTask
</UL>

<P><STRONG><a name="[525]"></a>OSTaskSemPost</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, os_task.o(i.OSTaskSemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = OSTaskSemPost &rArr; OS_TaskSemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[527]"></a>OSTaskStkChk</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, os_task.o(i.OSTaskStkChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
</UL>

<P><STRONG><a name="[516]"></a>OSTaskStkInit</STRONG> (Thumb, 600 bytes, Stack size 20 bytes, os_cpu_c.o(i.OSTaskStkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[1d8]"></a>OSTaskSuspend</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, os_task.o(i.OSTaskSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = OSTaskSuspend &rArr; OS_TaskSuspend &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWhere
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskPower
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLight
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCheckPeople
</UL>

<P><STRONG><a name="[1d7]"></a>OSTaskSwHook</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTaskSwHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSTaskSwHook
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_FP_Reg_Pop
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_FP_Reg_Push
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_PendSVHandler
</UL>

<P><STRONG><a name="[1dd]"></a>OSTimeDly</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, os_time.o(i.OSTimeDly))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = OSTimeDly &rArr; OS_TickListInsertDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListInsertDly
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWhere
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShowBQ
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLed1
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>

<P><STRONG><a name="[1da]"></a>OSTimeDlyHMSM</STRONG> (Thumb, 382 bytes, Stack size 56 bytes, os_time.o(i.OSTimeDlyHMSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = OSTimeDlyHMSM &rArr; OS_TickListInsertDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListInsertDly
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWindow
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWhere
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouchScan
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShowBQ
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskPower
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLight
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLed3
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCheckPeople
</UL>

<P><STRONG><a name="[414]"></a>OSTimeGet</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, os_time.o(i.OSTimeGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>

<P><STRONG><a name="[52c]"></a>OSTimeTick</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, os_time.o(i.OSTimeTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OSTimeTick &rArr; OSTaskSemPost &rArr; OS_TaskSemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
</UL>

<P><STRONG><a name="[52d]"></a>OSTimeTickHook</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTimeTickHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTimeTickHook
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[36]"></a>OS_CPU_SysTickHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, os_cpu_c.o(i.OS_CPU_SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = OS_CPU_SysTickHandler &rArr; OSTimeTick &rArr; OSTaskSemPost &rArr; OS_TaskSemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[215]"></a>OS_CPU_SysTickInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, os_cpu_c.o(i.OS_CPU_SysTickInit))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Tick_Init
</UL>

<P><STRONG><a name="[4f4]"></a>OS_Dbg_Init</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, os_dbg.o(i.OS_Dbg_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[4e9]"></a>OS_FlagInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, os_flag.o(i.OS_FlagInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[e0]"></a>OS_IdleTask</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, os_core.o(i.OS_IdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OS_IdleTask &rArr; OSIdleTaskHook
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIdleTaskHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(i.OS_IdleTaskInit)
</UL>
<P><STRONG><a name="[4f0]"></a>OS_IdleTaskInit</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, os_core.o(i.OS_IdleTaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = OS_IdleTaskInit &rArr; OSTaskCreate &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[4f8]"></a>OS_MemDbgListAdd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, os_mem.o(i.OS_MemDbgListAdd))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
</UL>

<P><STRONG><a name="[4ea]"></a>OS_MemInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, os_mem.o(i.OS_MemInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[4eb]"></a>OS_MsgPoolInit</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, os_msg.o(i.OS_MsgPoolInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_MsgPoolInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[51d]"></a>OS_MsgQFreeAll</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, os_msg.o(i.OS_MsgQFreeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_MsgQFreeAll
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[520]"></a>OS_MsgQGet</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, os_msg.o(i.OS_MsgQGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_MsgQGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPend
</UL>

<P><STRONG><a name="[517]"></a>OS_MsgQInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, os_msg.o(i.OS_MsgQInit))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInitTCB
</UL>

<P><STRONG><a name="[53d]"></a>OS_MsgQPut</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, os_msg.o(i.OS_MsgQPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_MsgQPut
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskQPost
</UL>

<P><STRONG><a name="[4fc]"></a>OS_MutexDbgListAdd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, os_mutex.o(i.OS_MutexDbgListAdd))
<BR><BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>

<P><STRONG><a name="[4fe]"></a>OS_MutexGrpAdd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, os_mutex.o(i.OS_MutexGrpAdd))
<BR><BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpPostAll
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>

<P><STRONG><a name="[51c]"></a>OS_MutexGrpPostAll</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, os_mutex.o(i.OS_MutexGrpPostAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OS_MutexGrpPostAll &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpRemove
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[505]"></a>OS_MutexGrpPrioFindHighest</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, os_mutex.o(i.OS_MutexGrpPrioFindHighest))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_MutexGrpPrioFindHighest
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateTimeout
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskChangePrio
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[504]"></a>OS_MutexGrpRemove</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_mutex.o(i.OS_MutexGrpRemove))
<BR><BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpPostAll
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[4ec]"></a>OS_MutexInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, os_mutex.o(i.OS_MutexInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[500]"></a>OS_Pend</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, os_core.o(i.OS_Pend))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskBlock
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListInsertPrio
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendDbgNameAdd
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPend
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>

<P><STRONG><a name="[530]"></a>OS_PendDataInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, os_core.o(i.OS_PendDataInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_PendDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
</UL>

<P><STRONG><a name="[532]"></a>OS_PendDbgNameAdd</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, os_core.o(i.OS_PendDbgNameAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_PendDbgNameAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
</UL>

<P><STRONG><a name="[536]"></a>OS_PendDbgNameRemove</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, os_core.o(i.OS_PendDbgNameRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_PendDbgNameRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
</UL>

<P><STRONG><a name="[533]"></a>OS_PendListChangePrio</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, os_core.o(i.OS_PendListChangePrio))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OS_PendListChangePrio &rArr; OS_PendListInsertPrio
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove1
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListInsertPrio
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskChangePrio
</UL>

<P><STRONG><a name="[4fb]"></a>OS_PendListInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_core.o(i.OS_PendListInit))
<BR><BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>

<P><STRONG><a name="[531]"></a>OS_PendListInsertPrio</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, os_core.o(i.OS_PendListInsertPrio))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_PendListInsertPrio
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListChangePrio
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
</UL>

<P><STRONG><a name="[51b]"></a>OS_PendListRemove</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, os_core.o(i.OS_PendListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove1
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateTimeout
</UL>

<P><STRONG><a name="[534]"></a>OS_PendListRemove1</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, os_core.o(i.OS_PendListRemove1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_PendListRemove1
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListChangePrio
</UL>

<P><STRONG><a name="[509]"></a>OS_Post</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, os_core.o(i.OS_Post))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListRemove
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post1
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendDbgNameRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskQPost
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpPostAll
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[535]"></a>OS_Post1</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, os_core.o(i.OS_Post1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_Post1
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
</UL>

<P><STRONG><a name="[4f6]"></a>OS_PrioGetHighest</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, os_prio.o(i.OS_PrioGetHighest))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_CntLeadZeros
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>

<P><STRONG><a name="[4e7]"></a>OS_PrioInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, os_prio.o(i.OS_PrioInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[507]"></a>OS_PrioInsert</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, os_prio.o(i.OS_PrioInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_PrioInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskChangePrio
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[53a]"></a>OS_PrioRemove</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, os_prio.o(i.OS_PrioRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_PrioRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
</UL>

<P><STRONG><a name="[4ed]"></a>OS_QInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, os_q.o(i.OS_QInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[4e8]"></a>OS_RdyListInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, os_core.o(i.OS_RdyListInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[537]"></a>OS_RdyListInsert</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, os_core.o(i.OS_RdyListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_RdyListInsert &rArr; OS_PrioInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioInsert
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsertTail
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsertHead
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateTimeout
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateDly
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
</UL>

<P><STRONG><a name="[539]"></a>OS_RdyListInsertHead</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, os_core.o(i.OS_RdyListInsertHead))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_RdyListInsertHead
</UL>
<BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskChangePrio
</UL>

<P><STRONG><a name="[508]"></a>OS_RdyListInsertTail</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, os_core.o(i.OS_RdyListInsertTail))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_RdyListInsertTail
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskChangePrio
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[506]"></a>OS_RdyListRemove</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, os_core.o(i.OS_RdyListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskBlock
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskChangePrio
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[50c]"></a>OS_SchedLockTimeMeasStart</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, os_core.o(i.OS_SchedLockTimeMeasStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_SchedLockTimeMeasStart
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>

<P><STRONG><a name="[50e]"></a>OS_SchedLockTimeMeasStop</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, os_core.o(i.OS_SchedLockTimeMeasStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_SchedLockTimeMeasStop
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
</UL>
<BR>[Called By]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
</UL>

<P><STRONG><a name="[50f]"></a>OS_SemDbgListAdd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, os_sem.o(i.OS_SemDbgListAdd))
<BR><BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>

<P><STRONG><a name="[4ee]"></a>OS_SemInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, os_sem.o(i.OS_SemInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[510]"></a>OS_SemPost</STRONG> (Thumb, 294 bytes, Stack size 56 bytes, os_sem.o(i.OS_SemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = OS_SemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>

<P><STRONG><a name="[e1]"></a>OS_StatTask</STRONG> (Thumb, 684 bytes, Stack size 24 bytes, os_stat.o(i.OS_StatTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OS_StatTask &rArr; OSTimeDly &rArr; OS_TickListInsertDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskHook
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_stat.o(i.OS_StatTaskInit)
</UL>
<P><STRONG><a name="[4f2]"></a>OS_StatTaskInit</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, os_stat.o(i.OS_StatTaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = OS_StatTaskInit &rArr; OSTaskCreate &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[52f]"></a>OS_TaskBlock</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, os_core.o(i.OS_TaskBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListInsert
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
</UL>

<P><STRONG><a name="[4ff]"></a>OS_TaskChangePrio</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, os_task.o(i.OS_TaskChangePrio))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = OS_TaskChangePrio &rArr; OS_PendListChangePrio &rArr; OS_PendListInsertPrio
</UL>
<BR>[Calls]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioInsert
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsertTail
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsertHead
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListChangePrio
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpPrioFindHighest
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateTimeout
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>

<P><STRONG><a name="[519]"></a>OS_TaskDbgListAdd</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, os_task.o(i.OS_TaskDbgListAdd))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[51f]"></a>OS_TaskDbgListRemove</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, os_task.o(i.OS_TaskDbgListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[4ef]"></a>OS_TaskInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, os_task.o(i.OS_TaskInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[515]"></a>OS_TaskInitTCB</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, os_task.o(i.OS_TaskInitTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgQInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[522]"></a>OS_TaskQPost</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, os_task.o(i.OS_TaskQPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OS_TaskQPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgQPut
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPost
</UL>

<P><STRONG><a name="[523]"></a>OS_TaskResume</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, os_task.o(i.OS_TaskResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OS_TaskResume &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
</UL>

<P><STRONG><a name="[df]"></a>OS_TaskReturn</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, os_task.o(i.OS_TaskReturn))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OS_TaskReturn &rArr; OSTaskDel &rArr; OS_MutexGrpPostAll &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskReturnHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(i.OSTaskStkInit)
</UL>
<P><STRONG><a name="[526]"></a>OS_TaskSemPost</STRONG> (Thumb, 448 bytes, Stack size 32 bytes, os_task.o(i.OS_TaskSemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = OS_TaskSemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPost
</UL>

<P><STRONG><a name="[528]"></a>OS_TaskSuspend</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, os_task.o(i.OS_TaskSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = OS_TaskSuspend &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
</UL>

<P><STRONG><a name="[53c]"></a>OS_TickListInsert</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, os_tick.o(i.OS_TickListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_TickListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskBlock
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListInsertDly
</UL>

<P><STRONG><a name="[52b]"></a>OS_TickListInsertDly</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, os_tick.o(i.OS_TickListInsertDly))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OS_TickListInsertDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
</UL>

<P><STRONG><a name="[51a]"></a>OS_TickListRemove</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, os_tick.o(i.OS_TickListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_TickListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
</UL>

<P><STRONG><a name="[513]"></a>OS_TickListResetPeak</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_tick.o(i.OS_TickListResetPeak))
<BR><BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
</UL>

<P><STRONG><a name="[e2]"></a>OS_TickTask</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, os_tick.o(i.OS_TickTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = OS_TickTask &rArr; OS_TickListUpdateTimeout &rArr; OS_TaskChangePrio &rArr; OS_PendListChangePrio &rArr; OS_PendListInsertPrio
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateTimeout
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdateDly
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_tick.o(i.OS_TickTaskInit)
</UL>
<P><STRONG><a name="[4f1]"></a>OS_TickTaskInit</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, os_tick.o(i.OS_TickTaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = OS_TickTaskInit &rArr; OSTaskCreate &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[4f3]"></a>OS_TmrInit</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, os_tmr.o(i.OS_TmrInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = OS_TmrInit &rArr; OSTaskCreate &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[514]"></a>OS_TmrResetPeak</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_tmr.o(i.OS_TmrResetPeak))
<BR><BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
</UL>

<P><STRONG><a name="[e3]"></a>OS_TmrTask</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, os_tmr.o(i.OS_TmrTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = OS_TmrTask &rArr; OS_TmrLock &rArr; OSMutexPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrUnlink
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrUnlock
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrLock
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_tmr.o(i.OS_TmrInit)
</UL>
<P><STRONG><a name="[542]"></a>OS_TmrUnlink</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, os_tmr.o(i.OS_TmrUnlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_TmrUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[e4]"></a>PROGBAR_Callback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = PROGBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar.o(i.PROGBAR_CreateUser)
</UL>
<P><STRONG><a name="[124]"></a>PROGBAR_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, progbar.o(i.PROGBAR_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = PROGBAR_CreateIndirect &rArr; PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(.constdata)
</UL>
<P><STRONG><a name="[544]"></a>PROGBAR_CreateUser</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, progbar.o(i.PROGBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateIndirect
</UL>

<P><STRONG><a name="[10]"></a>PROGBAR_DrawSkinFlex</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, progbar_skinflex.o(i.PROGBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = PROGBAR_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar.o(.data)
</UL>
<P><STRONG><a name="[548]"></a>PROGBAR_SetValue</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, progbar.o(i.PROGBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetValue &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
</UL>

<P><STRONG><a name="[54a]"></a>PROGBAR__GetTextLocked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, progbar.o(i.PROGBAR__GetTextLocked))
<BR><BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[54b]"></a>PROGBAR__GetTextRect</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR__GetTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[549]"></a>PROGBAR__Value2Pos</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR__Value2Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PROGBAR__Value2Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[54f]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[204]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CfgGpio
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RED_GPIO_Config
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT_GPIO_Config
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART6_Config
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART3_Config
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_GPIO_Config
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>

<P><STRONG><a name="[54d]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_Config
</UL>

<P><STRONG><a name="[580]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[216]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART3_Config
</UL>

<P><STRONG><a name="[21d]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART6_Config
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
</UL>

<P><STRONG><a name="[57d]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
</UL>

<P><STRONG><a name="[203]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CPU_ClkFreq
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[474]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[550]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LSICmd))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[472]"></a>RCC_LTDCCLKDivConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LTDCCLKDivConfig))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[473]"></a>RCC_PLLSAICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAICmd))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[471]"></a>RCC_PLLSAIConfig</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAIConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLLSAIConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[552]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[551]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[209]"></a>RED_GPIO_Config</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bsp_led.o(i.RED_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RED_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[54e]"></a>RNG_Cmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_rng.o(i.RNG_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_Config
</UL>

<P><STRONG><a name="[210]"></a>RNG_Config</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_rng.o(i.RNG_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RNG_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB2PeriphClockCmd
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[55e]"></a>RNG_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rng.o(i.RNG_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Seed
</UL>

<P><STRONG><a name="[55f]"></a>RNG_GetRandomNumber</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rng.o(i.RNG_GetRandomNumber))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Seed
</UL>

<P><STRONG><a name="[211]"></a>RTC_CLK_Config</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, bsp_rtc.o(i.RTC_CLK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = RTC_CLK_Config &rArr; Debug_printf &rArr; printflt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSICmd
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[558]"></a>RTC_EnterInitMode</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[559]"></a>RTC_ExitInitMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[200]"></a>RTC_GetDate</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Caculate_RTC
</UL>

<P><STRONG><a name="[1ff]"></a>RTC_GetTime</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Caculate_RTC
</UL>

<P><STRONG><a name="[554]"></a>RTC_Init</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[555]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[55a]"></a>RTC_SetDate</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
</UL>

<P><STRONG><a name="[55c]"></a>RTC_SetTime</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
</UL>

<P><STRONG><a name="[556]"></a>RTC_TimeAndDate_Set</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, bsp_rtc.o(i.RTC_TimeAndDate_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[553]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[55d]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
</UL>

<P><STRONG><a name="[1e5]"></a>Read_Seed</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, bsp_rng.o(i.Read_Seed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read_Seed
</UL>
<BR>[Calls]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_GetRandomNumber
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RNG_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShowBQ
</UL>

<P><STRONG><a name="[20e]"></a>Rheostat_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_adc.o(i.Rheostat_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Rheostat_Init &rArr; Rheostat_ADC_Mode_Config &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[56c]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[e5]"></a>SCROLLBAR_Callback</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Callback &rArr; _OnTouch &rArr; WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(i.SCROLLBAR_CreateUser)
</UL>
<P><STRONG><a name="[573]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_CreateAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[574]"></a>SCROLLBAR_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, scrollbar.o(i.SCROLLBAR_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>

<P><STRONG><a name="[575]"></a>SCROLLBAR_CreateUser</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, scrollbar.o(i.SCROLLBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[571]"></a>SCROLLBAR_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Dec &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[11]"></a>SCROLLBAR_DrawSkinFlex</STRONG> (Thumb, 374 bytes, Stack size 72 bytes, scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_DrawSkinFlex &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(.data)
</UL>
<P><STRONG><a name="[4b3]"></a>SCROLLBAR_GetDefaultWidth</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar_defaults.o(i.SCROLLBAR_GetDefaultWidth))
<BR><BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[570]"></a>SCROLLBAR_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[4b2]"></a>SCROLLBAR_SetColor</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>

<P><STRONG><a name="[56d]"></a>SCROLLBAR_SetValue</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[4b4]"></a>SCROLLBAR_SetWidth</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[56e]"></a>SCROLLBAR__InvalidatePartner</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__InvalidatePartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR__InvalidatePartner &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[62a]"></a>SCROLLBAR__Rect2VRect</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__Rect2VRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCROLLBAR__Rect2VRect
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[265]"></a>SDIO_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp7Error
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp3Error
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
</UL>

<P><STRONG><a name="[59d]"></a>SDIO_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[59b]"></a>SDIO_ClockCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[5a0]"></a>SDIO_DMACmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
</UL>

<P><STRONG><a name="[2d9]"></a>SDIO_DataConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_DataConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[57c]"></a>SDIO_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[267]"></a>SDIO_GetCommandResponse</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetCommandResponse))
<BR><BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[264]"></a>SDIO_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
</UL>

<P><STRONG><a name="[59c]"></a>SDIO_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[593]"></a>SDIO_GetPowerState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[268]"></a>SDIO_GetResponse</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_GetResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[68]"></a>SDIO_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SDIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDIO_IRQHandler &rArr; SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[59e]"></a>SDIO_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[588]"></a>SDIO_Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[2da]"></a>SDIO_ReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ReadData))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[2d8]"></a>SDIO_SendCommand</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_SendCommand))
<BR><BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[59a]"></a>SDIO_SetPowerState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_SetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[20b]"></a>SDRAM_Init</STRONG> (Thumb, 100 bytes, Stack size 80 bytes, bsp_sdram.o(i.SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SDRAM_Init &rArr; SDRAM_InitSequence &rArr; SDRAM_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMInit
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[58a]"></a>SD_Detect</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_Detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SD_Detect
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>

<P><STRONG><a name="[587]"></a>SD_EnableWideBusOperation</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_EnableWideBusOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[591]"></a>SD_GetCardInfo</STRONG> (Thumb, 780 bytes, Stack size 20 bytes, bsp_sdio_sd.o(i.SD_GetCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SD_GetCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[589]"></a>SD_GetState</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_GetState &rArr; SD_SendStatus &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Detect
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
</UL>

<P><STRONG><a name="[58c]"></a>SD_GetStatus</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_GetStatus &rArr; SD_GetState &rArr; SD_SendStatus &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[58d]"></a>SD_Init</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCardInfo
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[590]"></a>SD_InitializeCards</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_InitializeCards))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_InitializeCards &rArr; CmdResp6Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetPowerState
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[594]"></a>SD_LowLevel_DMA_RxConfig</STRONG> (Thumb, 136 bytes, Stack size 72 bytes, bsp_sdio_sd.o(i.SD_LowLevel_DMA_RxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SD_LowLevel_DMA_RxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
</UL>

<P><STRONG><a name="[599]"></a>SD_LowLevel_DMA_TxConfig</STRONG> (Thumb, 136 bytes, Stack size 72 bytes, bsp_sdio_sd.o(i.SD_LowLevel_DMA_TxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
</UL>

<P><STRONG><a name="[58e]"></a>SD_LowLevel_Init</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_LowLevel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SD_LowLevel_Init &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[58f]"></a>SD_PowerON</STRONG> (Thumb, 400 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_PowerON))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_PowerON &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SetPowerState
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClockCmd
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp7Error
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp3Error
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdError
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[277]"></a>SD_ProcessDMAIRQ</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_ProcessDMAIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SD_ProcessDMAIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[57e]"></a>SD_ProcessIRQSrc</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_ProcessIRQSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetITStatus
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_IRQHandler
</UL>

<P><STRONG><a name="[59f]"></a>SD_ReadMultiBlocks</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, bsp_sdio_sd.o(i.SD_ReadMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_ReadMultiBlocks &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[592]"></a>SD_SelectDeselect</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_SelectDeselect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_SelectDeselect &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[58b]"></a>SD_SendStatus</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_SendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_SendStatus &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>

<P><STRONG><a name="[5a1]"></a>SD_StopTransfer</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_StopTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_StopTransfer &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
</UL>

<P><STRONG><a name="[5a2]"></a>SD_WaitReadOperation</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_WaitReadOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_WaitReadOperation &rArr; SD_StopTransfer &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[5a3]"></a>SD_WaitWriteOperation</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_WaitWriteOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_WaitWriteOperation &rArr; SD_StopTransfer &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[5a4]"></a>SD_WriteMultiBlocks</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, bsp_sdio_sd.o(i.SD_WriteMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[ec]"></a>SLIDER_Callback</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, slider.o(i.SLIDER_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = SLIDER_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(i.SLIDER_CreateUser)
</UL>
<P><STRONG><a name="[122]"></a>SLIDER_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, slider.o(i.SLIDER_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = SLIDER_CreateIndirect &rArr; SLIDER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(.constdata)
</UL>
<P><STRONG><a name="[5a8]"></a>SLIDER_CreateUser</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, slider.o(i.SLIDER_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = SLIDER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateIndirect
</UL>

<P><STRONG><a name="[5a7]"></a>SLIDER_Dec</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, slider.o(i.SLIDER_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = SLIDER_Dec &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[12]"></a>SLIDER_DrawSkinFlex</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, slider_skinflex.o(i.SLIDER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = SLIDER_DrawSkinFlex &rArr; _DrawThumbV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetFlag
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.data)
</UL>
<P><STRONG><a name="[5ad]"></a>SLIDER_GetFlag</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, slider.o(i.SLIDER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SLIDER_GetFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[5ae]"></a>SLIDER_GetValue</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, slider.o(i.SLIDER_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = SLIDER_GetValue &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[5a6]"></a>SLIDER_Inc</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, slider.o(i.SLIDER_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = SLIDER_Inc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[5af]"></a>SLIDER_SetNumTicks</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, slider.o(i.SLIDER_SetNumTicks))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = SLIDER_SetNumTicks &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[5b0]"></a>SLIDER_SetRange</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, slider.o(i.SLIDER_SetRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = SLIDER_SetRange &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[5b1]"></a>SLIDER_SetValue</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, slider.o(i.SLIDER_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = SLIDER_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[33]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[ed]"></a>TEXT_Callback</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, text.o(i.TEXT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = TEXT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(i.TEXT_CreateUser)
</UL>
<P><STRONG><a name="[11f]"></a>TEXT_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, text.o(i.TEXT_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = TEXT_CreateIndirect &rArr; TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(.constdata)
</UL>
<P><STRONG><a name="[5b4]"></a>TEXT_CreateUser</STRONG> (Thumb, 152 bytes, Stack size 72 bytes, text.o(i.TEXT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateIndirect
</UL>

<P><STRONG><a name="[5b5]"></a>TEXT_SetFont</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text.o(i.TEXT_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = TEXT_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
</UL>

<P><STRONG><a name="[262]"></a>TEXT_SetText</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, text.o(i.TEXT_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = TEXT_SetText &rArr; GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Caculate_RTC
</UL>

<P><STRONG><a name="[5b6]"></a>TEXT_SetTextColor</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text.o(i.TEXT_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = TEXT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
</UL>

<P><STRONG><a name="[3]"></a>TP_Adjust</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touch.o(i.TP_Adjust))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>TP_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, touch.o(i.TP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = TP_Init &rArr; GT9147_Init &rArr; GT9147_RD_Reg &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; CT_Delay &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touch.o(.data)
</UL>
<P><STRONG><a name="[5b7]"></a>TP_Read_AD</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, touch.o(i.TP_Read_AD))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TP_Read_AD &rArr; TP_Write_Byte &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Write_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XOY
</UL>

<P><STRONG><a name="[5b9]"></a>TP_Read_XOY</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, touch.o(i.TP_Read_XOY))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = TP_Read_XOY &rArr; TP_Read_AD &rArr; TP_Write_Byte &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_AD
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XY
</UL>

<P><STRONG><a name="[5ba]"></a>TP_Read_XY</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, touch.o(i.TP_Read_XY))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TP_Read_XY &rArr; TP_Read_XOY &rArr; TP_Read_AD &rArr; TP_Write_Byte &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XOY
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XY2
</UL>

<P><STRONG><a name="[5bb]"></a>TP_Read_XY2</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, touch.o(i.TP_Read_XY2))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = TP_Read_XY2 &rArr; TP_Read_XY &rArr; TP_Read_XOY &rArr; TP_Read_AD &rArr; TP_Write_Byte &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XY
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
</UL>

<P><STRONG><a name="[2]"></a>TP_Scan</STRONG> (Thumb, 242 bytes, Stack size 8 bytes, touch.o(i.TP_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = TP_Scan &rArr; TP_Read_XY2 &rArr; TP_Read_XY &rArr; TP_Read_XOY &rArr; TP_Read_AD &rArr; TP_Write_Byte &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XY2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touch.o(.data)
</UL>
<P><STRONG><a name="[5b8]"></a>TP_Write_Byte</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, touch.o(i.TP_Write_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TP_Write_Byte &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_AD
</UL>

<P><STRONG><a name="[275]"></a>Turn_16</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bsp_dht22.o(i.Turn_16))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Data
</UL>

<P><STRONG><a name="[5e]"></a>USART3_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4xx_it.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = USART3_IRQHandler &rArr; OSTaskQPost &rArr; OS_TaskQPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPost
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[21c]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART6_Config
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART3_Config
</UL>

<P><STRONG><a name="[5bf]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>

<P><STRONG><a name="[5bc]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[21b]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART3_Config
</UL>

<P><STRONG><a name="[219]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART6_Config
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART3_Config
</UL>

<P><STRONG><a name="[5bd]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[5be]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>

<P><STRONG><a name="[32]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1df]"></a>Usart_SendByte</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_usart3.o(i.Usart_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Usart_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Senddec
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLed3
</UL>

<P><STRONG><a name="[1e0]"></a>Usart_Senddec</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bsp_usart3.o(i.Usart_Senddec))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = Usart_Senddec &rArr;  Usart_Senddec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Senddec
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Senddec
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLed3
</UL>

<P><STRONG><a name="[23c]"></a>WIDGET_AndState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_AndState))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
</UL>

<P><STRONG><a name="[439]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET_GetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[21e]"></a>WIDGET_HandleActive</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, widget.o(i.WIDGET_HandleActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[23b]"></a>WIDGET_OrState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_OrState))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
</UL>

<P><STRONG><a name="[545]"></a>WIDGET_SetEffect</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, widget.o(i.WIDGET_SetEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[2b2]"></a>WIDGET_SetFocusable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, widget.o(i.WIDGET_SetFocusable))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetFocusable &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddButton
</UL>

<P><STRONG><a name="[5c2]"></a>WIDGET_SetState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, widget.o(i.WIDGET_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[579]"></a>WIDGET_SetWidth</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, widget.o(i.WIDGET_SetWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[578]"></a>WIDGET__DrawTriangle</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, widget.o(i.WIDGET__DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[6a1]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET__EFFECT_DrawDown))
<BR><BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[5c6]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawDownRect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>

<P><STRONG><a name="[5c8]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5c3]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[5ca]"></a>WIDGET__GetWindowSizeX</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetWindowSizeX &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[22c]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widget.o(i.WIDGET__Init))
<BR><BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[576]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, widget.o(i.WIDGET__RotateRect90))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>

<P><STRONG><a name="[5cb]"></a>WIDGET__SetScrollState</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(i.WIDGET__SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[ef]"></a>WINDOW_Callback</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, window.o(i.WINDOW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = WINDOW_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window.o(i.WINDOW_CreateUser)
</UL>
<P><STRONG><a name="[11c]"></a>WINDOW_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, window.o(i.WINDOW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = WINDOW_CreateIndirect &rArr; WINDOW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(.constdata)
</UL>
<P><STRONG><a name="[5ce]"></a>WINDOW_CreateUser</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, window.o(i.WINDOW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = WINDOW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
</UL>

<P><STRONG><a name="[3a2]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[5cf]"></a>WM_BringToBottom</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, wm_lib.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[5c1]"></a>WM_BringToTop</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_bringtotop.o(i.WM_BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = WM_BringToTop &rArr; _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[5d4]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_lib.o(i.WM_CheckScrollBounds))
<BR><BR>[Called By]<UL><LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[5d3]"></a>WM_CheckScrollPos</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_lib.o(i.WM_CheckScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_CheckScrollPos
</UL>
<BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[5d5]"></a>WM_CreateTimer</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, wm_timer.o(i.WM_CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[22b]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 324 bytes, Stack size 48 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateUser
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[3c6]"></a>WM_Deactivate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i.WM_Deactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[226]"></a>WM_DefaultProc</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback1
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[5db]"></a>WM_DeleteTimer</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_timer.o(i.WM_DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[285]"></a>WM_DeleteWindow</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, wm.o(i.WM_DeleteWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = WM_DeleteWindow &rArr; WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[2bd]"></a>WM_DisableMemdev</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wm_memdev.o(i.WM_DisableMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_DisableMemdev &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateUser
</UL>

<P><STRONG><a name="[34d]"></a>WM_Exec</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, wm.o(i.WM_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 796 + Unknown Stack Size
<LI>Call Chain = WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[5e3]"></a>WM_ForEachDesc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_ForEachDesc &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[686]"></a>WM_GetActiveWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(i.WM_GetActiveWindow))
<BR><BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>

<P><STRONG><a name="[249]"></a>WM_GetClientRect</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>

<P><STRONG><a name="[440]"></a>WM_GetClientRectEx</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[326]"></a>WM_GetClientWindow</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetClientWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM_GetClientWindow &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
</UL>

<P><STRONG><a name="[26e]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateWindow2
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateWindow
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[6a7]"></a>WM_GetDesktopWindowEx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetDesktopWindowEx))
<BR><BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>

<P><STRONG><a name="[261]"></a>WM_GetDialogItem</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Caculate_RTC
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>

<P><STRONG><a name="[2d0]"></a>WM_GetFirstChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetFirstChild &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[5e7]"></a>WM_GetFlags</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_GetFlags &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[288]"></a>WM_GetFocusedWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetFocusedWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetFocusedWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
</UL>

<P><STRONG><a name="[454]"></a>WM_GetHasTrans</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_GetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_GetHasTrans &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[5e5]"></a>WM_GetId</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback1
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[4a9]"></a>WM_GetInsideRect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRect &rArr; WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[438]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetInsideRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
</UL>

<P><STRONG><a name="[459]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, wm_lib.o(i.WM_GetInsideRectExScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>

<P><STRONG><a name="[2d1]"></a>WM_GetNextSibling</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetNextSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
</UL>

<P><STRONG><a name="[291]"></a>WM_GetParent</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>

<P><STRONG><a name="[57a]"></a>WM_GetScrollPartner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetScrollPartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[44f]"></a>WM_GetScrollState</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_lib.o(i.WM_GetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[450]"></a>WM_GetScrollbarH</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[44e]"></a>WM_GetScrollbarV</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[5e9]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetWindowOrgX))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowOrgX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[5e8]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_lib.o(i.WM_GetWindowRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[290]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetListHeight
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2cd]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[ba]"></a>WM_HandlePID</STRONG> (Thumb, 878 bytes, Stack size 144 bytes, wm_touch.o(i.WM_HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 684 + Unknown Stack Size
<LI>Call Chain = WM_HandlePID &rArr; GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsEmpty
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[606]"></a>WM_HasCaptured</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_lib.o(i.WM_HasCaptured))
<BR><BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2b9]"></a>WM_HasFocus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_lib.o(i.WM_HasFocus))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[3bb]"></a>WM_HideWindow</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_hide.o(i.WM_HideWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[37f]"></a>WM_Init</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[4af]"></a>WM_InvalidateRect</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>

<P><STRONG><a name="[242]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetFont
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextAlign
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON__SetDrawObj
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[5f9]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, wm_lib.o(i.WM_InvalidateWindowAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[5fa]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>
<BR>[Called By]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[5fc]"></a>WM_IsFocusable</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, wm_lib.o(i.WM_IsFocusable))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = WM_IsFocusable &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2b8]"></a>WM_IsWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_lib.o(i.WM_IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[5fd]"></a>WM_MakeModal</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, wm_makemodal.o(i.WM_MakeModal))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = WM_MakeModal &rArr; WM__SendPIDMessage &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback2
</UL>

<P><STRONG><a name="[2d4]"></a>WM_MoveChildTo</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, wm_lib.o(i.WM_MoveChildTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = WM_MoveChildTo &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
</UL>

<P><STRONG><a name="[2d3]"></a>WM_MoveWindow</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_move.o(i.WM_MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_MoveWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[24c]"></a>WM_NotifyParent</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_lib.o(i.WM_NotifyParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[3dd]"></a>WM_OnKey</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, wm_lib.o(i.WM_OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM_OnKey &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[5f2]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_pid__getprevstate.o(i.WM_PID__SetPrevState))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[5f1]"></a>WM_ReleaseCapture</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_setcapture.o(i.WM_ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_ReleaseCapture &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[2d2]"></a>WM_ResizeWindow</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, wm_lib.o(i.WM_ResizeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>

<P><STRONG><a name="[601]"></a>WM_RestartTimer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_timer.o(i.WM_RestartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = WM_RestartTimer &rArr; GUI_TIMER_SetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress1
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialogProgress
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[5ed]"></a>WM_Screen2hWin</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_screen2win.o(i.WM_Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_Screen2hWin &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[5d7]"></a>WM_SelectWindow</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = WM_SelectWindow &rArr; WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[36a]"></a>WM_SendMessage</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm.o(i.WM_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
</UL>

<P><STRONG><a name="[328]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_SendMessageNoPara &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[5da]"></a>WM_SendToParent</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = WM_SendToParent &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[2b4]"></a>WM_SetCallback</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = WM_SetCallback &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>

<P><STRONG><a name="[604]"></a>WM_SetCapture</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm_setcapture.o(i.WM_SetCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = WM_SetCapture &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[605]"></a>WM_SetCaptureMove</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, wm_setcapturemove.o(i.WM_SetCaptureMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = WM_SetCaptureMove &rArr; WM_SetCapture &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[608]"></a>WM_SetDefault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm.o(i.WM_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault &rArr; GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[289]"></a>WM_SetFocus</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, wm_lib.o(i.WM_SetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = WM_SetFocus &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Callback
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[2ba]"></a>WM_SetFocusOnNextChild</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(i.WM_SetFocusOnNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = WM_SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[2d6]"></a>WM_SetFocusOnPrevChild</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm_setfocusonprevchild.o(i.WM_SetFocusOnPrevChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = WM_SetFocusOnPrevChild &rArr; WM_SetFocus &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[23a]"></a>WM_SetHasTrans</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_SetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[45d]"></a>WM_SetScrollState</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[60c]"></a>WM_SetScrollValue</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_lib.o(i.WM_SetScrollValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_SetScrollValue
</UL>
<BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4d3]"></a>WM_SetScrollbarH</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(i.WM_SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[45c]"></a>WM_SetScrollbarV</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(i.WM_SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[2a4]"></a>WM_SetSize</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetListHeight
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__UndoClipBK
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__ClipBK
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[33f]"></a>WM_SetUserClipRect</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SetUserClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5c4]"></a>WM_SetXSize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = WM_SetXSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[5c5]"></a>WM_SetYSize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[327]"></a>WM_ShowWindow</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ShowWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FadeWindow
</UL>

<P><STRONG><a name="[3b9]"></a>WM_ValidateWindow</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ValidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_ValidateWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>

<P><STRONG><a name="[60f]"></a>WM__ActivateClipRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[5ec]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm__private.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[5f5]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM__Client2Screen))
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[5f7]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[5de]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, wm_timer.o(i.WM__DeleteAssocTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = WM__DeleteAssocTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[34b]"></a>WM__DeleteSecure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm.o(i.WM__DeleteSecure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__DeleteSecure
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[5e0]"></a>WM__DetachWindow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm.o(i.WM__DetachWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[5e4]"></a>WM__ForEachDesc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm__private.o(i.WM__ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>

<P><STRONG><a name="[5d9]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>

<P><STRONG><a name="[5c9]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>

<P><STRONG><a name="[613]"></a>WM__GetFirstSibling</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm__private.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[609]"></a>WM__GetFocusedChild</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetFocusedChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetFocusedChild &rArr; WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[615]"></a>WM__GetLastSibling</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm__private.o(i.WM__GetLastSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetLastSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[324]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>

<P><STRONG><a name="[5d0]"></a>WM__GetPrevSibling</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[5dd]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm.o(i.WM__GetTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>

<P><STRONG><a name="[2a6]"></a>WM__GetWindowSizeX</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeX))
<BR><BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
</UL>

<P><STRONG><a name="[2cc]"></a>WM__GetWindowSizeY</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[323]"></a>WM__InitIVRSearch</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaledEx
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>

<P><STRONG><a name="[5d6]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[5f8]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[5f4]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[617]"></a>WM__InvalidateParent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__InvalidateParent
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[618]"></a>WM__InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[5d1]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[5cd]"></a>WM__IsAncestor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__private.o(i.WM__IsAncestor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>

<P><STRONG><a name="[5cc]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm__private.o(i.WM__IsAncestorOrSelf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestorOrSelf &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[614]"></a>WM__IsChild</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__private.o(i.WM__IsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocusedChild
</UL>

<P><STRONG><a name="[234]"></a>WM__IsEnabled</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm__private.o(i.WM__IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>

<P><STRONG><a name="[5ee]"></a>WM__IsInModalArea</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, wm_touch.o(i.WM__IsInModalArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__IsInModalArea &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[6a6]"></a>WM__IsInWindow</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_screen2win.o(i.WM__IsInWindow))
<BR><BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[5dc]"></a>WM__IsWindow</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm.o(i.WM__IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[5ff]"></a>WM__MoveWindow</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, wm_move.o(i.WM__MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
</UL>

<P><STRONG><a name="[61a]"></a>WM__Paint</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, wm.o(i.WM__Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[110]"></a>WM__Paint1</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, wm.o(i.WM__Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = WM__Paint1 &rArr; WM_SetDefault &rArr; GL_SetDefault &rArr; GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[696]"></a>WM__RectIsNZ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm.o(i.WM__RectIsNZ))
<BR><BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[5f3]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm__private.o(i.WM__RemoveCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[612]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveWindowFromList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[61f]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__private.o(i.WM__Screen2Client), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[603]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(i.WM__SelectTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[2b6]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__private.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>

<P><STRONG><a name="[5f0]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm__private.o(i.WM__SendMessageIfEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3b2]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, wm__private.o(i.WM__SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[5d8]"></a>WM__SendMsgNoData</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[5fe]"></a>WM__SendPIDMessage</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, wm_touch.o(i.WM__SendPIDMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM__SendPIDMessage &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[5ef]"></a>WM__SendTouchMessage</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_touch.o(i.WM__SendTouchMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = WM__SendTouchMessage &rArr; WM__SendPIDMessage &rArr; WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[60d]"></a>WM__SetScrollbarH</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[60e]"></a>WM__SetScrollbarV</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>

<P><STRONG><a name="[5c0]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, wm__private.o(i.WM__UpdateChildPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[1e8]"></a>_ShowGIF2</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, show_gif.o(i._ShowGIF2))
<BR><BR>[Stack]<UL><LI>Max Depth = 1544 + Unknown Stack Size
<LI>Call Chain = _ShowGIF2 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfo
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfo
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_DrawSubScaled
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShowBQ
</UL>

<P><STRONG><a name="[1e3]"></a>_ShowJPEG2</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, show_jpg.o(i._ShowJPEG2))
<BR><BR>[Stack]<UL><LI>Max Depth = 1640 + Unknown Stack Size
<LI>Call Chain = _ShowJPEG2 &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_GetInfo
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_Draw
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWhere
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShowBQ
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskPower
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLight
</UL>

<P><STRONG><a name="[6ae]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[74e]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[1d9]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTasktalk
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWhere
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskTouch
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskPower
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskLight
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCheckPeople
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback4
</UL>

<P><STRONG><a name="[74f]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[750]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[6b0]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[751]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[260]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback5
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Caculate_RTC
</UL>

<P><STRONG><a name="[752]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[753]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[6b5]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[6b1]"></a>__hardfp_asin</STRONG> (Thumb, 770 bytes, Stack size 88 bytes, asin.o(i.__hardfp_asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __hardfp_asin &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
</UL>

<P><STRONG><a name="[6ba]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[6bb]"></a>__hardfp_atan2</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
</UL>

<P><STRONG><a name="[6be]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conversion
</UL>

<P><STRONG><a name="[6b7]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[6bf]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[6b2]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[6bc]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[6b4]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[6c0]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[6b6]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[754]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[755]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[756]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[6b3]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[6bd]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[1f3]"></a>bsp_DelayMS</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp.o(i.bsp_DelayMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bsp_DelayMS &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Rst
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[256]"></a>bsp_DelayUS</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, bsp.o(i.bsp_DelayUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Rst
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Bit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Check
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_Delay
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Write_Byte
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_AD
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Start
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_SendByte
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_NAck
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Ack
</UL>

<P><STRONG><a name="[6dc]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[276]"></a>conversion</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, bsp_dht22.o(i.conversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = conversion &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Data
</UL>

<P><STRONG><a name="[6e3]"></a>disk_initialize</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = disk_initialize &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[6e4]"></a>disk_ioctl</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = disk_ioctl &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[6e5]"></a>disk_read</STRONG> (Thumb, 180 bytes, Stack size 544 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + In Cycle
<LI>Call Chain = disk_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[714]"></a>disk_status</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, diskio.o(i.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[6e7]"></a>disk_write</STRONG> (Thumb, 186 bytes, Stack size 544 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + In Cycle
<LI>Call Chain = disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[6e8]"></a>dmp_enable_6x_lp_quat</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_enable_6x_lp_quat))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dmp_enable_6x_lp_quat &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6eb]"></a>dmp_enable_feature</STRONG> (Thumb, 530 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_enable_feature))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = dmp_enable_feature &rArr; dmp_set_tap_thresh &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_time_multi
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_time
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_thresh
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_count
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_axes
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_timeout
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_time
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_thresh
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_lp_quat
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_gyro_cal
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_6x_lp_quat
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[6ec]"></a>dmp_enable_gyro_cal</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_enable_gyro_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = dmp_enable_gyro_cal &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6f5]"></a>dmp_enable_lp_quat</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_enable_lp_quat))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dmp_enable_lp_quat &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6f6]"></a>dmp_load_motion_driver_firmware</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_load_motion_driver_firmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = dmp_load_motion_driver_firmware &rArr; mpu_load_firmware &rArr; mpu_read_mem &rArr; MPU_Read_Len &rArr; i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[6f8]"></a>dmp_read_fifo</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_read_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = dmp_read_fifo &rArr; mpu_read_fifo_stream &rArr; Debug_printf &rArr; printflt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_gesture
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mget_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
</UL>

<P><STRONG><a name="[6fc]"></a>dmp_set_accel_bias</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_accel_bias))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = dmp_set_accel_bias &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_sens
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[6fe]"></a>dmp_set_fifo_rate</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_fifo_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = dmp_set_fifo_rate &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[6ff]"></a>dmp_set_gyro_bias</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_gyro_bias))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = dmp_set_gyro_bias &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[700]"></a>dmp_set_orientation</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_orientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = dmp_set_orientation &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[6f2]"></a>dmp_set_shake_reject_thresh</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_shake_reject_thresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = dmp_set_shake_reject_thresh &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6f3]"></a>dmp_set_shake_reject_time</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_shake_reject_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dmp_set_shake_reject_time &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6f4]"></a>dmp_set_shake_reject_timeout</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_shake_reject_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dmp_set_shake_reject_timeout &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6ee]"></a>dmp_set_tap_axes</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_tap_axes))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dmp_set_tap_axes &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6ef]"></a>dmp_set_tap_count</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_tap_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dmp_set_tap_count &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6ed]"></a>dmp_set_tap_thresh</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_tap_thresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = dmp_set_tap_thresh &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_fsr
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6f0]"></a>dmp_set_tap_time</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_tap_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dmp_set_tap_time &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[6f1]"></a>dmp_set_tap_time_multi</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(i.dmp_set_tap_time_multi))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dmp_set_tap_time_multi &rArr; mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[378]"></a>emWin_LCD_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lcd.o(i.emWin_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[6ac]"></a>f_close</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
</UL>

<P><STRONG><a name="[1ed]"></a>f_mount</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, ff.o(i.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[6aa]"></a>f_open</STRONG> (Thumb, 444 bytes, Stack size 608 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_lock
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enq_lock
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_lock
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
</UL>

<P><STRONG><a name="[710]"></a>f_opendir</STRONG> (Thumb, 148 bytes, Stack size 552 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_lock
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[6ab]"></a>f_read</STRONG> (Thumb, 464 bytes, Stack size 72 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
</UL>

<P><STRONG><a name="[711]"></a>f_readdir</STRONG> (Thumb, 100 bytes, Stack size 544 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[6c3]"></a>f_stat</STRONG> (Thumb, 68 bytes, Stack size 584 bytes, ff.o(i.f_stat))
<BR><BR>[Stack]<UL><LI>Max Depth = 1440<LI>Call Chain = f_stat &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[702]"></a>f_sync</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[6b8]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[6d2]"></a>ff_convert</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, cc936.o(i.ff_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[6cd]"></a>ff_wtoupper</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, cc936.o(i.ff_wtoupper))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[112]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_usart3.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[6cf]"></a>get_fat</STRONG> (Thumb, 318 bytes, Stack size 40 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[70b]"></a>get_fattime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, diskio.o(i.get_fattime))
<BR><BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[717]"></a>i2c_Ack</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_Ack &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
</UL>

<P><STRONG><a name="[212]"></a>i2c_CfgGpio</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bsp_i2c_gpio.o(i.i2c_CfgGpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i2c_CfgGpio &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[718]"></a>i2c_NAck</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ReadByte
</UL>

<P><STRONG><a name="[4db]"></a>i2c_ReadByte</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, bsp_i2c_gpio.o(i.i2c_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_NAck
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ReadData
</UL>

<P><STRONG><a name="[4d9]"></a>i2c_SendByte</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp_i2c_gpio.o(i.i2c_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2c_SendByte &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ReadData
</UL>

<P><STRONG><a name="[4d8]"></a>i2c_Start</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_Start &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ReadData
</UL>

<P><STRONG><a name="[4dc]"></a>i2c_Stop</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ReadData
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_WaitAck
</UL>

<P><STRONG><a name="[4da]"></a>i2c_WaitAck</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, bsp_i2c_gpio.o(i.i2c_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ReadData
</UL>

<P><STRONG><a name="[719]"></a>inv_orientation_matrix_to_scalar</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, inv_mpu.o(i.inv_orientation_matrix_to_scalar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inv_orientation_matrix_to_scalar
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_row_2_scale
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[71a]"></a>inv_row_2_scale</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, inv_mpu.o(i.inv_row_2_scale))
<BR><BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_orientation_matrix_to_scalar
</UL>

<P><STRONG><a name="[92]"></a>main</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, app.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = main &rArr; OSInit &rArr; OS_TmrInit &rArr; OSTaskCreate &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6fb]"></a>mget_ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, inv_mpu.o(i.mget_ms))
<BR><BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
</UL>

<P><STRONG><a name="[71b]"></a>mpu_configure_fifo</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_configure_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = mpu_configure_fifo &rArr; set_int_enable &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[1fc]"></a>mpu_dmp_get_data</STRONG> (Thumb, 520 bytes, Stack size 120 bytes, inv_mpu.o(i.mpu_dmp_get_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = mpu_dmp_get_data &rArr; dmp_read_fifo &rArr; mpu_read_fifo_stream &rArr; Debug_printf &rArr; printflt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskWhere
</UL>

<P><STRONG><a name="[213]"></a>mpu_dmp_init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_dmp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = mpu_dmp_init &rArr; run_self_test &rArr; mpu_run_self_test &rArr; mpu_set_dmp_state &rArr; mpu_set_sample_rate &rArr; mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; set_int_enable &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_CfgGpio
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_orientation
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_fifo_rate
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_load_motion_driver_firmware
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_orientation_matrix_to_scalar
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[701]"></a>mpu_get_accel_fsr</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_accel_fsr))
<BR><BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_thresh
</UL>

<P><STRONG><a name="[6fd]"></a>mpu_get_accel_sens</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_accel_sens))
<BR><BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_accel_bias
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[72d]"></a>mpu_get_fifo_config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_fifo_config))
<BR><BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[72a]"></a>mpu_get_gyro_fsr</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_gyro_fsr))
<BR><BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[72e]"></a>mpu_get_gyro_sens</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_gyro_sens))
<BR><BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[72b]"></a>mpu_get_lpf</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_lpf))
<BR><BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[72c]"></a>mpu_get_sample_rate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, inv_mpu.o(i.mpu_get_sample_rate))
<BR><BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[71d]"></a>mpu_init</STRONG> (Thumb, 416 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mpu_init &rArr; Debug_printf &rArr; printflt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_gyro_fsr
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_fsr
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[6f7]"></a>mpu_load_firmware</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, inv_mpu.o(i.mpu_load_firmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = mpu_load_firmware &rArr; mpu_read_mem &rArr; MPU_Read_Len &rArr; i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_load_motion_driver_firmware
</UL>

<P><STRONG><a name="[727]"></a>mpu_lp_accel_mode</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_lp_accel_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; set_int_enable &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_int_latched
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
</UL>

<P><STRONG><a name="[6f9]"></a>mpu_read_fifo_stream</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_read_fifo_stream))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mpu_read_fifo_stream &rArr; Debug_printf &rArr; printflt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
</UL>

<P><STRONG><a name="[726]"></a>mpu_read_mem</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_read_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = mpu_read_mem &rArr; MPU_Read_Len &rArr; i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
</UL>

<P><STRONG><a name="[6ea]"></a>mpu_reset_fifo</STRONG> (Thumb, 450 bytes, Stack size 8 bytes, inv_mpu.o(i.mpu_reset_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = mpu_reset_fifo &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_lp_quat
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_6x_lp_quat
</UL>

<P><STRONG><a name="[729]"></a>mpu_run_self_test</STRONG> (Thumb, 278 bytes, Stack size 88 bytes, inv_mpu.o(i.mpu_run_self_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = mpu_run_self_test &rArr; mpu_set_dmp_state &rArr; mpu_set_sample_rate &rArr; mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; set_int_enable &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_gyro_fsr
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_fsr
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_sample_rate
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_lpf
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_gyro_fsr
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_fifo_config
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_fsr
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_self_test
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_self_test
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[723]"></a>mpu_set_accel_fsr</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_accel_fsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = mpu_set_accel_fsr &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[725]"></a>mpu_set_bypass</STRONG> (Thumb, 328 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_bypass))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = mpu_set_bypass &rArr; MPU_Read_Len &rArr; i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[721]"></a>mpu_set_dmp_state</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_dmp_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = mpu_set_dmp_state &rArr; mpu_set_sample_rate &rArr; mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; set_int_enable &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[722]"></a>mpu_set_gyro_fsr</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_gyro_fsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = mpu_set_gyro_fsr &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[728]"></a>mpu_set_int_latched</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_int_latched))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = mpu_set_int_latched &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
</UL>

<P><STRONG><a name="[724]"></a>mpu_set_lpf</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_lpf))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = mpu_set_lpf &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[71f]"></a>mpu_set_sample_rate</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_sample_rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = mpu_set_sample_rate &rArr; mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; set_int_enable &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[71e]"></a>mpu_set_sensors</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, inv_mpu.o(i.mpu_set_sensors))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = mpu_set_sensors &rArr; mpu_set_int_latched &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_int_latched
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[6e9]"></a>mpu_write_mem</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, inv_mpu.o(i.mpu_write_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = mpu_write_mem &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_orientation
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_gyro_bias
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_fifo_rate
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_accel_bias
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_time_multi
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_time
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_thresh
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_count
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_axes
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_timeout
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_time
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_thresh
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_lp_quat
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_gyro_cal
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_6x_lp_quat
</UL>

<P><STRONG><a name="[2ac]"></a>printbin</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, print.o(i.printbin))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = printbin &rArr;  printbin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printstr
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
</UL>

<P><STRONG><a name="[2a8]"></a>printch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, print.o(i.printch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printch &rArr; Usart_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printstr
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
</UL>

<P><STRONG><a name="[2a9]"></a>printdec</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, print.o(i.printdec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
</UL>

<P><STRONG><a name="[2aa]"></a>printflt</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, print.o(i.printflt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = printflt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
</UL>

<P><STRONG><a name="[2ad]"></a>printhex</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, print.o(i.printhex))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = printhex &rArr;  printhex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printstr
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
</UL>

<P><STRONG><a name="[2ab]"></a>printstr</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, print.o(i.printstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = printstr &rArr; printch &rArr; Usart_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
</UL>

<P><STRONG><a name="[6d0]"></a>put_fat</STRONG> (Thumb, 392 bytes, Stack size 40 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[720]"></a>run_self_test</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, inv_mpu.o(i.run_self_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = run_self_test &rArr; mpu_run_self_test &rArr; mpu_set_dmp_state &rArr; mpu_set_sample_rate &rArr; mpu_lp_accel_mode &rArr; mpu_configure_fifo &rArr; set_int_enable &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_gyro_bias
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_accel_bias
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_gyro_sens
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_sens
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[6b9]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5b2]"></a>SetSysClock</STRONG> (Thumb, 272 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[557]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>

<P><STRONG><a name="[55b]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[45e]"></a>LCD_GPIO_Config</STRONG> (Thumb, 540 bytes, Stack size 16 bytes, bsp_lcd.o(i.LCD_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[57f]"></a>SDRAM_GPIO_Config</STRONG> (Thumb, 930 bytes, Stack size 16 bytes, bsp_sdram.o(i.SDRAM_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDRAM_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[582]"></a>SDRAM_InitSequence</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, bsp_sdram.o(i.SDRAM_InitSequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SDRAM_InitSequence &rArr; SDRAM_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SetRefreshCount
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMCmdConfig
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_GetFlagStatus
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[585]"></a>SDRAM_delay</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, bsp_sdram.o(i.SDRAM_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDRAM_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[263]"></a>CmdError</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdError
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[266]"></a>CmdResp1Error</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.CmdResp1Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[269]"></a>CmdResp2Error</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdResp2Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdResp2Error
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[26a]"></a>CmdResp3Error</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdResp3Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdResp3Error
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[26b]"></a>CmdResp6Error</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.CmdResp6Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CmdResp6Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[26c]"></a>CmdResp7Error</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdResp7Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdResp7Error
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[2d7]"></a>FindSCR</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, bsp_sdio_sd.o(i.FindSCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ReadData
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[57b]"></a>SDEnWideBus</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SDEnWideBus))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[21a]"></a>NVIC_Configuration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_usart3.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_USART3_Config
</UL>

<P><STRONG><a name="[560]"></a>Rheostat_ADC_GPIO_Config</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bsp_adc.o(i.Rheostat_ADC_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Rheostat_ADC_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_Init
</UL>

<P><STRONG><a name="[561]"></a>Rheostat_ADC_Mode_Config</STRONG> (Thumb, 232 bytes, Stack size 104 bytes, bsp_adc.o(i.Rheostat_ADC_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Rheostat_ADC_Mode_Config &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMARequestAfterLastTransferCmd
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_Init
</UL>

<P><STRONG><a name="[6c8]"></a>accel_self_test</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, inv_mpu.o(i.accel_self_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = accel_self_test &rArr; get_accel_prod_shift &rArr; MPU_Read_Len &rArr; i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_accel_prod_shift
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[6c9]"></a>get_accel_prod_shift</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, inv_mpu.o(i.get_accel_prod_shift))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = get_accel_prod_shift &rArr; MPU_Read_Len &rArr; i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_self_test
</UL>

<P><STRONG><a name="[715]"></a>get_st_biases</STRONG> (Thumb, 1132 bytes, Stack size 64 bytes, inv_mpu.o(i.get_st_biases))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = get_st_biases &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[716]"></a>gyro_self_test</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, inv_mpu.o(i.gyro_self_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = gyro_self_test &rArr; MPU_Read_Len &rArr; i2c_ReadByte &rArr; i2c_NAck &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[71c]"></a>set_int_enable</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, inv_mpu.o(i.set_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = set_int_enable &rArr; MPU_Write_Len &rArr; i2c_WaitAck &rArr; i2c_Stop &rArr; bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
</UL>

<P><STRONG><a name="[6fa]"></a>decode_gesture</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(i.decode_gesture))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = decode_gesture
</UL>
<BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
</UL>

<P><STRONG><a name="[9b]"></a>AppTaskCheckPeople</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, app.o(i.AppTaskCheckPeople))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = AppTaskCheckPeople &rArr; Debug_printf &rArr; printflt &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[96]"></a>AppTaskLed1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app.o(i.AppTaskLed1))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = AppTaskLed1 &rArr; OSTimeDly &rArr; OS_TickListInsertDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[98]"></a>AppTaskLed3</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, app.o(i.AppTaskLed3))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = AppTaskLed3 &rArr; DHT22_Read_Data &rArr; conversion &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Senddec
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[9a]"></a>AppTaskLight</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, app.o(i.AppTaskLight))
<BR><BR>[Stack]<UL><LI>Max Depth = 1672 + Unknown Stack Size
<LI>Call Chain = AppTaskLight &rArr; _ShowJPEG2 &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[99]"></a>AppTaskPower</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, app.o(i.AppTaskPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 1672 + Unknown Stack Size
<LI>Call Chain = AppTaskPower &rArr; _ShowJPEG2 &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[95]"></a>AppTaskShowBQ</STRONG> (Thumb, 720 bytes, Stack size 16 bytes, app.o(i.AppTaskShowBQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 1656 + Unknown Stack Size
<LI>Call Chain = AppTaskShowBQ &rArr; _ShowJPEG2 &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Seed
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[11b]"></a>AppTaskStart</STRONG> (Thumb, 840 bytes, Stack size 64 bytes, app.o(i.AppTaskStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 1704 + Unknown Stack Size
<LI>Call Chain = AppTaskStart &rArr; _ShowJPEG2 &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayMS
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Tick_Init
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_Init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_Init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.main)
</UL>
<P><STRONG><a name="[9d]"></a>AppTaskTouch</STRONG> (Thumb, 406 bytes, Stack size 16 bytes, app.o(i.AppTaskTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560 + Unknown Stack Size
<LI>Call Chain = AppTaskTouch &rArr; _ShowGIF2 &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[9c]"></a>AppTaskTouchScan</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, app.o(i.AppTaskTouchScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = AppTaskTouchScan &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[9f]"></a>AppTaskWhere</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, app.o(i.AppTaskWhere))
<BR><BR>[Stack]<UL><LI>Max Depth = 1664 + Unknown Stack Size
<LI>Call Chain = AppTaskWhere &rArr; _ShowJPEG2 &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[9e]"></a>AppTaskWindow</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app.o(i.AppTaskWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 1640 + Unknown Stack Size
<LI>Call Chain = AppTaskWindow &rArr; MainTask &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[97]"></a>AppTasktalk</STRONG> (Thumb, 2096 bytes, Stack size 32 bytes, app.o(i.AppTasktalk))
<BR><BR>[Stack]<UL><LI>Max Depth = 1672 + Unknown Stack Size
<LI>Call Chain = AppTasktalk &rArr; _ShowJPEG2 &rArr; GUI_JPEG_Draw &rArr; GUI_JPEG_DrawEx &rArr; _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Seed
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT22_Read_Data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Senddec
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowJPEG2
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowGIF2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQPend
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.AppTaskStart)
</UL>
<P><STRONG><a name="[250]"></a>CPU_NameInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, cpu_core.o(i.CPU_NameInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = CPU_NameInit &rArr; CPU_NameClr &rArr; Mem_Clr &rArr; Mem_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_NameClr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_Init
</UL>

<P><STRONG><a name="[24f]"></a>CPU_TS_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cpu_core.o(i.CPU_TS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CPU_TS_Init &rArr; CPU_TS_TmrInit &rArr; BSP_CPU_ClkFreq &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_Init
</UL>

<P><STRONG><a name="[4e3]"></a>Mem_SegCreateCritical</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, lib_mem.o(i.Mem_SegCreateCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Mem_SegCreateCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_SegCreate
</UL>

<P><STRONG><a name="[53f]"></a>OS_TickListUpdateDly</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, os_tick.o(i.OS_TickListUpdateDly))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = OS_TickListUpdateDly &rArr; OS_RdyListInsert &rArr; OS_PrioInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTask
</UL>

<P><STRONG><a name="[540]"></a>OS_TickListUpdateTimeout</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, os_tick.o(i.OS_TickListUpdateTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = OS_TickListUpdateTimeout &rArr; OS_TaskChangePrio &rArr; OS_PendListChangePrio &rArr; OS_PendListInsertPrio
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskChangePrio
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexGrpPrioFindHighest
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTask
</UL>

<P><STRONG><a name="[541]"></a>OS_TmrLock</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, os_tmr.o(i.OS_TmrLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = OS_TmrLock &rArr; OSMutexPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[543]"></a>OS_TmrUnlock</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, os_tmr.o(i.OS_TmrUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = OS_TmrUnlock &rArr; OSMutexPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[6ca]"></a>check_fs</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[6d3]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[709]"></a>chk_lock</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, ff.o(i.chk_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = chk_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[706]"></a>clear_lock</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ff.o(i.clear_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clear_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[6cc]"></a>cmp_lfn</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, ff.o(i.cmp_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = cmp_lfn &rArr; ff_wtoupper
</UL>
<BR>[Calls]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[6ce]"></a>create_chain</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[6d1]"></a>create_name</STRONG> (Thumb, 604 bytes, Stack size 56 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = create_name &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[704]"></a>dec_lock</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, ff.o(i.dec_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dec_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[6d5]"></a>dir_alloc</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ff.o(i.dir_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = dir_alloc &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[6d8]"></a>dir_find</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[6d7]"></a>dir_next</STRONG> (Thumb, 314 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[6dd]"></a>dir_read</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[6df]"></a>dir_register</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_lfn
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[6d6]"></a>dir_sdi</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[70a]"></a>enq_lock</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ff.o(i.enq_lock))
<BR><BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[707]"></a>find_volume</STRONG> (Thumb, 972 bytes, Stack size 88 bytes, ff.o(i.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_lock
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[6e2]"></a>fit_lfn</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, ff.o(i.fit_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fit_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[708]"></a>follow_path</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[6e1]"></a>gen_numname</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, ff.o(i.gen_numname))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gen_numname &rArr; mem_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[712]"></a>get_fileinfo</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = get_fileinfo &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[705]"></a>get_ldnumber</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ff.o(i.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[70f]"></a>inc_lock</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, ff.o(i.inc_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = inc_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[70c]"></a>ld_clust</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ff.o(i.ld_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[6da]"></a>mem_cmp</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, ff.o(i.mem_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[6e0]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(i.mem_cpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[6d4]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ff.o(i.mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[6cb]"></a>move_window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[6de]"></a>pick_lfn</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, ff.o(i.pick_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pick_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[70e]"></a>remove_chain</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[70d]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[6d9]"></a>sum_sfn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, ff.o(i.sum_sfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sum_sfn
</UL>
<BR>[Called By]<UL><LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[713]"></a>sync_fs</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, ff.o(i.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[6db]"></a>sync_window</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = sync_window &rArr; disk_write &rArr;  disk_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[703]"></a>validate</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[cf]"></a>_Color2IndexBulk_M1555I_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Color2IndexBulk_M1555I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _Color2IndexBulk_M1555I_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; GUI__ExpandPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[d3]"></a>_Color2IndexBulk_M4444I_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Color2IndexBulk_M4444I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _Color2IndexBulk_M4444I_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; GUI__ExpandPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[d1]"></a>_Color2IndexBulk_M565_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Color2IndexBulk_M565_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _Color2IndexBulk_M565_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; GUI__ExpandPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[d7]"></a>_Color2IndexBulk_M8888I_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Color2IndexBulk_M8888I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _Color2IndexBulk_M8888I_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; GUI__ExpandPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[d5]"></a>_Color2IndexBulk_M888_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Color2IndexBulk_M888_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _Color2IndexBulk_M888_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; GUI__ExpandPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[d8]"></a>_DMA_AlphaBlending</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._DMA_AlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _DMA_AlphaBlending &rArr; _DMA_AlphaBlendingBulk
</UL>
<BR>[Calls]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_AlphaBlendingBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[63d]"></a>_DMA_AlphaBlendingBulk</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, lcdconf_lin_template.o(i._DMA_AlphaBlendingBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _DMA_AlphaBlendingBulk
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_AlphaBlending
</UL>

<P><STRONG><a name="[634]"></a>_DMA_Color2IndexBulk</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lcdconf_lin_template.o(i._DMA_Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _DMA_Color2IndexBulk &rArr; GUI__ExpandPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha_SwapRB
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ConvertColor
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M888_DMA2D
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M8888I_DMA2D
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M565_DMA2D
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M4444I_DMA2D
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M1555I_DMA2D
</UL>

<P><STRONG><a name="[63f]"></a>_DMA_ConvertColor</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lcdconf_lin_template.o(i._DMA_ConvertColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>

<P><STRONG><a name="[642]"></a>_DMA_Copy</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, lcdconf_lin_template.o(i._DMA_Copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap32bpp
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap16bpp
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyRect
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyBuffer
</UL>

<P><STRONG><a name="[69a]"></a>_DMA_DrawBitmapL8</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, lcdconf_lin_template.o(i._DMA_DrawBitmapL8))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _DMA_DrawBitmapL8
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap8bpp
</UL>

<P><STRONG><a name="[643]"></a>_DMA_Fill</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, lcdconf_lin_template.o(i._DMA_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DMA_Fill
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
</UL>

<P><STRONG><a name="[644]"></a>_DMA_Index2ColorBulk</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, lcdconf_lin_template.o(i._DMA_Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DMA_Index2ColorBulk &rArr; _DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha_SwapRB
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M888_DMA2D
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M8888I_DMA2D
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M565_DMA2D
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M4444I_DMA2D
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M1555I_DMA2D
</UL>

<P><STRONG><a name="[69c]"></a>_DMA_LoadLUT</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcdconf_lin_template.o(i._DMA_LoadLUT))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[6a0]"></a>_DMA_MixColorsBulk</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcdconf_lin_template.o(i._DMA_MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DMA_MixColorsBulk
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_MixColorsBulk
</UL>

<P><STRONG><a name="[640]"></a>_GetBitsPerPixel</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lcdconf_lin_template.o(i._GetBitsPerPixel))
<BR><BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>

<P><STRONG><a name="[697]"></a>_GetBufferSize</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcdconf_lin_template.o(i._GetBufferSize))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap8bpp
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap32bpp
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap16bpp
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyRect
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyBuffer
</UL>

<P><STRONG><a name="[681]"></a>_GetBytesPerLine</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._GetBytesPerLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GetBytesPerLine &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
</UL>

<P><STRONG><a name="[47e]"></a>_GetPixelformat</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, lcdconf_lin_template.o(i._GetPixelformat))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap8bpp
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Fill
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[ce]"></a>_Index2ColorBulk_M1555I_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Index2ColorBulk_M1555I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M1555I_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[d2]"></a>_Index2ColorBulk_M4444I_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Index2ColorBulk_M4444I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M4444I_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[d0]"></a>_Index2ColorBulk_M565_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Index2ColorBulk_M565_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M565_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[d6]"></a>_Index2ColorBulk_M8888I_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Index2ColorBulk_M8888I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M8888I_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[d4]"></a>_Index2ColorBulk_M888_DMA2D</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._Index2ColorBulk_M888_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _Index2ColorBulk_M888_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[63c]"></a>_InvertAlpha</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcdconf_lin_template.o(i._InvertAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _InvertAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_MixColorsBulk
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_AlphaBlending
</UL>

<P><STRONG><a name="[63e]"></a>_InvertAlpha_SwapRB</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, lcdconf_lin_template.o(i._InvertAlpha_SwapRB))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _InvertAlpha_SwapRB
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>

<P><STRONG><a name="[c8]"></a>_LCD_CopyBuffer</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, lcdconf_lin_template.o(i._LCD_CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _LCD_CopyBuffer &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[c9]"></a>_LCD_CopyRect</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, lcdconf_lin_template.o(i._LCD_CopyRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _LCD_CopyRect &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[48c]"></a>_LCD_DisplayOff</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcdconf_lin_template.o(i._LCD_DisplayOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _LCD_DisplayOff
</UL>
<BR>[Calls]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[48b]"></a>_LCD_DisplayOn</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcdconf_lin_template.o(i._LCD_DisplayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _LCD_DisplayOn
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[cc]"></a>_LCD_DrawBitmap16bpp</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, lcdconf_lin_template.o(i._LCD_DrawBitmap16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _LCD_DrawBitmap16bpp &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[cd]"></a>_LCD_DrawBitmap32bpp</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, lcdconf_lin_template.o(i._LCD_DrawBitmap32bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _LCD_DrawBitmap32bpp &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[cb]"></a>_LCD_DrawBitmap8bpp</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, lcdconf_lin_template.o(i._LCD_DrawBitmap8bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _LCD_DrawBitmap8bpp &rArr; _DMA_DrawBitmapL8
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_DrawBitmapL8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[ca]"></a>_LCD_FillRect</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, lcdconf_lin_template.o(i._LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _LCD_FillRect &rArr; GUI_GetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Fill
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDrawMode
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
<LI> lcdconf_lin_template.o(i._LCD_FillRect)
</UL>
<P><STRONG><a name="[d9]"></a>_LCD_GetpPalConvTable</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lcdconf_lin_template.o(i._LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha_SwapRB
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_LoadLUT
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[488]"></a>_LCD_InitController</STRONG> (Thumb, 420 bytes, Stack size 104 bytes, lcdconf_lin_template.o(i._LCD_InitController))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _LCD_InitController &rArr; _GetBytesPerLine &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerInit
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerCmd
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ITConfig
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLUTEntry
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_LayerEnableLUT
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBytesPerLine
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[da]"></a>_LCD_MixColorsBulk</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, lcdconf_lin_template.o(i._LCD_MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _LCD_MixColorsBulk &rArr; _DMA_MixColorsBulk
</UL>
<BR>[Calls]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_lin_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[490]"></a>_LTDC_LayerEnableColorKeying</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcdconf_lin_template.o(i._LTDC_LayerEnableColorKeying))
<BR><BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[69f]"></a>_LTDC_LayerEnableLUT</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lcdconf_lin_template.o(i._LTDC_LayerEnableLUT))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
</UL>

<P><STRONG><a name="[48a]"></a>_LTDC_SetLUTEntry</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, lcdconf_lin_template.o(i._LTDC_SetLUTEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _LTDC_SetLUTEntry
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_InitController
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[48f]"></a>_LTDC_SetLayerAlpha</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lcdconf_lin_template.o(i._LTDC_SetLayerAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _LTDC_SetLayerAlpha
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[48e]"></a>_LTDC_SetLayerPos</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, lcdconf_lin_template.o(i._LTDC_SetLayerPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _LTDC_SetLayerPos &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[25f]"></a>Caculate_RTC</STRONG> (Thumb, 108 bytes, Stack size 64 bytes, windowdlg.o(i.Caculate_RTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = Caculate_RTC &rArr; TEXT_SetText &rArr; GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDialog2
</UL>

<P><STRONG><a name="[11a]"></a>_cbCallback1</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, windowdlg.o(i._cbCallback1))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = _cbCallback1 &rArr; FRAMEWIN_AddCloseButton &rArr; FRAMEWIN_AddButton &rArr; BUTTON_CreateAsChild &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(i._cbDialog2)
</UL>
<P><STRONG><a name="[119]"></a>_cbCallback2</STRONG> (Thumb, 698 bytes, Stack size 56 bytes, windowdlg.o(i._cbCallback2))
<BR><BR>[Stack]<UL><LI>Max Depth = 988 + Unknown Stack Size
<LI>Call Chain = _cbCallback2 &rArr; DROPDOWN_SetFont &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetListHeight
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetFont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(i._cbDialog2)
</UL>
<P><STRONG><a name="[118]"></a>_cbCallback3</STRONG> (Thumb, 494 bytes, Stack size 184 bytes, windowdlg.o(i._cbCallback3))
<BR><BR>[Stack]<UL><LI>Max Depth = 1792 + Unknown Stack Size
<LI>Call Chain = _cbCallback3 &rArr; scan_files &rArr;  scan_files (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetFont
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetColumnWidth
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(i._cbDialog2)
</UL>
<P><STRONG><a name="[116]"></a>_cbCallback4</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, windowdlg.o(i._cbCallback4))
<BR><BR>[Stack]<UL><LI>Max Depth = 860 + Unknown Stack Size
<LI>Call Chain = _cbCallback4 &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(i._cbDialog2)
</UL>
<P><STRONG><a name="[117]"></a>_cbCallback5</STRONG> (Thumb, 450 bytes, Stack size 96 bytes, windowdlg.o(i._cbCallback5))
<BR><BR>[Stack]<UL><LI>Max Depth = 932 + Unknown Stack Size
<LI>Call Chain = _cbCallback5 &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_GetValue
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddCloseButton
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(i._cbDialog2)
</UL>
<P><STRONG><a name="[a2]"></a>_cbDialog</STRONG> (Thumb, 2106 bytes, Stack size 48 bytes, windowdlg.o(i._cbDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 980 + Unknown Stack Size
<LI>Call Chain = _cbDialog &rArr; DROPDOWN_SetFont &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetListHeight
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(i.CreateWindow)
</UL>
<P><STRONG><a name="[a3]"></a>_cbDialog2</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, windowdlg.o(i._cbDialog2))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = _cbDialog2 &rArr; Caculate_RTC &rArr; TEXT_SetText &rArr; GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_printf
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Caculate_RTC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(i.CreateWindow2)
</UL>
<P><STRONG><a name="[114]"></a>_cbDialogProgress</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, windowdlg.o(i._cbDialogProgress))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = _cbDialogProgress &rArr; GUI_MEMDEV_FadeOutWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
</UL>
<BR>[Address Reference Count : 2]<UL><LI> windowdlg.o(i._cbCallback2)
<LI> windowdlg.o(i._cbCallback5)
</UL>
<P><STRONG><a name="[115]"></a>_cbDialogProgress1</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, windowdlg.o(i._cbDialogProgress1))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = _cbDialogProgress1 &rArr; GUI_MEMDEV_FadeOutWindow &rArr; _FadeWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> windowdlg.o(i._cbDialog)
</UL>
<P><STRONG><a name="[6c2]"></a>scan_files</STRONG> (Thumb, 232 bytes, Stack size 200 bytes, windowdlg.o(i.scan_files))
<BR><BR>[Stack]<UL><LI>Max Depth = 1608 + In Cycle
<LI>Call Chain = scan_files &rArr;  scan_files (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbCallback3
</UL>

<P><STRONG><a name="[128]"></a>_Color2IndexBulk_1616I</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, guicc_1616i.o(i._Color2IndexBulk_1616I))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Color2IndexBulk_1616I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>_Color2Index_1616I</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guicc_1616i.o(i._Color2Index_1616I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_1616I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>_GetIndexMask_1616I</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guicc_1616i.o(i._GetIndexMask_1616I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>_Index2ColorBulk_1616I</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guicc_1616i.o(i._Index2ColorBulk_1616I))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2ColorBulk_1616I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>_Index2Color_1616I</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guicc_1616i.o(i._Index2Color_1616I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2Color_1616I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_1616i.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>_GetIndexMask_8666</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guicc_8666.o(i._GetIndexMask_8666))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8666.o(.constdata)
</UL>
<P><STRONG><a name="[130]"></a>_Color2IndexBulk_88666I</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, guicc_88666i.o(i._Color2IndexBulk_88666I))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Color2IndexBulk_88666I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[12d]"></a>_Color2Index_88666I</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guicc_88666i.o(i._Color2Index_88666I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_88666I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[12f]"></a>_GetIndexMask_88666I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_88666i.o(i._GetIndexMask_88666I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>_Index2ColorBulk_88666I</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, guicc_88666i.o(i._Index2ColorBulk_88666I))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2ColorBulk_88666I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>_Index2Color_88666I</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guicc_88666i.o(i._Index2Color_88666I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2Color_88666I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_88666i.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>_Color2IndexBulk_M1555I</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, guicc_m1555i.o(i._Color2IndexBulk_M1555I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk_M1555I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>_Color2Index_M1555I</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, guicc_m1555i.o(i._Color2Index_M1555I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M1555I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>_GetIndexMask_M1555I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m1555i.o(i._GetIndexMask_M1555I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>_Index2ColorBulk_M1555I</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, guicc_m1555i.o(i._Index2ColorBulk_M1555I))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk_M1555I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[133]"></a>_Index2Color_M1555I</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guicc_m1555i.o(i._Index2Color_M1555I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2Color_M1555I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m1555i.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>_Color2IndexBulk_M4444I</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, guicc_m4444i.o(i._Color2IndexBulk_M4444I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk_M4444I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>_Color2Index_M4444I</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, guicc_m4444i.o(i._Color2Index_M4444I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M4444I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[139]"></a>_GetIndexMask_M4444I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m4444i.o(i._GetIndexMask_M4444I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[13b]"></a>_Index2ColorBulk_M4444I</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, guicc_m4444i.o(i._Index2ColorBulk_M4444I))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk_M4444I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[138]"></a>_Index2Color_M4444I</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guicc_m4444i.o(i._Index2Color_M4444I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2Color_M4444I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m4444i.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>_Color2IndexBulk_M8888I</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guicc_m8888i.o(i._Color2IndexBulk_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[13c]"></a>_Color2Index_M8888I</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guicc_m8888i.o(i._Color2Index_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[13e]"></a>_GetIndexMask_M8888I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m8888i.o(i._GetIndexMask_M8888I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>_Index2ColorBulk_M8888I</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guicc_m8888i.o(i._Index2ColorBulk_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[c0]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__alpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[302]"></a>_AddFreeMemory</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[300]"></a>_Alloc</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[676]"></a>_EnlargeBlocks</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[623]"></a>_GetMinIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i._GetMinIndex))
<BR><BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[304]"></a>_InitOnce</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[629]"></a>_PopFreeBlock</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_alloc.o(i._PopFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _PopFreeBlock &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[303]"></a>_PushFreeBlock</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_alloc.o(i._PushFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _PushFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[306]"></a>_RemoveFreeBlock</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[305]"></a>_RemoveHoles</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[624]"></a>_WriteTagData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i._WriteTagData))
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[377]"></a>_InitContext</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gui_core.o(i._InitContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitContext
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[bd]"></a>_OnExit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI__Config)
</UL>
<P><STRONG><a name="[65b]"></a>_DoClipping</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_drawbitmap_8888.o(i._DoClipping))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DoClipping
</UL>
<BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[659]"></a>_DrawBitmap</STRONG> (Thumb, 1086 bytes, Stack size 136 bytes, gui_drawbitmap_8888.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_8888
</UL>

<P><STRONG><a name="[66b]"></a>_DrawBitmapHW</STRONG> (Thumb, 142 bytes, Stack size 64 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = _DrawBitmapHW &rArr; GUI_SetColorIndex &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
</UL>

<P><STRONG><a name="[143]"></a>_DrawBitmapHW_8888</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _DrawBitmapHW_8888 &rArr; _DrawBitmapHW &rArr; GUI_SetColorIndex &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>_DrawBitmap_8888</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, gui_drawbitmap_8888.o(i._DrawBitmap_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap_8888 &rArr; _DrawBitmap &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[7]"></a>_SetPixelAlpha</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gui_drawbitmap_8888.o(i._SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.data)
</UL>
<P><STRONG><a name="[2e1]"></a>Abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.Abs))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[2e8]"></a>_DrawLineEnd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_drawline.o(i._DrawLineEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawLineEnd &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[2e3]"></a>_SetLineColor</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, gui_drawline.o(i._SetLineColor))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[2e4]"></a>_atan2</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, gui_drawline.o(i._atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[360]"></a>_GetDataBlock</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, gui_gif.o(i._GetDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextCode
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>

<P><STRONG><a name="[35d]"></a>_GetGIFInfo</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui_gif.o(i._GetGIFInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _GetGIFInfo &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipLocalColorTable
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetInfoEx
</UL>

<P><STRONG><a name="[689]"></a>_GetImageDimension</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gui_gif.o(i._GetImageDimension))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetImageDimension &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
</UL>

<P><STRONG><a name="[35a]"></a>_GetImageInfo</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, gui_gif.o(i._GetImageInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _GetImageInfo &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipLocalColorTable
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF_GetImageInfoEx
</UL>

<P><STRONG><a name="[363]"></a>_GetNextCode</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, gui_gif.o(i._GetNextCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
</UL>

<P><STRONG><a name="[35e]"></a>_GetSizeAndColorTable</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gui_gif.o(i._GetSizeAndColorTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetSizeAndColorTable &rArr; _ReadColorMap &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadColorMap
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>

<P><STRONG><a name="[35f]"></a>_ReadColorMap</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_gif.o(i._ReadColorMap))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ReadColorMap &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSizeAndColorTable
</UL>

<P><STRONG><a name="[361]"></a>_ReadExtension</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gui_gif.o(i._ReadExtension))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ReadExtension &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__DrawFromFilePointer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>

<P><STRONG><a name="[688]"></a>_SkipLocalColorTable</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gui_gif.o(i._SkipLocalColorTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _SkipLocalColorTable &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>

<P><STRONG><a name="[ae]"></a>_ClearUnusedPixelsScaled</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, gui_gif_drawscaled.o(i._ClearUnusedPixelsScaled))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ClearUnusedPixelsScaled &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_gif_drawscaled.o(i.GUI_GIF_DrawSubScaledEx)
</UL>
<P><STRONG><a name="[af]"></a>_DrawFromDataBlockScaled</STRONG> (Thumb, 270 bytes, Stack size 128 bytes, gui_gif_drawscaled.o(i._DrawFromDataBlockScaled))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _DrawFromDataBlockScaled &rArr; _DrawNonInterlacedScaled &rArr; _DrawLineScaled &rArr; _SkipPixels &rArr; GUI_GIF__GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNonInterlacedScaled
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawInterlacedLineScaled
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__ReadData
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__InitLZW
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_gif_drawscaled.o(i.GUI_GIF_DrawSubScaledEx)
</UL>
<P><STRONG><a name="[66f]"></a>_DrawInterlacedLineScaled</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, gui_gif_drawscaled.o(i._DrawInterlacedLineScaled))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _DrawInterlacedLineScaled &rArr; _DrawLineScaled &rArr; _SkipPixels &rArr; GUI_GIF__GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipLine
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineScaled
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlockScaled
</UL>

<P><STRONG><a name="[670]"></a>_DrawLineScaled</STRONG> (Thumb, 268 bytes, Stack size 64 bytes, gui_gif_drawscaled.o(i._DrawLineScaled))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawLineScaled &rArr; _SkipPixels &rArr; GUI_GIF__GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipPixels
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNonInterlacedScaled
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawInterlacedLineScaled
</UL>

<P><STRONG><a name="[66e]"></a>_DrawNonInterlacedScaled</STRONG> (Thumb, 126 bytes, Stack size 80 bytes, gui_gif_drawscaled.o(i._DrawNonInterlacedScaled))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _DrawNonInterlacedScaled &rArr; _DrawLineScaled &rArr; _SkipPixels &rArr; GUI_GIF__GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipLine
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineScaled
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFromDataBlockScaled
</UL>

<P><STRONG><a name="[671]"></a>_SkipLine</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_gif_drawscaled.o(i._SkipLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _SkipLine &rArr; GUI_GIF__GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
</UL>
<BR>[Called By]<UL><LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNonInterlacedScaled
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawInterlacedLineScaled
</UL>

<P><STRONG><a name="[672]"></a>_SkipPixels</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gui_gif_drawscaled.o(i._SkipPixels))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _SkipPixels &rArr; GUI_GIF__GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; GUI_GIF__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GIF__GetNextByte
</UL>
<BR>[Called By]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineScaled
</UL>

<P><STRONG><a name="[399]"></a>_CalcBanding</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gui_jpeg.o(i._CalcBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = _CalcBanding &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
</UL>

<P><STRONG><a name="[394]"></a>_CalcMCUBlockOrder</STRONG> (Thumb, 332 bytes, Stack size 68 bytes, gui_jpeg.o(i._CalcMCUBlockOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _CalcMCUBlockOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeProgressiveBanding
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
</UL>

<P><STRONG><a name="[62d]"></a>_CheckHuffmanTables</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, gui_jpeg.o(i._CheckHuffmanTables))
<BR><BR>[Stack]<UL><LI>Max Depth = 1384<LI>Call Chain = _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateHuffmanTable
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
</UL>

<P><STRONG><a name="[631]"></a>_CoeffBufferAlloc</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gui_jpeg.o(i._CoeffBufferAlloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _CoeffBufferAlloc &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
</UL>

<P><STRONG><a name="[387]"></a>_CoeffBufferAllocBanding</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_jpeg.o(i._CoeffBufferAllocBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _CoeffBufferAllocBanding &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__AllocBandingCoeffBuffer
</UL>

<P><STRONG><a name="[633]"></a>_CoeffBufferGetP_Locked</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gui_jpeg.o(i._CoeffBufferGetP_Locked))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _CoeffBufferGetP_Locked
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LoadNextRow
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_RefineBanding
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_Refine
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_FirstBanding
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_FirstBanding
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
</UL>

<P><STRONG><a name="[390]"></a>_ConvertH1V1</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, gui_jpeg.o(i._ConvertH1V1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ConvertH1V1
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[38f]"></a>_ConvertH1V2</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, gui_jpeg.o(i._ConvertH1V2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ConvertH1V2
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[38e]"></a>_ConvertH2V1</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, gui_jpeg.o(i._ConvertH2V1))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _ConvertH2V1
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[38d]"></a>_ConvertH2V2</STRONG> (Thumb, 392 bytes, Stack size 64 bytes, gui_jpeg.o(i._ConvertH2V2))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ConvertH2V2
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[62e]"></a>_CreateHuffmanTable</STRONG> (Thumb, 318 bytes, Stack size 1360 bytes, gui_jpeg.o(i._CreateHuffmanTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckHuffmanTables
</UL>

<P><STRONG><a name="[f9]"></a>_DecodeBlockAC_First</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, gui_jpeg.o(i._DecodeBlockAC_First))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _DecodeBlockAC_First &rArr; _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._DecodeProgressive)
</UL>
<P><STRONG><a name="[b4]"></a>_DecodeBlockAC_FirstBanding</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, gui_jpeg.o(i._DecodeBlockAC_FirstBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DecodeBlockAC_FirstBanding &rArr; _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i.GUI_JPEG__DecodeProgressiveBanding)
</UL>
<P><STRONG><a name="[f8]"></a>_DecodeBlockAC_Refine</STRONG> (Thumb, 390 bytes, Stack size 72 bytes, gui_jpeg.o(i._DecodeBlockAC_Refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DecodeBlockAC_Refine &rArr; _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._DecodeProgressive)
</UL>
<P><STRONG><a name="[b3]"></a>_DecodeBlockAC_RefineBanding</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_jpeg.o(i._DecodeBlockAC_RefineBanding))
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i.GUI_JPEG__DecodeProgressiveBanding)
</UL>
<P><STRONG><a name="[f7]"></a>_DecodeBlockDC_First</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, gui_jpeg.o(i._DecodeBlockDC_First))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DecodeBlockDC_First &rArr; _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._DecodeProgressive)
</UL>
<P><STRONG><a name="[b2]"></a>_DecodeBlockDC_FirstBanding</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui_jpeg.o(i._DecodeBlockDC_FirstBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DecodeBlockDC_FirstBanding &rArr; _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i.GUI_JPEG__DecodeProgressiveBanding)
</UL>
<P><STRONG><a name="[f6]"></a>_DecodeBlockDC_Refine</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, gui_jpeg.o(i._DecodeBlockDC_Refine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DecodeBlockDC_Refine &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._DecodeProgressive)
</UL>
<P><STRONG><a name="[b1]"></a>_DecodeBlockDC_RefineBanding</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, gui_jpeg.o(i._DecodeBlockDC_RefineBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DecodeBlockDC_RefineBanding &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i.GUI_JPEG__DecodeProgressiveBanding)
</UL>
<P><STRONG><a name="[38a]"></a>_DecodeNextRow</STRONG> (Thumb, 510 bytes, Stack size 104 bytes, gui_jpeg.o(i._DecodeNextRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DecodeNextRow &rArr; _ProcessRestart &rArr; _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessRestart
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[39a]"></a>_DecodeProgressive</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, gui_jpeg.o(i._DecodeProgressive))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424 + Unknown Stack Size
<LI>Call Chain = _DecodeProgressive &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeScanProg
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMCUBlockOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
</UL>

<P><STRONG><a name="[393]"></a>_DecodeScanProg</STRONG> (Thumb, 318 bytes, Stack size 112 bytes, gui_jpeg.o(i._DecodeScanProg))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DecodeScanProg &rArr; _ProcessRestart &rArr; _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessRestart
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeProgressiveBanding
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
</UL>

<P><STRONG><a name="[382]"></a>_Draw</STRONG> (Thumb, 310 bytes, Stack size 104 bytes, gui_jpeg.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560 + Unknown Stack Size
<LI>Call Chain = _Draw &rArr; _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__GetInfoEx
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG(long double, ..., ...)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBanding
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG_DrawEx
</UL>

<P><STRONG><a name="[649]"></a>_DrawBanding</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, gui_jpeg.o(i._DrawBanding))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456 + Unknown Stack Size
<LI>Call Chain = _DrawBanding &rArr; GUI_JPEG__DecodeProgressiveBanding &rArr; _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__SetNextBand
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeProgressiveBanding
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__AllocBandingCoeffBuffer
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WritePixels
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[690]"></a>_FillInputBuffer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_jpeg.o(i._FillInputBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _FillInputBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipInputData
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU8
</UL>

<P><STRONG><a name="[646]"></a>_GetBitsNoMarker</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gui_jpeg.o(i._GetBitsNoMarker))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU8_NoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBitBuffer
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HuffDecode
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_RefineBanding
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_Refine
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_FirstBanding
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_FirstBanding
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
</UL>

<P><STRONG><a name="[632]"></a>_GetBuffer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_jpeg.o(i._GetBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAllocBanding
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferAlloc
</UL>

<P><STRONG><a name="[682]"></a>_GetDHT</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, gui_jpeg.o(i._GetDHT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetDHT &rArr; _GetInt
</UL>
<BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
</UL>

<P><STRONG><a name="[684]"></a>_GetDQT</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, gui_jpeg.o(i._GetDQT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetDQT &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU16
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
</UL>

<P><STRONG><a name="[683]"></a>_GetInt</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gui_jpeg.o(i._GetInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOS
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOF
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDQT
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDHT
</UL>

<P><STRONG><a name="[39b]"></a>_GetSOF</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, gui_jpeg.o(i._GetSOF))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetSOF &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU16
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
</UL>

<P><STRONG><a name="[68d]"></a>_GetSOS</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, gui_jpeg.o(i._GetSOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetSOS &rArr; _SkipInputData &rArr; _FillInputBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipInputData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
</UL>

<P><STRONG><a name="[111]"></a>_GetStuff</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_jpeg.o(i._GetStuff))
<BR>[Address Reference Count : 1]<UL><LI> gui_jpeg.o(i._StoreU8)
</UL>
<P><STRONG><a name="[685]"></a>_GetU16</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gui_jpeg.o(i._GetU16))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetU16
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOF
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDQT
</UL>

<P><STRONG><a name="[b5]"></a>_GetU8</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_jpeg.o(i._GetU8))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetU8 &rArr; _FillInputBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillInputBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_jpeg.o(i.GUI_JPEG__ReadUntilSOF)
<LI> gui_jpeg.o(i._GetStuff)
</UL>
<P><STRONG><a name="[67e]"></a>_GetU8_NoMarker</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_jpeg.o(i._GetU8_NoMarker))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreU8
</UL>
<BR>[Called By]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>

<P><STRONG><a name="[645]"></a>_HuffDecode</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_jpeg.o(i._HuffDecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _HuffDecode &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_FirstBanding
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockDC_First
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_Refine
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_FirstBanding
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeBlockAC_First
</UL>

<P><STRONG><a name="[38c]"></a>_IDCT</STRONG> (Thumb, 992 bytes, Stack size 116 bytes, gui_jpeg.o(i._IDCT))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _IDCT
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[694]"></a>_InitBitBuffer</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_jpeg.o(i._InitBitBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsNoMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ProcessRestart
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
</UL>

<P><STRONG><a name="[398]"></a>_InitFrame</STRONG> (Thumb, 498 bytes, Stack size 48 bytes, gui_jpeg.o(i._InitFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = _InitFrame &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
</UL>

<P><STRONG><a name="[392]"></a>_InitScan</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, gui_jpeg.o(i._InitScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 1400<LI>Call Chain = _InitScan &rArr; _CheckHuffmanTables &rArr; _CreateHuffmanTable
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBitBuffer
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOS
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckHuffmanTables
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMCUBlockOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__InitDraw
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeProgressiveBanding
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeProgressive
</UL>

<P><STRONG><a name="[389]"></a>_LoadNextRow</STRONG> (Thumb, 490 bytes, Stack size 136 bytes, gui_jpeg.o(i._LoadNextRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _LoadNextRow &rArr; _CoeffBufferGetP_Locked
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CoeffBufferGetP_Locked
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
</UL>

<P><STRONG><a name="[647]"></a>_ProcessRestart</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gui_jpeg.o(i._ProcessRestart))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ProcessRestart &rArr; _InitBitBuffer &rArr; _GetBitsNoMarker &rArr; _GetU8_NoMarker &rArr; _StoreU8
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBitBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeScanProg
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecodeNextRow
</UL>

<P><STRONG><a name="[38b]"></a>_ReadMarkers</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, gui_jpeg.o(i._ReadMarkers))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _ReadMarkers &rArr; _GetDQT &rArr; _GetU16
</UL>
<BR>[Calls]<UL><LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipInputData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetInt
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDQT
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDHT
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__ReadUntilSOF
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_JPEG__DecodeLine
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitScan
</UL>

<P><STRONG><a name="[68e]"></a>_SkipInputData</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_jpeg.o(i._SkipInputData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SkipInputData &rArr; _FillInputBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillInputBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadMarkers
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSOS
</UL>

<P><STRONG><a name="[691]"></a>_StoreU8</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_jpeg.o(i._StoreU8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _StoreU8
</UL>
<BR>[Called By]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetU8_NoMarker
</UL>

<P><STRONG><a name="[64a]"></a>_WritePixels</STRONG> (Thumb, 218 bytes, Stack size 64 bytes, gui_jpeg.o(i._WritePixels))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _WritePixels &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBanding
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[b8]"></a>_OnExit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_multibuf.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_multibuf.o(i.GUI_MULTIBUF_ConfigEx)
</UL>
<P><STRONG><a name="[147]"></a>_Color2IndexBulk</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[144]"></a>_Color2Index_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565.o(i._Color2Index_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[148]"></a>_Index2ColorBulk</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[14c]"></a>_Color2IndexBulk</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guicc_m888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>_Color2Index_M888</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guicc_m888.o(i._Color2Index_M888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[14b]"></a>_GetIndexMask_M888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m888.o(i._GetIndexMask_M888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[14d]"></a>_Index2ColorBulk</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guicc_m888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m888.o(.constdata)
</UL>
<P><STRONG><a name="[14f]"></a>_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[14e]"></a>_SetColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>_OnExit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[461]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
</UL>

<P><STRONG><a name="[46d]"></a>_GetMaxValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
</UL>

<P><STRONG><a name="[107]"></a>_CopyBuffer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = _CopyBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[65c]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, guidrv_lin_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[653]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, guidrv_lin_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[656]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, guidrv_lin_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[65d]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[151]"></a>_DrawBitmap</STRONG> (Thumb, 388 bytes, Stack size 72 bytes, guidrv_lin_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[152]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[153]"></a>_DrawVLine</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _DrawVLine &rArr; _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>_FillRect</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRectOpt16
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[677]"></a>_FillRectOpt16</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, guidrv_lin_16.o(i._FillRectOpt16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _FillRectOpt16
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[15b]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[159]"></a>_GetDevFunc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[15a]"></a>_GetDevProp</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>_GetPixelIndex</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>_GetPos</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._GetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _GetPos &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[15c]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _Init &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[63a]"></a>_InitOnce</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
</UL>

<P><STRONG><a name="[103]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[102]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._On))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[10a]"></a>_ReadRect</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, guidrv_lin_16.o(i._ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ReadRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[ff]"></a>_SetAlpha</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _SetAlpha &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[104]"></a>_SetAlphaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._SetAlphaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = _SetAlphaMode &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[106]"></a>_SetChroma</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetChroma))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = _SetChroma &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[105]"></a>_SetChromaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._SetChromaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = _SetChromaMode &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[109]"></a>_SetDevFunc</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _SetDevFunc &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[158]"></a>_SetOrg</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, guidrv_lin_16.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[156]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>_SetPos</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, guidrv_lin_16.o(i._SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _SetPos &rArr; _SetVis &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[fc]"></a>_SetSize</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guidrv_lin_16.o(i._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = _SetSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[fa]"></a>_SetVRAMAddr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _SetVRAMAddr &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[fb]"></a>_SetVSize</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[100]"></a>_SetVis</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _SetVis &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[108]"></a>_ShowBuffer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._ShowBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _ShowBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[157]"></a>_XorPixel</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[660]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[661]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[662]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, guidev_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[165]"></a>_DrawBitmap</STRONG> (Thumb, 716 bytes, Stack size 112 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[166]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[167]"></a>_DrawVLine</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>_FillRect</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[16f]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[16d]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[16e]"></a>_GetDevProp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[169]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[170]"></a>_GetRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[16c]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[16a]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[65f]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_16.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[16b]"></a>_XorPixel</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>_CalcParaFadeOut</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidev_moveandfadewin.o(i._CalcParaFadeOut))
<BR>[Address Reference Count : 1]<UL><LI> guidev_moveandfadewin.o(i.GUI_MEMDEV_FadeOutWindow)
</UL>
<P><STRONG><a name="[3b7]"></a>_FadeWindow</STRONG> (Thumb, 312 bytes, Stack size 88 bytes, guidev_moveandfadewin.o(i._FadeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = _FadeWindow &rArr; GUI_MEMDEV_GetWindowDevice &rArr; _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__FadeDeviceEx
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateStatic
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__RemoveStaticDevice
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeOutWindow
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_FadeInWindow
</UL>

<P><STRONG><a name="[223]"></a>_OnButtonPressed</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, button.o(i._OnButtonPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[224]"></a>_OnButtonReleased</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, button.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[8]"></a>_OnTouchDefault</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, button.o(i._OnTouchDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _OnTouchDefault &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.data)
</UL>
<P><STRONG><a name="[244]"></a>_OnTouch</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, checkbox.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; CHECKBOX_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
</UL>

<P><STRONG><a name="[27a]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dropdown.o(i._Tolower))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[a8]"></a>FRAMEWIN__cbClient</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, framewin.o(i.FRAMEWIN__cbClient))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__cbClient &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(i.FRAMEWIN_CreateUser)
</UL>
<P><STRONG><a name="[2bb]"></a>_OnChildHasFocus</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, framewin.o(i._OnChildHasFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _OnChildHasFocus &rArr; _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[2b5]"></a>_OnTouch</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, framewin.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_BringToTop &rArr; _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[2c3]"></a>_SetActive</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, framewin.o(i._SetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>

<P><STRONG><a name="[a5]"></a>_Draw</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, framewin_buttonclose.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = _Draw &rArr; WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
</UL>
<P><STRONG><a name="[a6]"></a>_cbClose</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, framewin_buttonclose.o(i._cbClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = _cbClose &rArr; BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_buttonclose.o(i.FRAMEWIN_AddCloseButton)
</UL>
<P><STRONG><a name="[687]"></a>_GetDividerIndex</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, header.o(i._GetDividerIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _GetDividerIndex &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[433]"></a>_GetItemIndex</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, header.o(i._GetItemIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _GetItemIndex &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[434]"></a>_HandlePID</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, header.o(i._HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = _HandlePID &rArr; _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[692]"></a>_LimitDragWitdh</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, header.o(i._LimitDragWitdh))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = _LimitDragWitdh &rArr; HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[435]"></a>_RestoreOldCursor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, header.o(i._RestoreOldCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[455]"></a>_AlignImage</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, iconview.o(i._AlignImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AlignImage
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[c2]"></a>_DrawBitmap</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, iconview.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_AddBitmapItem)
</UL>
<P><STRONG><a name="[c4]"></a>_GetImageSizes</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, iconview.o(i._GetImageSizes))
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_AddBitmapItem)
</UL>
<P><STRONG><a name="[44b]"></a>_GetIndexFromPos</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, iconview.o(i._GetIndexFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _GetIndexFromPos &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[45a]"></a>_GetNumItemsPerLine</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, iconview.o(i._GetNumItemsPerLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
</UL>

<P><STRONG><a name="[45b]"></a>_GetNumVisLines</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, iconview.o(i._GetNumVisLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _GetNumVisLines &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW__ManageAutoScroll
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[68c]"></a>_GetRelRectFromIndex</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, iconview.o(i._GetRelRectFromIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[44d]"></a>_OnKey</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, iconview.o(i._OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = _OnKey &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[44a]"></a>_OnPaint</STRONG> (Thumb, 276 bytes, Stack size 120 bytes, iconview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[44c]"></a>_SetSel</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, iconview.o(i._SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = _SetSel &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[6a9]"></a>_UpdateScrollPos</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, iconview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _UpdateScrollPos &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[4c0]"></a>_AddKey</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, listview.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = _AddKey &rArr; _ColumnScroll &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[627]"></a>_ColumnScroll</STRONG> (Thumb, 338 bytes, Stack size 96 bytes, listview.o(i._ColumnScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = _ColumnScroll &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4c1]"></a>_FreeAttached</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, listview.o(i._FreeAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[4d2]"></a>_GetNumVisibleRows</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listview.o(i._GetNumVisibleRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[4c7]"></a>_GetSel</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, listview.o(i._GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = _GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
</UL>

<P><STRONG><a name="[625]"></a>_MoveSel</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, listview.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = _MoveSel &rArr; LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[636]"></a>_MoveSelCol</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, listview.o(i._MoveSelCol))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _MoveSelCol &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
</UL>
<BR>[Called By]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[4bf]"></a>_NotifyOwner</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, listview.o(i._NotifyOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = _NotifyOwner &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[626]"></a>_OnPage</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, listview.o(i._OnPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = _OnPage &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4bd]"></a>_OnPaint</STRONG> (Thumb, 1176 bytes, Stack size 256 bytes, listview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[4be]"></a>_SetSelFromPos</STRONG> (Thumb, 304 bytes, Stack size 120 bytes, listview.o(i._SetSelFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = _SetSelFromPos &rArr; LISTVIEW__SetSel &rArr; _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[4d1]"></a>_UpdateScrollPos</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, listview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _UpdateScrollPos &rArr; HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[546]"></a>_SetValue</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, progbar.o(i._SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _SetValue &rArr; GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[648]"></a>_DeleteTimer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scrollbar.o(i._DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = _DeleteTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[572]"></a>_OnTimer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, scrollbar.o(i._OnTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _OnTimer &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[56f]"></a>_OnTouch</STRONG> (Thumb, 526 bytes, Stack size 104 bytes, scrollbar.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[5a5]"></a>_OnTouch</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, slider.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; SLIDER_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[5b3]"></a>_Paint</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, text.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[61b]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, wm.o(i.WM__PaintWinAndOverlays))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[5df]"></a>_DeleteAllChildren</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm.o(i._DeleteAllChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[611]"></a>_DesktopHandle2Index</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(i._DesktopHandle2Index))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>

<P><STRONG><a name="[674]"></a>_DrawNext</STRONG> (Thumb, 82 bytes, Stack size 136 bytes, wm.o(i._DrawNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 772 + Unknown Stack Size
<LI>Call Chain = _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[5e2]"></a>_Exec1Draw</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm.o(i._Exec1Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 780 + Unknown Stack Size
<LI>Call Chain = _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[5e1]"></a>_Exec1Input</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, wm.o(i._Exec1Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _Exec1Input &rArr; WM_DeleteWindow &rArr; WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[616]"></a>_FindNext_IVR</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, wm.o(i._FindNext_IVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[67a]"></a>_Findx0</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[67b]"></a>_Findx1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[679]"></a>_Findy1</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[5fb]"></a>_Invalidate1Abs</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[f2]"></a>_OnExit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, wm.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[61c]"></a>_Paint1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i._Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Paint1
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[61e]"></a>_Paint1Trans</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, wm.o(i._Paint1Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Paint1Trans &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[61d]"></a>_PaintTransChildren</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, wm.o(i._PaintTransChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[610]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm.o(i._SetClipRectUserIntersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[f1]"></a>_cbBackWin</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wm.o(i._cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = _cbBackWin &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[f3]"></a>_cbPaintMemDev</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm.o(i._cbPaintMemDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM__Paint)
</UL>
<P><STRONG><a name="[5e6]"></a>_GetDialogItem</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_lib.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[f0]"></a>_cbTimer</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, wm_timer.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_timer.o(i.WM_CreateTimer)
</UL>
<P><STRONG><a name="[171]"></a>_Color2Index_16</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, guicc_16.o(i._Color2Index_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Color2Index_16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_16.o(.constdata)
</UL>
<P><STRONG><a name="[173]"></a>_GetIndexMask_16</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guicc_16.o(i._GetIndexMask_16))
<BR>[Address Reference Count : 1]<UL><LI> guicc_16.o(.constdata)
</UL>
<P><STRONG><a name="[172]"></a>_Index2Color_16</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, guicc_16.o(i._Index2Color_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2Color_16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_16.o(.constdata)
</UL>
<P><STRONG><a name="[16]"></a>_GetCharWrap</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gui__wrap.o(i._GetCharWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = _GetCharWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>_GetWordWrap</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, gui__wrap.o(i._GetWordWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _GetWordWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[430]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__wrap.o(i._WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[41f]"></a>_DispLine</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui_charline.o(i._DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DispLine &rArr; GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[17]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[aa]"></a>_OnExit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_cursor.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_cursor.o(i.GUI_CURSOR_SelectEx)
</UL>
<P><STRONG><a name="[31d]"></a>_Show</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_cursor.o(i._Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = _Show &rArr; GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[2ea]"></a>_Add</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, gui_fillpolygon.o(i._Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Add
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[693]"></a>_IncPointer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_onkey.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>

<P><STRONG><a name="[3dc]"></a>_IncReadPointer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_onkey.o(i._IncReadPointer))
<BR><BR>[Calls]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[174]"></a>_Color2Index</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._Color2Index))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[177]"></a>_Color2IndexBulk</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, gui_setalpha.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[64d]"></a>_DrawBitLine16BPP</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, gui_setalpha.o(i._DrawBitLine16BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitLine16BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[652]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 368 bytes, Stack size 80 bytes, gui_setalpha.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitLine1BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[654]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[655]"></a>_DrawBitLine32BPP</STRONG> (Thumb, 100 bytes, Stack size 72 bytes, gui_setalpha.o(i._DrawBitLine32BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitLine32BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[657]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[658]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, gui_setalpha.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine8BPP &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[179]"></a>_DrawBitmap</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, gui_setalpha.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[651]"></a>_DrawBitmapLine</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitmapLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[17a]"></a>_DrawHLine</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawHLine &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[17b]"></a>_DrawVLine</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_setalpha.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawVLine &rArr; _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[17c]"></a>_FillRect</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_setalpha.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _FillRect &rArr; _DrawHLine &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[66c]"></a>_GetBitsPerPixel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_setalpha.o(i._GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>

<P><STRONG><a name="[183]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[181]"></a>_GetDevFunc</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_setalpha.o(i._GetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[182]"></a>_GetDevProp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[176]"></a>_GetIndexMask</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetIndexMask))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[64f]"></a>_GetLine</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, gui_setalpha.o(i._GetLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[17d]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[64e]"></a>_GetPointers</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetPointers))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[184]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[175]"></a>_Index2Color</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._Index2Color))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[178]"></a>_Index2ColorBulk</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gui_setalpha.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[3eb]"></a>_InitAlpha</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, gui_setalpha.o(i._InitAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[650]"></a>_MixColors</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gui_setalpha.o(i._MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[10e]"></a>_OnExit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_setalpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i._InitAlpha)
</UL>
<P><STRONG><a name="[10d]"></a>_ReadRectFromMemdev</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, gui_setalpha.o(i._ReadRectFromMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = _ReadRectFromMemdev &rArr; GUI_MEMDEV_GetYPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i._GetLine)
</UL>
<P><STRONG><a name="[180]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setalpha.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[17e]"></a>_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_setalpha.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[17f]"></a>_XorPixel</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gui_setalpha.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[2f9]"></a>_GetTaskNo</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_task.o(i._GetTaskNo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetTaskNo
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
</UL>

<P><STRONG><a name="[a9]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_task.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_task.o(i.GUITASK_Init)
</UL>
<P><STRONG><a name="[3f7]"></a>_Link</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_timer.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[bc]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_timer.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[3f9]"></a>_RemoveFromLinList</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gui_timer.o(i._RemoveFromLinList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[3fa]"></a>_Unlink</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_timer.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[403]"></a>_Log2PhysX</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, gui_touch_calibrate.o(i._Log2PhysX))
<BR><BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalcCoefficients
</UL>

<P><STRONG><a name="[404]"></a>_Log2PhysY</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, gui_touch_calibrate.o(i._Log2PhysY))
<BR><BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalcCoefficients
</UL>

<P><STRONG><a name="[187]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[188]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[185]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[186]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[410]"></a>_WaitEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i._WaitEvent))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[189]"></a>_Color2Index_0</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[18b]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[18a]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[18e]"></a>_Color2IndexBulk</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guicc_888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[18c]"></a>_Color2Index_888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_888.o(i._Color2Index_888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[18d]"></a>_GetIndexMask_888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_888.o(i._GetIndexMask_888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[18f]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_888.o(.constdata)
</UL>
<P><STRONG><a name="[192]"></a>_Color2IndexBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[190]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888.o(i._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[191]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_8888.o(i._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[193]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[3df]"></a>LCD_ReadRectEx</STRONG> (Thumb, 404 bytes, Stack size 64 bytes, lcd_readrect.o(i.LCD_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>

<P><STRONG><a name="[665]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 276 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[666]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[664]"></a>_DrawBitLine32BPP_DDB</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, guidev_32.o(i._DrawBitLine32BPP_DDB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine32BPP_DDB
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[667]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, guidev_32.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[194]"></a>_DrawBitmap</STRONG> (Thumb, 666 bytes, Stack size 104 bytes, guidev_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[195]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[196]"></a>_DrawVLine</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, guidev_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[197]"></a>_FillRect</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, guidev_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19e]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19c]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19d]"></a>_GetDevProp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[198]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_32.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19f]"></a>_GetRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_32.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19b]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_32.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[199]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[663]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_32.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[19a]"></a>_XorPixel</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, guidev_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[3b0]"></a>_Min</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_banding.o(i._Min))
<BR><BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[621]"></a>_AddContent</STRONG> (Thumb, 154 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._AddContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = _AddContent &rArr; GUI_MEMDEV_CreateFixed &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateFixed
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetStaticDevice
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyContent
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[622]"></a>_CopyContent</STRONG> (Thumb, 464 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._CopyContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = _CopyContent &rArr; GUI_MEMDEV_GetYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>

<P><STRONG><a name="[3cf]"></a>_CreateStatic</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, guidev_staticdevices.o(i._CreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _CreateStatic &rArr;  _CreateStatic (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateStatic
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[3c5]"></a>_CreateStaticDevice</STRONG> (Thumb, 310 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._CreateStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = _CreateStaticDevice &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStatic
</UL>

<P><STRONG><a name="[3c1]"></a>_GetWindowDevice</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._GetWindowDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetWindowDevice &rArr;  _GetWindowDevice (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddContent
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetWindowDevice
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWindowDevice
</UL>

<P><STRONG><a name="[1a1]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1a0]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_USAGE_BM_AddPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1a2]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Clear))
<BR><BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1a4]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1a3]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(i._GUI_USAGE_BM_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[637]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert16 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[639]"></a>_Convert8</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert8))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert8 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3d3]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 824 bytes, Stack size 168 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[3d4]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 826 bytes, Stack size 144 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[1c]"></a>_Create</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, button_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>_Paint</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, button_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, checkbox_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>_Paint</STRONG> (Thumb, 144 bytes, Stack size 72 bytes, checkbox_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[246]"></a>_DrawBackground</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, checkbox_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[247]"></a>_DrawBitmap</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, checkbox_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[24a]"></a>_DrawFocus</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, checkbox_skinflex.o(i._DrawFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = _DrawFocus &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[668]"></a>_GenCheck</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, checkbox_skinflex.o(i._GenCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapPixel_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[67d]"></a>_SetBitmapPixel_1bpp</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, checkbox_skinflex.o(i._SetBitmapPixel_1bpp))
<BR><BR>[Called By]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>

<P><STRONG><a name="[20]"></a>_Create</STRONG> (Thumb, 40 bytes, Stack size 56 bytes, dropdown_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skin.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>_Paint</STRONG> (Thumb, 106 bytes, Stack size 80 bytes, dropdown_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skin.o(.data)
</UL>
<P><STRONG><a name="[28e]"></a>_DrawBackground</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, dropdown_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 404 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
</UL>

<P><STRONG><a name="[28f]"></a>_DrawText</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, dropdown_skinflex.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = _DrawText &rArr; GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
</UL>

<P><STRONG><a name="[23]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, framewin_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>_GetBorderSize</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, framewin_skin.o(i._GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>_Paint</STRONG> (Thumb, 264 bytes, Stack size 136 bytes, framewin_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, header_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>_Paint</STRONG> (Thumb, 272 bytes, Stack size 144 bytes, header_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[43d]"></a>_DrawArrow</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, header_skinflex.o(i._DrawArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = _DrawArrow &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[43a]"></a>_DrawBackground</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[43b]"></a>_DrawBitmap</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, header_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitmap &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[43e]"></a>_DrawOverlap</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _DrawOverlap &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[43c]"></a>_DrawText</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, header_skinflex.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = _DrawText &rArr; GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[64b]"></a>_GetArrowPara</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, header_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>

<P><STRONG><a name="[494]"></a>_AddKey</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, listbox.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[62c]"></a>_CallOwnerDraw</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, listbox.o(i._CallOwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _CallOwnerDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[4ae]"></a>_GetContentsSizeX</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, listbox.o(i._GetContentsSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = _GetContentsSizeX &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[49d]"></a>_GetItemFromPos</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, listbox.o(i._GetItemFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _GetItemFromPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[4b0]"></a>_GetItemPosY</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, listbox.o(i._GetItemPosY))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _GetItemPosY &rArr; _GetItemSizeY &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[4b1]"></a>_GetItemSizeY</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, listbox.o(i._GetItemSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _GetItemSizeY &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>

<P><STRONG><a name="[49f]"></a>_GetNumVisItems</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, listbox.o(i._GetNumVisItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _GetNumVisItems &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[68a]"></a>_GetYSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, listbox.o(i._GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
</UL>

<P><STRONG><a name="[4ad]"></a>_ManageAutoScroll</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, listbox.o(i._ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[4a3]"></a>_MoveSel</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, listbox.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 620 + Unknown Stack Size
<LI>Call Chain = _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
</UL>

<P><STRONG><a name="[49b]"></a>_NotifyOwner</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, listbox.o(i._NotifyOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _NotifyOwner &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[49c]"></a>_OnPaint</STRONG> (Thumb, 270 bytes, Stack size 112 bytes, listbox.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[49e]"></a>_ToggleMultiSel</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, listbox.o(i._ToggleMultiSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = _ToggleMultiSel &rArr; LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[628]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, listbox.o(i._Tolower))
<BR><BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[4ac]"></a>_UpdateScrollPos</STRONG> (Thumb, 214 bytes, Stack size 72 bytes, listbox.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[27]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, progbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>_Paint</STRONG> (Thumb, 320 bytes, Stack size 104 bytes, progbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[547]"></a>_DrawBackground</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, progbar_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[f5]"></a>_CalcPositions</STRONG> (Thumb, 334 bytes, Stack size 96 bytes, scrollbar_skin.o(i._CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(i._Create)
</UL>
<P><STRONG><a name="[29]"></a>_Create</STRONG> (Thumb, 52 bytes, Stack size 64 bytes, scrollbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>_Paint</STRONG> (Thumb, 186 bytes, Stack size 120 bytes, scrollbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _CalcPositions &rArr; WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[e9]"></a>_DrawBackgroundH</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundH))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _DrawBackgroundH &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[e6]"></a>_DrawBackgroundV</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundV))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _DrawBackgroundV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[64c]"></a>_DrawFrame</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _DrawFrame &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>

<P><STRONG><a name="[eb]"></a>_DrawGraspH</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspH))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = _DrawGraspH &rArr; GUI_DrawVLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[e8]"></a>_DrawGraspV</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspV))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _DrawGraspV &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[577]"></a>_GetArrowPara</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scrollbar_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[6a2]"></a>_CopyItemInfo2Rect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, slider_skin.o(i._CopyItemInfo2Rect))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2b]"></a>_Create</STRONG> (Thumb, 36 bytes, Stack size 56 bytes, slider_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>_Paint</STRONG> (Thumb, 422 bytes, Stack size 128 bytes, slider_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyItemInfo2Rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[5aa]"></a>_DrawShaftH</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, slider_skinflex.o(i._DrawShaftH))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _DrawShaftH &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[5a9]"></a>_DrawShaftV</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, slider_skinflex.o(i._DrawShaftV))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _DrawShaftV &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[5ac]"></a>_DrawThumbH</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, slider_skinflex.o(i._DrawThumbH))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _DrawThumbH &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[5ab]"></a>_DrawThumbV</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, slider_skinflex.o(i._DrawThumbV))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _DrawThumbV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[5c7]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, widget.o(i._EffectRequiresRedraw), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>

<P><STRONG><a name="[1a7]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDown))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[1a8]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDownRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[1a9]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawFlat))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[1a5]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUp))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[1a6]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUpRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[5d2]"></a>_BringToTop</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, wm_bringtotop.o(i._BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[f4]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(i._cbInvalidateOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_bringtotop.o(i._BringToTop)
</UL>
<P><STRONG><a name="[5ea]"></a>_GetDefaultWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getwindowsize.o(i._GetDefaultWin))
<BR><BR>[Calls]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[619]"></a>_MoveDescendents</STRONG> (Thumb, 110 bytes, Stack size 72 bytes, wm_move.o(i._MoveDescendents))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[600]"></a>WM__ReleaseCapture</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, wm_setcapture.o(i.WM__ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__ReleaseCapture &rArr; WM__SendMessage &rArr;  WM_DefaultProc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
</UL>

<P><STRONG><a name="[60a]"></a>_GetNextChild</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(i._GetNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetNextChild
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[60b]"></a>_GetPrevChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_setfocusonprevchild.o(i._GetPrevChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = _GetPrevChild &rArr; WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[620]"></a>_SetScrollbar</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, wm_setscrollbar.o(i._SetScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>

<P><STRONG><a name="[425]"></a>_DrawTwinArc2</STRONG> (Thumb, 262 bytes, Stack size 88 bytes, gui__drawtwinarc.o(i._DrawTwinArc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = _DrawTwinArc2 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
</UL>

<P><STRONG><a name="[426]"></a>_DrawTwinArc4</STRONG> (Thumb, 370 bytes, Stack size 112 bytes, gui__drawtwinarc.o(i._DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>

<P><STRONG><a name="[675]"></a>_GetTwinArcPara</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui__drawtwinarc.o(i._GetTwinArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>

<P><STRONG><a name="[348]"></a>_DrawGradient</STRONG> (Thumb, 340 bytes, Stack size 80 bytes, gui_drawgradient.o(i._DrawGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>

<P><STRONG><a name="[6ad]"></a>_DecPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._DecPointer))
<BR><BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[3d7]"></a>_IncPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
</UL>

<P><STRONG><a name="[b9]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[3d9]"></a>_StoreState</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, gui_pid.o(i._StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[62f]"></a>_ClipRectEx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_sprite.o(i._ClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ClipRectEx &rArr; _GetDeviceRect &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>

<P><STRONG><a name="[63b]"></a>_CreateBuffer</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, gui_sprite.o(i._CreateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[3e7]"></a>_DoColorConversion</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gui_sprite.o(i._DoColorConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[1aa]"></a>_DrawBitmap</STRONG> (Thumb, 972 bytes, Stack size 168 bytes, gui_sprite.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = _DrawBitmap &rArr; _GetClipParam
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1ab]"></a>_DrawHLine</STRONG> (Thumb, 446 bytes, Stack size 112 bytes, gui_sprite.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _DrawHLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1ac]"></a>_DrawVLine</STRONG> (Thumb, 426 bytes, Stack size 80 bytes, gui_sprite.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _DrawVLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1ad]"></a>_FillRect</STRONG> (Thumb, 484 bytes, Stack size 120 bytes, gui_sprite.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _FillRect &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[67c]"></a>_FlushBuffer</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, gui_sprite.o(i._FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[67f]"></a>_GetBkIndex</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkIndex &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[680]"></a>_GetBkIndexAlpha</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkIndexAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkIndexAlpha &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[669]"></a>_GetClipParam</STRONG> (Thumb, 320 bytes, Stack size 36 bytes, gui_sprite.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[66a]"></a>_GetClipRect</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, gui_sprite.o(i._GetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GetClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1b4]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1b2]"></a>_GetDevFunc</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_sprite.o(i._GetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1b3]"></a>_GetDevProp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[630]"></a>_GetDeviceRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_sprite.o(i._GetDeviceRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetDeviceRect &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>

<P><STRONG><a name="[1ae]"></a>_GetPixelIndex</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gui_sprite.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1b5]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[3e5]"></a>_Link</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_sprite.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Link &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[68b]"></a>_PixelExists</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_sprite.o(i._PixelExists))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>

<P><STRONG><a name="[6a3]"></a>_ReleaseBuffer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_sprite.o(i._ReleaseBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = _ReleaseBuffer &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[6a8]"></a>_SetBkIndexBuffered</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_sprite.o(i._SetBkIndexBuffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _SetBkIndexBuffered &rArr; _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[1b1]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1af]"></a>_SetPixelIndex</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, gui_sprite.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[3e3]"></a>_SetPosition</STRONG> (Thumb, 1118 bytes, Stack size 216 bytes, gui_sprite.o(i._SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[3e6]"></a>_SpriteDraw</STRONG> (Thumb, 460 bytes, Stack size 120 bytes, gui_sprite.o(i._SpriteDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[3e1]"></a>_Undraw</STRONG> (Thumb, 230 bytes, Stack size 96 bytes, gui_sprite.o(i._Undraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[3e2]"></a>_Unlink</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_sprite.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Unlink &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[1b0]"></a>_XorPixel</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, gui_sprite.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _XorPixel &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[3d2]"></a>_WriteToActiveAlpha</STRONG> (Thumb, 372 bytes, Stack size 136 bytes, guidev_writetoactivealpha.o(i._WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[1b6]"></a>_Draw</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_draw_self.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[1b7]"></a>_GetXSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_draw_self.o(i._GetXSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[1b8]"></a>_GetYSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_draw_self.o(i._GetYSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_draw_self.o(.constdata)
</UL>
<P><STRONG><a name="[1bb]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[1bc]"></a>_DrawDownRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[1b9]"></a>_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = _DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[1ba]"></a>_DrawUpRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_RdyListRemove &rArr; OS_PrioRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[6a5]"></a>_Screen2hWin</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wm_screen2win.o(i._Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInWindow
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[602]"></a>_Screen2hWinStop</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_screen2win.o(i._Screen2hWinStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Screen2hWinStop &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindowEx
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>

<P><STRONG><a name="[6c4]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6af]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[6c6]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6c5]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[113]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
